;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 8.10.2018. 14:36:39
;----------------------------------------------

;Address Opcode 	ASM
____SysVT:
0x0000	0xFFFC2000  	536936444
0x0004	0x1E950000  	7829
0x0008	0x1EB50000  	7861
0x000C	0x1EB50000  	7861
0x0010	0x1EB50000  	7861
0x0014	0x1EB50000  	7861
0x0018	0x1EB50000  	7861
0x001C	0x1EB50000  	7861
0x0020	0x1EB50000  	7861
0x0024	0x1EB50000  	7861
0x0028	0x1EB50000  	7861
0x002C	0x1EB50000  	7861
0x0030	0x1EB50000  	7861
0x0034	0x1EB50000  	7861
0x0038	0x1EB50000  	7861
0x003C	0x1EB50000  	7861
0x0040	0x1EB50000  	7861
0x0044	0x1EB50000  	7861
0x0048	0x1EB50000  	7861
0x004C	0x1EB50000  	7861
0x0050	0x1EB50000  	7861
0x0054	0x1EB50000  	7861
0x0058	0x1EB50000  	7861
0x005C	0x1EB50000  	7861
0x0060	0x1EB50000  	7861
0x0064	0x1EB50000  	7861
0x0068	0x1EB50000  	7861
0x006C	0x1EB50000  	7861
0x0070	0x1EB50000  	7861
0x0074	0x1EB50000  	7861
0x0078	0x1EB50000  	7861
0x007C	0x1EB50000  	7861
0x0080	0x1EB50000  	7861
0x0084	0x1EB50000  	7861
0x0088	0x1EB50000  	7861
0x008C	0x1EB50000  	7861
0x0090	0x1EB50000  	7861
0x0094	0x1EB50000  	7861
0x0098	0x1EB50000  	7861
0x009C	0x1EB50000  	7861
0x00A0	0x1EB50000  	7861
0x00A4	0x1EB50000  	7861
0x00A8	0x1EB50000  	7861
0x00AC	0x1EB50000  	7861
0x00B0	0x1E750000  	7797
0x00B4	0x1EB50000  	7861
0x00B8	0x1EB50000  	7861
0x00BC	0x1EB50000  	7861
0x00C0	0x1EB50000  	7861
0x00C4	0x1EB50000  	7861
0x00C8	0x1EB50000  	7861
0x00CC	0x1EB50000  	7861
0x00D0	0x1EB50000  	7861
0x00D4	0x1EB50000  	7861
0x00D8	0x1EB50000  	7861
0x00DC	0x1EB50000  	7861
0x00E0	0x1EB50000  	7861
0x00E4	0x1EB50000  	7861
0x00E8	0x1EB50000  	7861
0x00EC	0x1EB50000  	7861
0x00F0	0x1EB50000  	7861
0x00F4	0x1EB50000  	7861
0x00F8	0x1EB50000  	7861
0x00FC	0x1EB50000  	7861
0x0100	0x1EB50000  	7861
0x0104	0x1EB50000  	7861
0x0108	0x1EB50000  	7861
0x010C	0x1EB50000  	7861
0x0110	0x1EB50000  	7861
0x0114	0x1EB50000  	7861
0x0118	0x1EB50000  	7861
0x011C	0x1EB50000  	7861
0x0120	0x1EB50000  	7861
0x0124	0x1EB50000  	7861
0x0128	0x1EB50000  	7861
0x012C	0x1EB50000  	7861
0x0130	0x1EB50000  	7861
0x0134	0x1EB50000  	7861
0x0138	0x1EB50000  	7861
0x013C	0x1EB50000  	7861
0x0140	0x1EB50000  	7861
0x0144	0x1EB50000  	7861
0x0148	0x1EB50000  	7861
0x014C	0x1EB50000  	7861
; end of ____SysVT
_main:
;Click_NBIoT_STM.c, 136 :: 		void main()
0x1E94	0xF000F812  BL	7868
0x1E98	0xF000FB08  BL	9388
0x1E9C	0xF000F8B0  BL	8192
0x1EA0	0xF000FAC4  BL	9260
;Click_NBIoT_STM.c, 138 :: 		systemInit();
0x1EA4	0xF7FFFF14  BL	_systemInit+0
;Click_NBIoT_STM.c, 139 :: 		applicationInit();
0x1EA8	0xF7FFFF36  BL	_applicationInit+0
;Click_NBIoT_STM.c, 141 :: 		while (1)
L_main0:
;Click_NBIoT_STM.c, 143 :: 		applicationTask();
0x1EAC	0xF7FFFE78  BL	_applicationTask+0
;Click_NBIoT_STM.c, 144 :: 		}
0x1EB0	0xE7FC    B	L_main0
;Click_NBIoT_STM.c, 145 :: 		}
L_end_main:
L__main_end_loop:
0x1EB2	0xE7FE    B	L__main_end_loop
; end of _main
___CC2DW:
;__Lib_System_105_107.c, 28 :: 		
0x1CBC	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 30 :: 		
L_loopDW:
;__Lib_System_105_107.c, 31 :: 		
0x1CBE	0xF81C9B01  LDRB	R9, [R12], #1
;__Lib_System_105_107.c, 32 :: 		
0x1CC2	0xF80B9B01  STRB	R9, [R11], #1
;__Lib_System_105_107.c, 33 :: 		
0x1CC6	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 34 :: 		
0x1CCA	0xD1F8    BNE	L_loopDW
;__Lib_System_105_107.c, 36 :: 		
L_end___CC2DW:
0x1CCC	0xB001    ADD	SP, SP, #4
0x1CCE	0x4770    BX	LR
; end of ___CC2DW
___FillZeros:
;__Lib_System_105_107.c, 70 :: 		
0x1E38	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 72 :: 		
0x1E3A	0xF04F0900  MOV	R9, #0
;__Lib_System_105_107.c, 73 :: 		
0x1E3E	0xF04F0C00  MOV	R12, #0
;__Lib_System_105_107.c, 74 :: 		
0x1E42	0xEBBD0F0A  CMP	SP, R10, LSL #0
;__Lib_System_105_107.c, 75 :: 		
0x1E46	0xDC04    BGT	L_loopFZs
;__Lib_System_105_107.c, 76 :: 		
0x1E48	0xEBBD0F0B  CMP	SP, R11, LSL #0
;__Lib_System_105_107.c, 77 :: 		
0x1E4C	0xDB01    BLT	L_loopFZs
;__Lib_System_105_107.c, 78 :: 		
0x1E4E	0x46D4    MOV	R12, R10
;__Lib_System_105_107.c, 79 :: 		
0x1E50	0x46EA    MOV	R10, SP
;__Lib_System_105_107.c, 80 :: 		
L_loopFZs:
;__Lib_System_105_107.c, 81 :: 		
0x1E52	0xF84B9B04  STR	R9, [R11], #4
;__Lib_System_105_107.c, 82 :: 		
0x1E56	0xEBBB0F0A  CMP	R11, R10, LSL #0
;__Lib_System_105_107.c, 83 :: 		
0x1E5A	0xD1FA    BNE	L_loopFZs
;__Lib_System_105_107.c, 84 :: 		
0x1E5C	0xEBBC0F0A  CMP	R12, R10, LSL #0
;__Lib_System_105_107.c, 85 :: 		
0x1E60	0xDD05    BLE	L_norep
;__Lib_System_105_107.c, 86 :: 		
0x1E62	0x46E2    MOV	R10, R12
;__Lib_System_105_107.c, 87 :: 		
0x1E64	0xF8D9B000  LDR	R11, [R9, #0]
;__Lib_System_105_107.c, 88 :: 		
0x1E68	0xF10B0B04  ADD	R11, R11, #4
;__Lib_System_105_107.c, 89 :: 		
0x1E6C	0xE7F1    B	L_loopFZs
;__Lib_System_105_107.c, 90 :: 		
L_norep:
;__Lib_System_105_107.c, 92 :: 		
L_end___FillZeros:
0x1E6E	0xB001    ADD	SP, SP, #4
0x1E70	0x4770    BX	LR
; end of ___FillZeros
_systemInit:
;Click_NBIoT_STM.c, 67 :: 		void systemInit()
0x1CD0	0xB081    SUB	SP, SP, #4
0x1CD2	0xF8CDE000  STR	LR, [SP, #0]
;Click_NBIoT_STM.c, 69 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_AN_PIN, _GPIO_INPUT );
0x1CD6	0x2201    MOVS	R2, #1
0x1CD8	0x2100    MOVS	R1, #0
0x1CDA	0x2000    MOVS	R0, #0
0x1CDC	0xF7FFFDC8  BL	_mikrobus_gpioInit+0
;Click_NBIoT_STM.c, 70 :: 		mikrobus_gpioInit( _MIKROBUS1, _MIKROBUS_RST_PIN, _GPIO_OUTPUT );
0x1CE0	0x2200    MOVS	R2, #0
0x1CE2	0x2101    MOVS	R1, #1
0x1CE4	0x2000    MOVS	R0, #0
0x1CE6	0xF7FFFDC3  BL	_mikrobus_gpioInit+0
;Click_NBIoT_STM.c, 71 :: 		mikrobus_uartInit( _MIKROBUS1, &_NBIOT_UART_CFG[0] );
0x1CEA	0x4809    LDR	R0, [PC, #36]
0x1CEC	0x4601    MOV	R1, R0
0x1CEE	0x2000    MOVS	R0, #0
0x1CF0	0xF7FFFDA6  BL	_mikrobus_uartInit+0
;Click_NBIoT_STM.c, 72 :: 		mikrobus_logInit( _LOG_USBUART_A, 9600 );
0x1CF4	0xF2425180  MOVW	R1, #9600
0x1CF8	0x2020    MOVS	R0, #32
0x1CFA	0xF7FFFDF9  BL	_mikrobus_logInit+0
;Click_NBIoT_STM.c, 73 :: 		mikrobus_logWrite("--- System Init ---", _LOG_LINE);
0x1CFE	0x4805    LDR	R0, [PC, #20]
0x1D00	0x2102    MOVS	R1, #2
0x1D02	0xF7FFFE19  BL	_mikrobus_logWrite+0
;Click_NBIoT_STM.c, 74 :: 		}
L_end_systemInit:
0x1D06	0xF8DDE000  LDR	LR, [SP, #0]
0x1D0A	0xB001    ADD	SP, SP, #4
0x1D0C	0x4770    BX	LR
0x1D0E	0xBF00    NOP
0x1D10	0x23FC0000  	__NBIOT_UART_CFG+0
0x1D14	0x00002000  	?lstr1_Click_NBIoT_STM+0
; end of _systemInit
_mikrobus_gpioInit:
;easymx_v7_STM32F107VC.c, 162 :: 		T_mikrobus_ret mikrobus_gpioInit(T_mikrobus_soc bus, T_mikrobus_pin pin, T_gpio_dir direction)
; direction start address is: 8 (R2)
; pin start address is: 4 (R1)
; bus start address is: 0 (R0)
0x1870	0xB081    SUB	SP, SP, #4
0x1872	0xF8CDE000  STR	LR, [SP, #0]
0x1876	0xFA5FF981  UXTB	R9, R1
0x187A	0xFA5FFA82  UXTB	R10, R2
; direction end address is: 8 (R2)
; pin end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; pin start address is: 36 (R9)
; direction start address is: 40 (R10)
;easymx_v7_STM32F107VC.c, 164 :: 		switch( bus )
0x187E	0xE00F    B	L_mikrobus_gpioInit78
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 167 :: 		case _MIKROBUS1 : return _gpioInit_1(pin, direction);
L_mikrobus_gpioInit80:
0x1880	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x1884	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x1888	0xF7FFFE34  BL	easymx_v7_STM32F107VC__gpioInit_1+0
0x188C	0xE00D    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 170 :: 		case _MIKROBUS2 : return _gpioInit_2(pin, direction);
L_mikrobus_gpioInit81:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
0x188E	0xFA5FF18A  UXTB	R1, R10
; direction end address is: 40 (R10)
0x1892	0xFA5FF089  UXTB	R0, R9
; pin end address is: 36 (R9)
0x1896	0xF7FFFD51  BL	easymx_v7_STM32F107VC__gpioInit_2+0
0x189A	0xE006    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 184 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_gpioInit82:
0x189C	0x2001    MOVS	R0, #1
0x189E	0xE004    B	L_end_mikrobus_gpioInit
;easymx_v7_STM32F107VC.c, 185 :: 		}
L_mikrobus_gpioInit78:
; direction start address is: 40 (R10)
; pin start address is: 36 (R9)
; bus start address is: 0 (R0)
0x18A0	0x2800    CMP	R0, #0
0x18A2	0xD0ED    BEQ	L_mikrobus_gpioInit80
0x18A4	0x2801    CMP	R0, #1
0x18A6	0xD0F2    BEQ	L_mikrobus_gpioInit81
; bus end address is: 0 (R0)
; pin end address is: 36 (R9)
; direction end address is: 40 (R10)
0x18A8	0xE7F8    B	L_mikrobus_gpioInit82
;easymx_v7_STM32F107VC.c, 187 :: 		}
L_end_mikrobus_gpioInit:
0x18AA	0xF8DDE000  LDR	LR, [SP, #0]
0x18AE	0xB001    ADD	SP, SP, #4
0x18B0	0x4770    BX	LR
; end of _mikrobus_gpioInit
easymx_v7_STM32F107VC__gpioInit_1:
;__em_f107vc_gpio.c, 81 :: 		static T_mikrobus_ret _gpioInit_1(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x14F4	0xB081    SUB	SP, SP, #4
0x14F6	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 83 :: 		switch( pin )
0x14FA	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_10
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 85 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_4 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_4 ); break;
L_easymx_v7_STM32F107VC__gpioInit_12:
0x14FC	0x2901    CMP	R1, #1
0x14FE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_13
; dir end address is: 4 (R1)
0x1500	0xF2400110  MOVW	R1, #16
0x1504	0x4865    LDR	R0, [PC, #404]
0x1506	0xF7FFFB75  BL	_GPIO_Digital_Input+0
0x150A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_14
L_easymx_v7_STM32F107VC__gpioInit_13:
0x150C	0xF2400110  MOVW	R1, #16
0x1510	0x4862    LDR	R0, [PC, #392]
0x1512	0xF7FFFB89  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_14:
0x1516	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 86 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_2 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_2 ); break;
L_easymx_v7_STM32F107VC__gpioInit_15:
; dir start address is: 4 (R1)
0x1518	0x2901    CMP	R1, #1
0x151A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_16
; dir end address is: 4 (R1)
0x151C	0xF2400104  MOVW	R1, #4
0x1520	0x485F    LDR	R0, [PC, #380]
0x1522	0xF7FFFB67  BL	_GPIO_Digital_Input+0
0x1526	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_17
L_easymx_v7_STM32F107VC__gpioInit_16:
0x1528	0xF2400104  MOVW	R1, #4
0x152C	0x485C    LDR	R0, [PC, #368]
0x152E	0xF7FFFB7B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_17:
0x1532	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 87 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_13); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_13); break;
L_easymx_v7_STM32F107VC__gpioInit_18:
; dir start address is: 4 (R1)
0x1534	0x2901    CMP	R1, #1
0x1536	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_19
; dir end address is: 4 (R1)
0x1538	0xF2420100  MOVW	R1, #8192
0x153C	0x4859    LDR	R0, [PC, #356]
0x153E	0xF7FFFB59  BL	_GPIO_Digital_Input+0
0x1542	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_110
L_easymx_v7_STM32F107VC__gpioInit_19:
0x1544	0xF2420100  MOVW	R1, #8192
0x1548	0x4856    LDR	R0, [PC, #344]
0x154A	0xF7FFFB6D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_110:
0x154E	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 88 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_111:
; dir start address is: 4 (R1)
0x1550	0x2901    CMP	R1, #1
0x1552	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_112
; dir end address is: 4 (R1)
0x1554	0xF2404100  MOVW	R1, #1024
0x1558	0x4851    LDR	R0, [PC, #324]
0x155A	0xF7FFFB4B  BL	_GPIO_Digital_Input+0
0x155E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_113
L_easymx_v7_STM32F107VC__gpioInit_112:
0x1560	0xF2404100  MOVW	R1, #1024
0x1564	0x484E    LDR	R0, [PC, #312]
0x1566	0xF7FFFB5F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_113:
0x156A	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 89 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_114:
; dir start address is: 4 (R1)
0x156C	0x2901    CMP	R1, #1
0x156E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_115
; dir end address is: 4 (R1)
0x1570	0xF6400100  MOVW	R1, #2048
0x1574	0x484A    LDR	R0, [PC, #296]
0x1576	0xF7FFFB3D  BL	_GPIO_Digital_Input+0
0x157A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_116
L_easymx_v7_STM32F107VC__gpioInit_115:
0x157C	0xF6400100  MOVW	R1, #2048
0x1580	0x4847    LDR	R0, [PC, #284]
0x1582	0xF7FFFB51  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_116:
0x1586	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 90 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_117:
; dir start address is: 4 (R1)
0x1588	0x2901    CMP	R1, #1
0x158A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_118
; dir end address is: 4 (R1)
0x158C	0xF2410100  MOVW	R1, #4096
0x1590	0x4843    LDR	R0, [PC, #268]
0x1592	0xF7FFFB2F  BL	_GPIO_Digital_Input+0
0x1596	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_119
L_easymx_v7_STM32F107VC__gpioInit_118:
0x1598	0xF2410100  MOVW	R1, #4096
0x159C	0x4840    LDR	R0, [PC, #256]
0x159E	0xF7FFFB43  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_119:
0x15A2	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 91 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_0 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_0 ); break;
L_easymx_v7_STM32F107VC__gpioInit_120:
; dir start address is: 4 (R1)
0x15A4	0x2901    CMP	R1, #1
0x15A6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_121
; dir end address is: 4 (R1)
0x15A8	0xF2400101  MOVW	R1, #1
0x15AC	0x483B    LDR	R0, [PC, #236]
0x15AE	0xF7FFFB21  BL	_GPIO_Digital_Input+0
0x15B2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_122
L_easymx_v7_STM32F107VC__gpioInit_121:
0x15B4	0xF2400101  MOVW	R1, #1
0x15B8	0x4838    LDR	R0, [PC, #224]
0x15BA	0xF7FFFB35  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_122:
0x15BE	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 92 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_123:
; dir start address is: 4 (R1)
0x15C0	0x2901    CMP	R1, #1
0x15C2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_124
; dir end address is: 4 (R1)
0x15C4	0xF2404100  MOVW	R1, #1024
0x15C8	0x4836    LDR	R0, [PC, #216]
0x15CA	0xF7FFFB13  BL	_GPIO_Digital_Input+0
0x15CE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_125
L_easymx_v7_STM32F107VC__gpioInit_124:
0x15D0	0xF2404100  MOVW	R1, #1024
0x15D4	0x4833    LDR	R0, [PC, #204]
0x15D6	0xF7FFFB27  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_125:
0x15DA	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 93 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_9 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_9 ); break;
L_easymx_v7_STM32F107VC__gpioInit_126:
; dir start address is: 4 (R1)
0x15DC	0x2901    CMP	R1, #1
0x15DE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_127
; dir end address is: 4 (R1)
0x15E0	0xF2402100  MOVW	R1, #512
0x15E4	0x482F    LDR	R0, [PC, #188]
0x15E6	0xF7FFFB05  BL	_GPIO_Digital_Input+0
0x15EA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_128
L_easymx_v7_STM32F107VC__gpioInit_127:
0x15EC	0xF2402100  MOVW	R1, #512
0x15F0	0x482C    LDR	R0, [PC, #176]
0x15F2	0xF7FFFB19  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_128:
0x15F6	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 94 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_8 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_8 ); break;
L_easymx_v7_STM32F107VC__gpioInit_129:
; dir start address is: 4 (R1)
0x15F8	0x2901    CMP	R1, #1
0x15FA	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_130
; dir end address is: 4 (R1)
0x15FC	0xF2401100  MOVW	R1, #256
0x1600	0x4828    LDR	R0, [PC, #160]
0x1602	0xF7FFFAF7  BL	_GPIO_Digital_Input+0
0x1606	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_131
L_easymx_v7_STM32F107VC__gpioInit_130:
0x1608	0xF2401100  MOVW	R1, #256
0x160C	0x4825    LDR	R0, [PC, #148]
0x160E	0xF7FFFB0B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_131:
0x1612	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 95 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_132:
; dir start address is: 4 (R1)
0x1614	0x2901    CMP	R1, #1
0x1616	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_133
; dir end address is: 4 (R1)
0x1618	0xF2400140  MOVW	R1, #64
0x161C	0x4822    LDR	R0, [PC, #136]
0x161E	0xF7FFFAE9  BL	_GPIO_Digital_Input+0
0x1622	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_134
L_easymx_v7_STM32F107VC__gpioInit_133:
0x1624	0xF2400140  MOVW	R1, #64
0x1628	0x481F    LDR	R0, [PC, #124]
0x162A	0xF7FFFAFD  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_134:
0x162E	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 96 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_135:
; dir start address is: 4 (R1)
0x1630	0x2901    CMP	R1, #1
0x1632	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_136
; dir end address is: 4 (R1)
0x1634	0xF2400180  MOVW	R1, #128
0x1638	0x481B    LDR	R0, [PC, #108]
0x163A	0xF7FFFADB  BL	_GPIO_Digital_Input+0
0x163E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_137
L_easymx_v7_STM32F107VC__gpioInit_136:
0x1640	0xF2400180  MOVW	R1, #128
0x1644	0x4818    LDR	R0, [PC, #96]
0x1646	0xF7FFFAEF  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_137:
0x164A	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_11
;__em_f107vc_gpio.c, 97 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_138:
0x164C	0x2001    MOVS	R0, #1
0x164E	0xE020    B	L_end__gpioInit_1
;__em_f107vc_gpio.c, 98 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_10:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1650	0x2800    CMP	R0, #0
0x1652	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_12
0x1656	0x2801    CMP	R0, #1
0x1658	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_15
0x165C	0x2802    CMP	R0, #2
0x165E	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_18
0x1662	0x2803    CMP	R0, #3
0x1664	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_111
0x1668	0x2804    CMP	R0, #4
0x166A	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_114
0x166E	0x2805    CMP	R0, #5
0x1670	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_117
0x1674	0x2806    CMP	R0, #6
0x1676	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_120
0x167A	0x2807    CMP	R0, #7
0x167C	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_123
0x167E	0x2808    CMP	R0, #8
0x1680	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_126
0x1682	0x2809    CMP	R0, #9
0x1684	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_129
0x1686	0x280A    CMP	R0, #10
0x1688	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_132
0x168A	0x280B    CMP	R0, #11
0x168C	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_135
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x168E	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_138
L_easymx_v7_STM32F107VC__gpioInit_11:
;__em_f107vc_gpio.c, 99 :: 		return _MIKROBUS_OK;
0x1690	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 100 :: 		}
L_end__gpioInit_1:
0x1692	0xF8DDE000  LDR	LR, [SP, #0]
0x1696	0xB001    ADD	SP, SP, #4
0x1698	0x4770    BX	LR
0x169A	0xBF00    NOP
0x169C	0x08004001  	GPIOA_BASE+0
0x16A0	0x10004001  	GPIOC_BASE+0
0x16A4	0x14004001  	GPIOD_BASE+0
0x16A8	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_1
_GPIO_Digital_Input:
;__Lib_GPIO_32F10x.c, 369 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0BF4	0xB081    SUB	SP, SP, #4
0x0BF6	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 370 :: 		
0x0BFA	0xF04F0242  MOV	R2, #66
0x0BFE	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0C00	0xF7FFFEA0  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 371 :: 		
L_end_GPIO_Digital_Input:
0x0C04	0xF8DDE000  LDR	LR, [SP, #0]
0x0C08	0xB001    ADD	SP, SP, #4
0x0C0A	0x4770    BX	LR
; end of _GPIO_Digital_Input
_GPIO_Config:
;__Lib_GPIO_32F10x.c, 124 :: 		
; config start address is: 8 (R2)
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0944	0xB081    SUB	SP, SP, #4
0x0946	0xF8CDE000  STR	LR, [SP, #0]
0x094A	0xB28C    UXTH	R4, R1
0x094C	0x4615    MOV	R5, R2
; config end address is: 8 (R2)
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 16 (R4)
; config start address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 129 :: 		
0x094E	0x4B77    LDR	R3, [PC, #476]
0x0950	0xEA000303  AND	R3, R0, R3, LSL #0
; port end address is: 0 (R0)
; port start address is: 24 (R6)
0x0954	0x461E    MOV	R6, R3
;__Lib_GPIO_32F10x.c, 131 :: 		
0x0956	0x4618    MOV	R0, R3
0x0958	0xF7FFFC64  BL	_GPIO_Clk_Enable+0
;__Lib_GPIO_32F10x.c, 134 :: 		
0x095C	0xF1B40FFF  CMP	R4, #255
0x0960	0xD10C    BNE	L_GPIO_Config18
;__Lib_GPIO_32F10x.c, 135 :: 		
0x0962	0x4B73    LDR	R3, [PC, #460]
0x0964	0x429D    CMP	R5, R3
0x0966	0xD103    BNE	L_GPIO_Config19
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 136 :: 		
0x0968	0xF04F3333  MOV	R3, #858993459
0x096C	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 137 :: 		
0x096E	0xE0D9    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 138 :: 		
L_GPIO_Config19:
;__Lib_GPIO_32F10x.c, 139 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x0970	0x2D42    CMP	R5, #66
0x0972	0xD103    BNE	L_GPIO_Config20
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 140 :: 		
0x0974	0xF04F3344  MOV	R3, #1145324612
0x0978	0x6033    STR	R3, [R6, #0]
; port end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 141 :: 		
0x097A	0xE0D3    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 142 :: 		
L_GPIO_Config20:
;__Lib_GPIO_32F10x.c, 143 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config18:
;__Lib_GPIO_32F10x.c, 145 :: 		
0x097C	0xF64F73FF  MOVW	R3, #65535
0x0980	0x429C    CMP	R4, R3
0x0982	0xD114    BNE	L_GPIO_Config21
;__Lib_GPIO_32F10x.c, 146 :: 		
0x0984	0x4B6A    LDR	R3, [PC, #424]
0x0986	0x429D    CMP	R5, R3
0x0988	0xD107    BNE	L_GPIO_Config22
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 147 :: 		
0x098A	0xF04F3333  MOV	R3, #858993459
0x098E	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 148 :: 		
0x0990	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x0992	0xF04F3333  MOV	R3, #858993459
0x0996	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 149 :: 		
0x0998	0xE0C4    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 150 :: 		
L_GPIO_Config22:
;__Lib_GPIO_32F10x.c, 151 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
0x099A	0x2D42    CMP	R5, #66
0x099C	0xD107    BNE	L_GPIO_Config23
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
;__Lib_GPIO_32F10x.c, 152 :: 		
0x099E	0xF04F3344  MOV	R3, #1145324612
0x09A2	0x6033    STR	R3, [R6, #0]
;__Lib_GPIO_32F10x.c, 153 :: 		
0x09A4	0x1D34    ADDS	R4, R6, #4
; port end address is: 24 (R6)
0x09A6	0xF04F3344  MOV	R3, #1145324612
0x09AA	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 154 :: 		
0x09AC	0xE0BA    B	L_end_GPIO_Config
;__Lib_GPIO_32F10x.c, 155 :: 		
L_GPIO_Config23:
;__Lib_GPIO_32F10x.c, 156 :: 		
; port start address is: 24 (R6)
; config start address is: 20 (R5)
; pin_mask start address is: 16 (R4)
L_GPIO_Config21:
;__Lib_GPIO_32F10x.c, 158 :: 		
; currentmode start address is: 4 (R1)
0x09AE	0x2100    MOVS	R1, #0
;__Lib_GPIO_32F10x.c, 159 :: 		
; speed start address is: 0 (R0)
0x09B0	0x2000    MOVS	R0, #0
;__Lib_GPIO_32F10x.c, 161 :: 		
0x09B2	0xF0050301  AND	R3, R5, #1
0x09B6	0xB10B    CBZ	R3, L_GPIO_Config24
;__Lib_GPIO_32F10x.c, 162 :: 		
0x09B8	0x2100    MOVS	R1, #0
0x09BA	0xE01D    B	L_GPIO_Config25
L_GPIO_Config24:
;__Lib_GPIO_32F10x.c, 163 :: 		
0x09BC	0xF0050302  AND	R3, R5, #2
0x09C0	0xB133    CBZ	R3, L_GPIO_Config26
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 164 :: 		
0x09C2	0xF40573C0  AND	R3, R5, #384
0x09C6	0xB10B    CBZ	R3, L_GPIO_Config27
;__Lib_GPIO_32F10x.c, 165 :: 		
; currentmode start address is: 4 (R1)
0x09C8	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
0x09CA	0xE000    B	L_GPIO_Config28
L_GPIO_Config27:
;__Lib_GPIO_32F10x.c, 167 :: 		
; currentmode start address is: 4 (R1)
0x09CC	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
L_GPIO_Config28:
;__Lib_GPIO_32F10x.c, 168 :: 		
; currentmode start address is: 4 (R1)
0x09CE	0xE013    B	L_GPIO_Config29
L_GPIO_Config26:
;__Lib_GPIO_32F10x.c, 169 :: 		
0x09D0	0xF0050304  AND	R3, R5, #4
0x09D4	0xB133    CBZ	R3, L_GPIO_Config30
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 170 :: 		
0x09D6	0xF0050320  AND	R3, R5, #32
0x09DA	0xB10B    CBZ	R3, L_GPIO_Config31
;__Lib_GPIO_32F10x.c, 171 :: 		
; currentmode start address is: 4 (R1)
0x09DC	0x2104    MOVS	R1, #4
; currentmode end address is: 4 (R1)
0x09DE	0xE000    B	L_GPIO_Config32
L_GPIO_Config31:
;__Lib_GPIO_32F10x.c, 173 :: 		
; currentmode start address is: 4 (R1)
0x09E0	0x2100    MOVS	R1, #0
; currentmode end address is: 4 (R1)
L_GPIO_Config32:
;__Lib_GPIO_32F10x.c, 174 :: 		
; currentmode start address is: 4 (R1)
0x09E2	0xE009    B	L_GPIO_Config33
L_GPIO_Config30:
;__Lib_GPIO_32F10x.c, 175 :: 		
0x09E4	0xF0050308  AND	R3, R5, #8
0x09E8	0xB133    CBZ	R3, L__GPIO_Config100
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 176 :: 		
0x09EA	0xF0050320  AND	R3, R5, #32
0x09EE	0xB10B    CBZ	R3, L_GPIO_Config35
;__Lib_GPIO_32F10x.c, 177 :: 		
; currentmode start address is: 4 (R1)
0x09F0	0x210C    MOVS	R1, #12
; currentmode end address is: 4 (R1)
0x09F2	0xE000    B	L_GPIO_Config36
L_GPIO_Config35:
;__Lib_GPIO_32F10x.c, 179 :: 		
; currentmode start address is: 4 (R1)
0x09F4	0x2108    MOVS	R1, #8
; currentmode end address is: 4 (R1)
L_GPIO_Config36:
;__Lib_GPIO_32F10x.c, 180 :: 		
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
0x09F6	0xE7FF    B	L_GPIO_Config34
L__GPIO_Config100:
;__Lib_GPIO_32F10x.c, 175 :: 		
;__Lib_GPIO_32F10x.c, 180 :: 		
L_GPIO_Config34:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config33:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config29:
; currentmode start address is: 4 (R1)
; currentmode end address is: 4 (R1)
L_GPIO_Config25:
;__Lib_GPIO_32F10x.c, 182 :: 		
; currentmode start address is: 4 (R1)
0x09F8	0x4B4E    LDR	R3, [PC, #312]
0x09FA	0xEA050303  AND	R3, R5, R3, LSL #0
0x09FE	0xB10B    CBZ	R3, L_GPIO_Config37
;__Lib_GPIO_32F10x.c, 183 :: 		
0x0A00	0x2003    MOVS	R0, #3
0x0A02	0xE009    B	L_GPIO_Config38
L_GPIO_Config37:
;__Lib_GPIO_32F10x.c, 184 :: 		
0x0A04	0xF4057300  AND	R3, R5, #512
0x0A08	0xB10B    CBZ	R3, L_GPIO_Config39
;__Lib_GPIO_32F10x.c, 185 :: 		
0x0A0A	0x2002    MOVS	R0, #2
0x0A0C	0xE004    B	L_GPIO_Config40
L_GPIO_Config39:
;__Lib_GPIO_32F10x.c, 186 :: 		
0x0A0E	0xF4056380  AND	R3, R5, #1024
0x0A12	0xB10B    CBZ	R3, L__GPIO_Config101
;__Lib_GPIO_32F10x.c, 187 :: 		
0x0A14	0x2001    MOVS	R0, #1
; speed end address is: 0 (R0)
0x0A16	0xE7FF    B	L_GPIO_Config41
L__GPIO_Config101:
;__Lib_GPIO_32F10x.c, 186 :: 		
;__Lib_GPIO_32F10x.c, 187 :: 		
L_GPIO_Config41:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config40:
; speed start address is: 0 (R0)
; speed end address is: 0 (R0)
L_GPIO_Config38:
;__Lib_GPIO_32F10x.c, 189 :: 		
; speed start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 195 :: 		
0x0A18	0xF005030C  AND	R3, R5, #12
0x0A1C	0xB10B    CBZ	R3, L__GPIO_Config102
;__Lib_GPIO_32F10x.c, 198 :: 		
0x0A1E	0x4301    ORRS	R1, R0
; speed end address is: 0 (R0)
; currentmode end address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 199 :: 		
0x0A20	0xE7FF    B	L_GPIO_Config42
L__GPIO_Config102:
;__Lib_GPIO_32F10x.c, 195 :: 		
;__Lib_GPIO_32F10x.c, 199 :: 		
L_GPIO_Config42:
;__Lib_GPIO_32F10x.c, 201 :: 		
; currentmode start address is: 4 (R1)
0x0A22	0xF00403FF  AND	R3, R4, #255
0x0A26	0xB29B    UXTH	R3, R3
0x0A28	0x2B00    CMP	R3, #0
0x0A2A	0xD03B    BEQ	L__GPIO_Config104
;__Lib_GPIO_32F10x.c, 202 :: 		
0x0A2C	0x6837    LDR	R7, [R6, #0]
; tmpreg start address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 204 :: 		
; pinpos start address is: 0 (R0)
0x0A2E	0x2000    MOVS	R0, #0
; pin_mask end address is: 16 (R4)
; config end address is: 20 (R5)
; currentmode end address is: 4 (R1)
; tmpreg end address is: 28 (R7)
; pinpos end address is: 0 (R0)
; port end address is: 24 (R6)
0x0A30	0xFA1FF884  UXTH	R8, R4
0x0A34	0x4632    MOV	R2, R6
0x0A36	0x462E    MOV	R6, R5
L_GPIO_Config44:
; pinpos start address is: 0 (R0)
; tmpreg start address is: 28 (R7)
; currentmode start address is: 4 (R1)
; port start address is: 8 (R2)
; config start address is: 24 (R6)
; pin_mask start address is: 32 (R8)
0x0A38	0x2808    CMP	R0, #8
0x0A3A	0xD22C    BCS	L_GPIO_Config45
;__Lib_GPIO_32F10x.c, 206 :: 		
0x0A3C	0xF04F0301  MOV	R3, #1
0x0A40	0xFA03F400  LSL	R4, R3, R0
;__Lib_GPIO_32F10x.c, 208 :: 		
0x0A44	0xEA080304  AND	R3, R8, R4, LSL #0
;__Lib_GPIO_32F10x.c, 210 :: 		
0x0A48	0x42A3    CMP	R3, R4
0x0A4A	0xD122    BNE	L__GPIO_Config103
;__Lib_GPIO_32F10x.c, 212 :: 		
0x0A4C	0x0085    LSLS	R5, R0, #2
;__Lib_GPIO_32F10x.c, 214 :: 		
0x0A4E	0xF04F030F  MOV	R3, #15
0x0A52	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 215 :: 		
0x0A54	0x43DB    MVN	R3, R3
0x0A56	0xEA070403  AND	R4, R7, R3, LSL #0
; tmpreg end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 218 :: 		
0x0A5A	0xFA01F305  LSL	R3, R1, R5
0x0A5E	0xEA440303  ORR	R3, R4, R3, LSL #0
; tmpreg start address is: 20 (R5)
0x0A62	0x461D    MOV	R5, R3
;__Lib_GPIO_32F10x.c, 221 :: 		
0x0A64	0xF4067381  AND	R3, R6, #258
0x0A68	0xF5B37F81  CMP	R3, #258
0x0A6C	0xD105    BNE	L_GPIO_Config48
;__Lib_GPIO_32F10x.c, 223 :: 		
0x0A6E	0xF2020414  ADDW	R4, R2, #20
0x0A72	0xF04F0301  MOV	R3, #1
0x0A76	0x4083    LSLS	R3, R0
0x0A78	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 224 :: 		
L_GPIO_Config48:
;__Lib_GPIO_32F10x.c, 226 :: 		
0x0A7A	0xF0060382  AND	R3, R6, #130
0x0A7E	0x2B82    CMP	R3, #130
0x0A80	0xD105    BNE	L_GPIO_Config49
;__Lib_GPIO_32F10x.c, 228 :: 		
0x0A82	0xF2020410  ADDW	R4, R2, #16
0x0A86	0xF04F0301  MOV	R3, #1
0x0A8A	0x4083    LSLS	R3, R0
0x0A8C	0x6023    STR	R3, [R4, #0]
;__Lib_GPIO_32F10x.c, 229 :: 		
L_GPIO_Config49:
;__Lib_GPIO_32F10x.c, 230 :: 		
0x0A8E	0x462F    MOV	R7, R5
0x0A90	0xE7FF    B	L_GPIO_Config47
; tmpreg end address is: 20 (R5)
L__GPIO_Config103:
;__Lib_GPIO_32F10x.c, 210 :: 		
;__Lib_GPIO_32F10x.c, 230 :: 		
L_GPIO_Config47:
;__Lib_GPIO_32F10x.c, 204 :: 		
; tmpreg start address is: 28 (R7)
0x0A92	0x1C40    ADDS	R0, R0, #1
;__Lib_GPIO_32F10x.c, 231 :: 		
; pinpos end address is: 0 (R0)
0x0A94	0xE7D0    B	L_GPIO_Config44
L_GPIO_Config45:
;__Lib_GPIO_32F10x.c, 232 :: 		
0x0A96	0x6017    STR	R7, [R2, #0]
; currentmode end address is: 4 (R1)
; port end address is: 8 (R2)
; config end address is: 24 (R6)
; pin_mask end address is: 32 (R8)
; tmpreg end address is: 28 (R7)
0x0A98	0xFA1FF088  UXTH	R0, R8
0x0A9C	0x460F    MOV	R7, R1
0x0A9E	0x4631    MOV	R1, R6
0x0AA0	0x4616    MOV	R6, R2
;__Lib_GPIO_32F10x.c, 234 :: 		
0x0AA2	0xE002    B	L_GPIO_Config43
L__GPIO_Config104:
;__Lib_GPIO_32F10x.c, 201 :: 		
0x0AA4	0x460F    MOV	R7, R1
0x0AA6	0x4629    MOV	R1, R5
0x0AA8	0xB2A0    UXTH	R0, R4
;__Lib_GPIO_32F10x.c, 234 :: 		
L_GPIO_Config43:
;__Lib_GPIO_32F10x.c, 238 :: 		
; currentmode start address is: 28 (R7)
; port start address is: 24 (R6)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0AAA	0xF1B00FFF  CMP	R0, #255
0x0AAE	0xD939    BLS	L_GPIO_Config50
;__Lib_GPIO_32F10x.c, 240 :: 		
0x0AB0	0x1D33    ADDS	R3, R6, #4
0x0AB2	0xF8D38000  LDR	R8, [R3, #0]
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 241 :: 		
; pinpos start address is: 8 (R2)
0x0AB6	0x2200    MOVS	R2, #0
; port end address is: 24 (R6)
; tmpreg end address is: 32 (R8)
; pinpos end address is: 8 (R2)
L_GPIO_Config51:
; pinpos start address is: 8 (R2)
; tmpreg start address is: 32 (R8)
; pin_mask start address is: 0 (R0)
; pin_mask end address is: 0 (R0)
; config start address is: 4 (R1)
; config end address is: 4 (R1)
; port start address is: 24 (R6)
; currentmode start address is: 28 (R7)
; currentmode end address is: 28 (R7)
0x0AB8	0x2A08    CMP	R2, #8
0x0ABA	0xD230    BCS	L_GPIO_Config52
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
;__Lib_GPIO_32F10x.c, 243 :: 		
; currentmode start address is: 28 (R7)
; config start address is: 4 (R1)
; pin_mask start address is: 0 (R0)
0x0ABC	0xF2020408  ADDW	R4, R2, #8
0x0AC0	0xF04F0301  MOV	R3, #1
0x0AC4	0xFA03F404  LSL	R4, R3, R4
;__Lib_GPIO_32F10x.c, 245 :: 		
0x0AC8	0xEA000304  AND	R3, R0, R4, LSL #0
;__Lib_GPIO_32F10x.c, 246 :: 		
0x0ACC	0x42A3    CMP	R3, R4
0x0ACE	0xD124    BNE	L__GPIO_Config105
;__Lib_GPIO_32F10x.c, 248 :: 		
0x0AD0	0x0095    LSLS	R5, R2, #2
;__Lib_GPIO_32F10x.c, 250 :: 		
0x0AD2	0xF04F030F  MOV	R3, #15
0x0AD6	0x40AB    LSLS	R3, R5
;__Lib_GPIO_32F10x.c, 251 :: 		
0x0AD8	0x43DB    MVN	R3, R3
0x0ADA	0xEA080803  AND	R8, R8, R3, LSL #0
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 254 :: 		
0x0ADE	0xFA07F305  LSL	R3, R7, R5
0x0AE2	0xEA480803  ORR	R8, R8, R3, LSL #0
; tmpreg start address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 257 :: 		
0x0AE6	0xF4017381  AND	R3, R1, #258
0x0AEA	0xF5B37F81  CMP	R3, #258
0x0AEE	0xD107    BNE	L_GPIO_Config55
;__Lib_GPIO_32F10x.c, 259 :: 		
0x0AF0	0xF2060514  ADDW	R5, R6, #20
0x0AF4	0xF2020408  ADDW	R4, R2, #8
0x0AF8	0xF04F0301  MOV	R3, #1
0x0AFC	0x40A3    LSLS	R3, R4
0x0AFE	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 260 :: 		
L_GPIO_Config55:
;__Lib_GPIO_32F10x.c, 262 :: 		
0x0B00	0xF0010382  AND	R3, R1, #130
0x0B04	0x2B82    CMP	R3, #130
0x0B06	0xD107    BNE	L_GPIO_Config56
;__Lib_GPIO_32F10x.c, 264 :: 		
0x0B08	0xF2060510  ADDW	R5, R6, #16
0x0B0C	0xF2020408  ADDW	R4, R2, #8
0x0B10	0xF04F0301  MOV	R3, #1
0x0B14	0x40A3    LSLS	R3, R4
0x0B16	0x602B    STR	R3, [R5, #0]
;__Lib_GPIO_32F10x.c, 265 :: 		
L_GPIO_Config56:
;__Lib_GPIO_32F10x.c, 266 :: 		
0x0B18	0xE7FF    B	L_GPIO_Config54
; tmpreg end address is: 32 (R8)
L__GPIO_Config105:
;__Lib_GPIO_32F10x.c, 246 :: 		
;__Lib_GPIO_32F10x.c, 266 :: 		
L_GPIO_Config54:
;__Lib_GPIO_32F10x.c, 241 :: 		
; tmpreg start address is: 32 (R8)
0x0B1A	0x1C52    ADDS	R2, R2, #1
;__Lib_GPIO_32F10x.c, 267 :: 		
; pin_mask end address is: 0 (R0)
; config end address is: 4 (R1)
; currentmode end address is: 28 (R7)
; pinpos end address is: 8 (R2)
0x0B1C	0xE7CC    B	L_GPIO_Config51
L_GPIO_Config52:
;__Lib_GPIO_32F10x.c, 268 :: 		
0x0B1E	0x1D33    ADDS	R3, R6, #4
; port end address is: 24 (R6)
0x0B20	0xF8C38000  STR	R8, [R3, #0]
; tmpreg end address is: 32 (R8)
;__Lib_GPIO_32F10x.c, 269 :: 		
L_GPIO_Config50:
;__Lib_GPIO_32F10x.c, 270 :: 		
L_end_GPIO_Config:
0x0B24	0xF8DDE000  LDR	LR, [SP, #0]
0x0B28	0xB001    ADD	SP, SP, #4
0x0B2A	0x4770    BX	LR
0x0B2C	0xFC00FFFF  	#-1024
0x0B30	0x00140008  	#524308
0x0B34	0x08000008  	#526336
; end of _GPIO_Config
_GPIO_Clk_Enable:
;__Lib_GPIO_32F10x.c, 83 :: 		
; gpio_port start address is: 0 (R0)
0x0224	0xB081    SUB	SP, SP, #4
; gpio_port end address is: 0 (R0)
; gpio_port start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 85 :: 		
0x0226	0x4919    LDR	R1, [PC, #100]
0x0228	0xEA000101  AND	R1, R0, R1, LSL #0
; gpio_port end address is: 0 (R0)
; prt start address is: 0 (R0)
0x022C	0x4608    MOV	R0, R1
;__Lib_GPIO_32F10x.c, 86 :: 		
; pos start address is: 8 (R2)
0x022E	0x2200    MOVS	R2, #0
;__Lib_GPIO_32F10x.c, 87 :: 		
0x0230	0xE00E    B	L_GPIO_Clk_Enable0
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 88 :: 		
L_GPIO_Clk_Enable2:
; pos start address is: 0 (R0)
0x0232	0x2004    MOVS	R0, #4
; pos end address is: 0 (R0)
0x0234	0xE022    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 89 :: 		
L_GPIO_Clk_Enable3:
; pos start address is: 0 (R0)
0x0236	0x2008    MOVS	R0, #8
; pos end address is: 0 (R0)
0x0238	0xE020    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 90 :: 		
L_GPIO_Clk_Enable4:
; pos start address is: 0 (R0)
0x023A	0x2010    MOVS	R0, #16
; pos end address is: 0 (R0)
0x023C	0xE01E    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 91 :: 		
L_GPIO_Clk_Enable5:
; pos start address is: 0 (R0)
0x023E	0x2020    MOVS	R0, #32
; pos end address is: 0 (R0)
0x0240	0xE01C    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 92 :: 		
L_GPIO_Clk_Enable6:
; pos start address is: 0 (R0)
0x0242	0x2040    MOVS	R0, #64
; pos end address is: 0 (R0)
0x0244	0xE01A    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 93 :: 		
L_GPIO_Clk_Enable7:
; pos start address is: 0 (R0)
0x0246	0x2080    MOVS	R0, #128
; pos end address is: 0 (R0)
0x0248	0xE018    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 94 :: 		
L_GPIO_Clk_Enable8:
; pos start address is: 0 (R0)
0x024A	0xF2401000  MOVW	R0, #256
; pos end address is: 0 (R0)
0x024E	0xE015    B	L_GPIO_Clk_Enable1
;__Lib_GPIO_32F10x.c, 95 :: 		
L_GPIO_Clk_Enable0:
; pos start address is: 8 (R2)
; prt start address is: 0 (R0)
0x0250	0x490F    LDR	R1, [PC, #60]
0x0252	0x4288    CMP	R0, R1
0x0254	0xD0ED    BEQ	L_GPIO_Clk_Enable2
0x0256	0x490F    LDR	R1, [PC, #60]
0x0258	0x4288    CMP	R0, R1
0x025A	0xD0EC    BEQ	L_GPIO_Clk_Enable3
0x025C	0x490E    LDR	R1, [PC, #56]
0x025E	0x4288    CMP	R0, R1
0x0260	0xD0EB    BEQ	L_GPIO_Clk_Enable4
0x0262	0x490E    LDR	R1, [PC, #56]
0x0264	0x4288    CMP	R0, R1
0x0266	0xD0EA    BEQ	L_GPIO_Clk_Enable5
0x0268	0x490D    LDR	R1, [PC, #52]
0x026A	0x4288    CMP	R0, R1
0x026C	0xD0E9    BEQ	L_GPIO_Clk_Enable6
0x026E	0x490D    LDR	R1, [PC, #52]
0x0270	0x4288    CMP	R0, R1
0x0272	0xD0E8    BEQ	L_GPIO_Clk_Enable7
0x0274	0x490C    LDR	R1, [PC, #48]
0x0276	0x4288    CMP	R0, R1
0x0278	0xD0E7    BEQ	L_GPIO_Clk_Enable8
; prt end address is: 0 (R0)
; pos end address is: 8 (R2)
0x027A	0x4610    MOV	R0, R2
L_GPIO_Clk_Enable1:
;__Lib_GPIO_32F10x.c, 97 :: 		
; pos start address is: 0 (R0)
0x027C	0x490B    LDR	R1, [PC, #44]
0x027E	0x6809    LDR	R1, [R1, #0]
0x0280	0xEA410200  ORR	R2, R1, R0, LSL #0
; pos end address is: 0 (R0)
0x0284	0x4909    LDR	R1, [PC, #36]
0x0286	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 98 :: 		
L_end_GPIO_Clk_Enable:
0x0288	0xB001    ADD	SP, SP, #4
0x028A	0x4770    BX	LR
0x028C	0xFC00FFFF  	#-1024
0x0290	0x08004001  	#1073809408
0x0294	0x0C004001  	#1073810432
0x0298	0x10004001  	#1073811456
0x029C	0x14004001  	#1073812480
0x02A0	0x18004001  	#1073813504
0x02A4	0x1C004001  	#1073814528
0x02A8	0x20004001  	#1073815552
0x02AC	0x10184002  	RCC_APB2ENR+0
; end of _GPIO_Clk_Enable
_GPIO_Digital_Output:
;__Lib_GPIO_32F10x.c, 365 :: 		
; pin_mask start address is: 4 (R1)
; port start address is: 0 (R0)
0x0C28	0xB081    SUB	SP, SP, #4
0x0C2A	0xF8CDE000  STR	LR, [SP, #0]
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; pin_mask start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 366 :: 		
0x0C2E	0x4A04    LDR	R2, [PC, #16]
0x0C30	0xB289    UXTH	R1, R1
; pin_mask end address is: 4 (R1)
; port end address is: 0 (R0)
0x0C32	0xF7FFFE87  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 367 :: 		
L_end_GPIO_Digital_Output:
0x0C36	0xF8DDE000  LDR	LR, [SP, #0]
0x0C3A	0xB001    ADD	SP, SP, #4
0x0C3C	0x4770    BX	LR
0x0C3E	0xBF00    NOP
0x0C40	0x00140008  	#524308
; end of _GPIO_Digital_Output
easymx_v7_STM32F107VC__gpioInit_2:
;__em_f107vc_gpio.c, 102 :: 		static T_mikrobus_ret _gpioInit_2(T_mikrobus_pin pin, T_gpio_dir dir)
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x133C	0xB081    SUB	SP, SP, #4
0x133E	0xF8CDE000  STR	LR, [SP, #0]
; dir end address is: 4 (R1)
; pin end address is: 0 (R0)
; pin start address is: 0 (R0)
; dir start address is: 4 (R1)
;__em_f107vc_gpio.c, 104 :: 		switch( pin )
0x1342	0xE0A9    B	L_easymx_v7_STM32F107VC__gpioInit_239
; pin end address is: 0 (R0)
;__em_f107vc_gpio.c, 106 :: 		case _MIKROBUS_AN_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOA_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOA_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_241:
0x1344	0x2901    CMP	R1, #1
0x1346	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_242
; dir end address is: 4 (R1)
0x1348	0xF2400120  MOVW	R1, #32
0x134C	0x4865    LDR	R0, [PC, #404]
0x134E	0xF7FFFC51  BL	_GPIO_Digital_Input+0
0x1352	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_243
L_easymx_v7_STM32F107VC__gpioInit_242:
0x1354	0xF2400120  MOVW	R1, #32
0x1358	0x4862    LDR	R0, [PC, #392]
0x135A	0xF7FFFC65  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_243:
0x135E	0xE0BB    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 107 :: 		case _MIKROBUS_RST_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_3 ); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_3 ); break;
L_easymx_v7_STM32F107VC__gpioInit_244:
; dir start address is: 4 (R1)
0x1360	0x2901    CMP	R1, #1
0x1362	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_245
; dir end address is: 4 (R1)
0x1364	0xF2400108  MOVW	R1, #8
0x1368	0x485F    LDR	R0, [PC, #380]
0x136A	0xF7FFFC43  BL	_GPIO_Digital_Input+0
0x136E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_246
L_easymx_v7_STM32F107VC__gpioInit_245:
0x1370	0xF2400108  MOVW	R1, #8
0x1374	0x485C    LDR	R0, [PC, #368]
0x1376	0xF7FFFC57  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_246:
0x137A	0xE0AD    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 108 :: 		case _MIKROBUS_CS_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_14); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_14); break;
L_easymx_v7_STM32F107VC__gpioInit_247:
; dir start address is: 4 (R1)
0x137C	0x2901    CMP	R1, #1
0x137E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_248
; dir end address is: 4 (R1)
0x1380	0xF2440100  MOVW	R1, #16384
0x1384	0x4859    LDR	R0, [PC, #356]
0x1386	0xF7FFFC35  BL	_GPIO_Digital_Input+0
0x138A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_249
L_easymx_v7_STM32F107VC__gpioInit_248:
0x138C	0xF2440100  MOVW	R1, #16384
0x1390	0x4856    LDR	R0, [PC, #344]
0x1392	0xF7FFFC49  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_249:
0x1396	0xE09F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 109 :: 		case _MIKROBUS_SCK_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_10); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_10); break;
L_easymx_v7_STM32F107VC__gpioInit_250:
; dir start address is: 4 (R1)
0x1398	0x2901    CMP	R1, #1
0x139A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_251
; dir end address is: 4 (R1)
0x139C	0xF2404100  MOVW	R1, #1024
0x13A0	0x4851    LDR	R0, [PC, #324]
0x13A2	0xF7FFFC27  BL	_GPIO_Digital_Input+0
0x13A6	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_252
L_easymx_v7_STM32F107VC__gpioInit_251:
0x13A8	0xF2404100  MOVW	R1, #1024
0x13AC	0x484E    LDR	R0, [PC, #312]
0x13AE	0xF7FFFC3B  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_252:
0x13B2	0xE091    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 110 :: 		case _MIKROBUS_MISO_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_253:
; dir start address is: 4 (R1)
0x13B4	0x2901    CMP	R1, #1
0x13B6	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_254
; dir end address is: 4 (R1)
0x13B8	0xF6400100  MOVW	R1, #2048
0x13BC	0x484A    LDR	R0, [PC, #296]
0x13BE	0xF7FFFC19  BL	_GPIO_Digital_Input+0
0x13C2	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_255
L_easymx_v7_STM32F107VC__gpioInit_254:
0x13C4	0xF6400100  MOVW	R1, #2048
0x13C8	0x4847    LDR	R0, [PC, #284]
0x13CA	0xF7FFFC2D  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_255:
0x13CE	0xE083    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 111 :: 		case _MIKROBUS_MOSI_PIN  : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOC_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOC_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_256:
; dir start address is: 4 (R1)
0x13D0	0x2901    CMP	R1, #1
0x13D2	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_257
; dir end address is: 4 (R1)
0x13D4	0xF2410100  MOVW	R1, #4096
0x13D8	0x4843    LDR	R0, [PC, #268]
0x13DA	0xF7FFFC0B  BL	_GPIO_Digital_Input+0
0x13DE	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_258
L_easymx_v7_STM32F107VC__gpioInit_257:
0x13E0	0xF2410100  MOVW	R1, #4096
0x13E4	0x4840    LDR	R0, [PC, #256]
0x13E6	0xF7FFFC1F  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_258:
0x13EA	0xE075    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 112 :: 		case _MIKROBUS_PWM_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_12); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_12); break;
L_easymx_v7_STM32F107VC__gpioInit_259:
; dir start address is: 4 (R1)
0x13EC	0x2901    CMP	R1, #1
0x13EE	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_260
; dir end address is: 4 (R1)
0x13F0	0xF2410100  MOVW	R1, #4096
0x13F4	0x483D    LDR	R0, [PC, #244]
0x13F6	0xF7FFFBFD  BL	_GPIO_Digital_Input+0
0x13FA	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_261
L_easymx_v7_STM32F107VC__gpioInit_260:
0x13FC	0xF2410100  MOVW	R1, #4096
0x1400	0x483A    LDR	R0, [PC, #232]
0x1402	0xF7FFFC11  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_261:
0x1406	0xE067    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 113 :: 		case _MIKROBUS_INT_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_11); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_11); break;
L_easymx_v7_STM32F107VC__gpioInit_262:
; dir start address is: 4 (R1)
0x1408	0x2901    CMP	R1, #1
0x140A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_263
; dir end address is: 4 (R1)
0x140C	0xF6400100  MOVW	R1, #2048
0x1410	0x4836    LDR	R0, [PC, #216]
0x1412	0xF7FFFBEF  BL	_GPIO_Digital_Input+0
0x1416	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_264
L_easymx_v7_STM32F107VC__gpioInit_263:
0x1418	0xF6400100  MOVW	R1, #2048
0x141C	0x4833    LDR	R0, [PC, #204]
0x141E	0xF7FFFC03  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_264:
0x1422	0xE059    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 114 :: 		case _MIKROBUS_RX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_265:
; dir start address is: 4 (R1)
0x1424	0x2901    CMP	R1, #1
0x1426	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_266
; dir end address is: 4 (R1)
0x1428	0xF2400140  MOVW	R1, #64
0x142C	0x482F    LDR	R0, [PC, #188]
0x142E	0xF7FFFBE1  BL	_GPIO_Digital_Input+0
0x1432	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_267
L_easymx_v7_STM32F107VC__gpioInit_266:
0x1434	0xF2400140  MOVW	R1, #64
0x1438	0x482C    LDR	R0, [PC, #176]
0x143A	0xF7FFFBF5  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_267:
0x143E	0xE04B    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 115 :: 		case _MIKROBUS_TX_PIN    : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOD_BASE, _GPIO_PINMASK_5 ); else GPIO_Digital_Output(&GPIOD_BASE, _GPIO_PINMASK_5 ); break;
L_easymx_v7_STM32F107VC__gpioInit_268:
; dir start address is: 4 (R1)
0x1440	0x2901    CMP	R1, #1
0x1442	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_269
; dir end address is: 4 (R1)
0x1444	0xF2400120  MOVW	R1, #32
0x1448	0x4828    LDR	R0, [PC, #160]
0x144A	0xF7FFFBD3  BL	_GPIO_Digital_Input+0
0x144E	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_270
L_easymx_v7_STM32F107VC__gpioInit_269:
0x1450	0xF2400120  MOVW	R1, #32
0x1454	0x4825    LDR	R0, [PC, #148]
0x1456	0xF7FFFBE7  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_270:
0x145A	0xE03D    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 116 :: 		case _MIKROBUS_SCL_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_6 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_6 ); break;
L_easymx_v7_STM32F107VC__gpioInit_271:
; dir start address is: 4 (R1)
0x145C	0x2901    CMP	R1, #1
0x145E	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_272
; dir end address is: 4 (R1)
0x1460	0xF2400140  MOVW	R1, #64
0x1464	0x4822    LDR	R0, [PC, #136]
0x1466	0xF7FFFBC5  BL	_GPIO_Digital_Input+0
0x146A	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_273
L_easymx_v7_STM32F107VC__gpioInit_272:
0x146C	0xF2400140  MOVW	R1, #64
0x1470	0x481F    LDR	R0, [PC, #124]
0x1472	0xF7FFFBD9  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_273:
0x1476	0xE02F    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 117 :: 		case _MIKROBUS_SDA_PIN   : if(dir == _GPIO_INPUT) GPIO_Digital_Input(&GPIOB_BASE, _GPIO_PINMASK_7 ); else GPIO_Digital_Output(&GPIOB_BASE, _GPIO_PINMASK_7 ); break;
L_easymx_v7_STM32F107VC__gpioInit_274:
; dir start address is: 4 (R1)
0x1478	0x2901    CMP	R1, #1
0x147A	0xD105    BNE	L_easymx_v7_STM32F107VC__gpioInit_275
; dir end address is: 4 (R1)
0x147C	0xF2400180  MOVW	R1, #128
0x1480	0x481B    LDR	R0, [PC, #108]
0x1482	0xF7FFFBB7  BL	_GPIO_Digital_Input+0
0x1486	0xE004    B	L_easymx_v7_STM32F107VC__gpioInit_276
L_easymx_v7_STM32F107VC__gpioInit_275:
0x1488	0xF2400180  MOVW	R1, #128
0x148C	0x4818    LDR	R0, [PC, #96]
0x148E	0xF7FFFBCB  BL	_GPIO_Digital_Output+0
L_easymx_v7_STM32F107VC__gpioInit_276:
0x1492	0xE021    B	L_easymx_v7_STM32F107VC__gpioInit_240
;__em_f107vc_gpio.c, 118 :: 		default                  : return _MIKROBUS_ERR_PIN;
L_easymx_v7_STM32F107VC__gpioInit_277:
0x1494	0x2001    MOVS	R0, #1
0x1496	0xE020    B	L_end__gpioInit_2
;__em_f107vc_gpio.c, 119 :: 		}
L_easymx_v7_STM32F107VC__gpioInit_239:
; dir start address is: 4 (R1)
; pin start address is: 0 (R0)
0x1498	0x2800    CMP	R0, #0
0x149A	0xF43FAF53  BEQ	L_easymx_v7_STM32F107VC__gpioInit_241
0x149E	0x2801    CMP	R0, #1
0x14A0	0xF43FAF5E  BEQ	L_easymx_v7_STM32F107VC__gpioInit_244
0x14A4	0x2802    CMP	R0, #2
0x14A6	0xF43FAF69  BEQ	L_easymx_v7_STM32F107VC__gpioInit_247
0x14AA	0x2803    CMP	R0, #3
0x14AC	0xF43FAF74  BEQ	L_easymx_v7_STM32F107VC__gpioInit_250
0x14B0	0x2804    CMP	R0, #4
0x14B2	0xF43FAF7F  BEQ	L_easymx_v7_STM32F107VC__gpioInit_253
0x14B6	0x2805    CMP	R0, #5
0x14B8	0xF43FAF8A  BEQ	L_easymx_v7_STM32F107VC__gpioInit_256
0x14BC	0x2806    CMP	R0, #6
0x14BE	0xF43FAF95  BEQ	L_easymx_v7_STM32F107VC__gpioInit_259
0x14C2	0x2807    CMP	R0, #7
0x14C4	0xD0A0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_262
0x14C6	0x2808    CMP	R0, #8
0x14C8	0xD0AC    BEQ	L_easymx_v7_STM32F107VC__gpioInit_265
0x14CA	0x2809    CMP	R0, #9
0x14CC	0xD0B8    BEQ	L_easymx_v7_STM32F107VC__gpioInit_268
0x14CE	0x280A    CMP	R0, #10
0x14D0	0xD0C4    BEQ	L_easymx_v7_STM32F107VC__gpioInit_271
0x14D2	0x280B    CMP	R0, #11
0x14D4	0xD0D0    BEQ	L_easymx_v7_STM32F107VC__gpioInit_274
; pin end address is: 0 (R0)
; dir end address is: 4 (R1)
0x14D6	0xE7DD    B	L_easymx_v7_STM32F107VC__gpioInit_277
L_easymx_v7_STM32F107VC__gpioInit_240:
;__em_f107vc_gpio.c, 120 :: 		return _MIKROBUS_OK;
0x14D8	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_gpio.c, 121 :: 		}
L_end__gpioInit_2:
0x14DA	0xF8DDE000  LDR	LR, [SP, #0]
0x14DE	0xB001    ADD	SP, SP, #4
0x14E0	0x4770    BX	LR
0x14E2	0xBF00    NOP
0x14E4	0x08004001  	GPIOA_BASE+0
0x14E8	0x10004001  	GPIOC_BASE+0
0x14EC	0x14004001  	GPIOD_BASE+0
0x14F0	0x0C004001  	GPIOB_BASE+0
; end of easymx_v7_STM32F107VC__gpioInit_2
_mikrobus_uartInit:
;easymx_v7_STM32F107VC.c, 253 :: 		T_mikrobus_ret mikrobus_uartInit(T_mikrobus_soc bus, const uint32_t *cfg)
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x1840	0xB081    SUB	SP, SP, #4
0x1842	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 4 (R1)
; bus end address is: 0 (R0)
; bus start address is: 0 (R0)
; cfg start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 255 :: 		switch( bus )
0x1846	0xE009    B	L_mikrobus_uartInit83
; bus end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 258 :: 		case _MIKROBUS1 : return _uartInit_1( cfg );
L_mikrobus_uartInit85:
0x1848	0x4608    MOV	R0, R1
; cfg end address is: 4 (R1)
0x184A	0xF7FFFD5B  BL	easymx_v7_STM32F107VC__uartInit_1+0
0x184E	0xE00A    B	L_end_mikrobus_uartInit
;easymx_v7_STM32F107VC.c, 261 :: 		case _MIKROBUS2 : return _uartInit_2( cfg );
L_mikrobus_uartInit86:
; cfg start address is: 4 (R1)
0x1850	0x4608    MOV	R0, R1
; cfg end address is: 4 (R1)
0x1852	0xF7FFFF2B  BL	easymx_v7_STM32F107VC__uartInit_2+0
0x1856	0xE006    B	L_end_mikrobus_uartInit
;easymx_v7_STM32F107VC.c, 275 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_uartInit87:
0x1858	0x2001    MOVS	R0, #1
0x185A	0xE004    B	L_end_mikrobus_uartInit
;easymx_v7_STM32F107VC.c, 276 :: 		}
L_mikrobus_uartInit83:
; cfg start address is: 4 (R1)
; bus start address is: 0 (R0)
0x185C	0x2800    CMP	R0, #0
0x185E	0xD0F3    BEQ	L_mikrobus_uartInit85
0x1860	0x2801    CMP	R0, #1
0x1862	0xD0F5    BEQ	L_mikrobus_uartInit86
; bus end address is: 0 (R0)
; cfg end address is: 4 (R1)
0x1864	0xE7F8    B	L_mikrobus_uartInit87
;easymx_v7_STM32F107VC.c, 278 :: 		}
L_end_mikrobus_uartInit:
0x1866	0xF8DDE000  LDR	LR, [SP, #0]
0x186A	0xB001    ADD	SP, SP, #4
0x186C	0x4770    BX	LR
; end of _mikrobus_uartInit
easymx_v7_STM32F107VC__uartInit_1:
;__em_f107vc_uart.c, 29 :: 		static T_mikrobus_ret _uartInit_1(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x1304	0xB081    SUB	SP, SP, #4
0x1306	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_uart.c, 31 :: 		UART3_Init_Advanced( (unsigned long) cfg[0], (unsigned int) cfg[1], (unsigned int) cfg[2], (unsigned int)cfg[3], &_GPIO_MODULE_USART3_PD89);
0x130A	0x4D0B    LDR	R5, [PC, #44]
0x130C	0xF200010C  ADDW	R1, R0, #12
0x1310	0x680C    LDR	R4, [R1, #0]
0x1312	0xF2000108  ADDW	R1, R0, #8
0x1316	0x680B    LDR	R3, [R1, #0]
0x1318	0x1D01    ADDS	R1, R0, #4
0x131A	0x680A    LDR	R2, [R1, #0]
0x131C	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x131E	0x4608    MOV	R0, R1
0x1320	0xB291    UXTH	R1, R2
0x1322	0xB29A    UXTH	R2, R3
0x1324	0xB2A3    UXTH	R3, R4
0x1326	0xB420    PUSH	(R5)
0x1328	0xF7FFFD32  BL	_UART3_Init_Advanced+0
0x132C	0xB001    ADD	SP, SP, #4
;__em_f107vc_uart.c, 32 :: 		return _MIKROBUS_OK;
0x132E	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_uart.c, 33 :: 		}
L_end__uartInit_1:
0x1330	0xF8DDE000  LDR	LR, [SP, #0]
0x1334	0xB001    ADD	SP, SP, #4
0x1336	0x4770    BX	LR
0x1338	0x22440000  	__GPIO_MODULE_USART3_PD89+0
; end of easymx_v7_STM32F107VC__uartInit_1
_UART3_Init_Advanced:
;__Lib_UART_123_45.c, 384 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0D90	0xB081    SUB	SP, SP, #4
0x0D92	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0D96	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 386 :: 		
0x0D98	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0D9A	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0D9C	0xB408    PUSH	(R3)
0x0D9E	0xB293    UXTH	R3, R2
0x0DA0	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0DA2	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0DA4	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x0DA6	0xF7FFFCAB  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0DAA	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 387 :: 		
L_end_UART3_Init_Advanced:
0x0DAC	0xF8DDE000  LDR	LR, [SP, #0]
0x0DB0	0xB001    ADD	SP, SP, #4
0x0DB2	0x4770    BX	LR
0x0DB4	0x48004000  	USART3_SR+0
; end of _UART3_Init_Advanced
__Lib_UART_123_45_UARTx_Init_Advanced:
;__Lib_UART_123_45.c, 294 :: 		
; parity start address is: 12 (R3)
; baud_rate start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0700	0xB089    SUB	SP, SP, #36
0x0702	0xF8CDE000  STR	LR, [SP, #0]
0x0706	0x4683    MOV	R11, R0
0x0708	0xB298    UXTH	R0, R3
0x070A	0x468C    MOV	R12, R1
; parity end address is: 12 (R3)
; baud_rate end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 44 (R11)
; baud_rate start address is: 48 (R12)
; parity start address is: 0 (R0)
; stop_bits start address is: 4 (R1)
0x070C	0xF8BD1024  LDRH	R1, [SP, #36]
; module start address is: 24 (R6)
0x0710	0x9E0A    LDR	R6, [SP, #40]
;__Lib_UART_123_45.c, 298 :: 		
0x0712	0xAC04    ADD	R4, SP, #16
0x0714	0xF8AD1004  STRH	R1, [SP, #4]
0x0718	0xF8AD0008  STRH	R0, [SP, #8]
0x071C	0x4620    MOV	R0, R4
0x071E	0xF7FFFE01  BL	_RCC_GetClocksFrequency+0
0x0722	0xF8BD0008  LDRH	R0, [SP, #8]
0x0726	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 301 :: 		
0x072A	0x4C64    LDR	R4, [PC, #400]
0x072C	0x45A3    CMP	R11, R4
0x072E	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced15
;__Lib_UART_123_45.c, 302 :: 		
0x0730	0x2501    MOVS	R5, #1
0x0732	0xB26D    SXTB	R5, R5
0x0734	0x4C62    LDR	R4, [PC, #392]
0x0736	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 303 :: 		
0x0738	0x4D62    LDR	R5, [PC, #392]
0x073A	0x4C63    LDR	R4, [PC, #396]
0x073C	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 304 :: 		
0x073E	0x4D63    LDR	R5, [PC, #396]
0x0740	0x4C63    LDR	R4, [PC, #396]
0x0742	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 305 :: 		
0x0744	0x4D63    LDR	R5, [PC, #396]
0x0746	0x4C64    LDR	R4, [PC, #400]
0x0748	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 306 :: 		
0x074A	0x4D64    LDR	R5, [PC, #400]
0x074C	0x4C64    LDR	R4, [PC, #400]
0x074E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 307 :: 		
0x0750	0x9C07    LDR	R4, [SP, #28]
0x0752	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 308 :: 		
0x0754	0xE056    B	L___Lib_UART_123_45_UARTx_Init_Advanced16
L___Lib_UART_123_45_UARTx_Init_Advanced15:
;__Lib_UART_123_45.c, 309 :: 		
0x0756	0x4C63    LDR	R4, [PC, #396]
0x0758	0x45A3    CMP	R11, R4
0x075A	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced17
;__Lib_UART_123_45.c, 310 :: 		
0x075C	0x2501    MOVS	R5, #1
0x075E	0xB26D    SXTB	R5, R5
0x0760	0x4C61    LDR	R4, [PC, #388]
0x0762	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 311 :: 		
0x0764	0x4D61    LDR	R5, [PC, #388]
0x0766	0x4C58    LDR	R4, [PC, #352]
0x0768	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 312 :: 		
0x076A	0x4D61    LDR	R5, [PC, #388]
0x076C	0x4C58    LDR	R4, [PC, #352]
0x076E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 313 :: 		
0x0770	0x4D60    LDR	R5, [PC, #384]
0x0772	0x4C59    LDR	R4, [PC, #356]
0x0774	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 314 :: 		
0x0776	0x4D60    LDR	R5, [PC, #384]
0x0778	0x4C59    LDR	R4, [PC, #356]
0x077A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 315 :: 		
0x077C	0x9C06    LDR	R4, [SP, #24]
0x077E	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 316 :: 		
0x0780	0xE040    B	L___Lib_UART_123_45_UARTx_Init_Advanced18
L___Lib_UART_123_45_UARTx_Init_Advanced17:
;__Lib_UART_123_45.c, 317 :: 		
0x0782	0x4C5E    LDR	R4, [PC, #376]
0x0784	0x45A3    CMP	R11, R4
0x0786	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced19
;__Lib_UART_123_45.c, 318 :: 		
0x0788	0x2501    MOVS	R5, #1
0x078A	0xB26D    SXTB	R5, R5
0x078C	0x4C5C    LDR	R4, [PC, #368]
0x078E	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 319 :: 		
0x0790	0x4D5C    LDR	R5, [PC, #368]
0x0792	0x4C4D    LDR	R4, [PC, #308]
0x0794	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 320 :: 		
0x0796	0x4D5C    LDR	R5, [PC, #368]
0x0798	0x4C4D    LDR	R4, [PC, #308]
0x079A	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 321 :: 		
0x079C	0x4D5B    LDR	R5, [PC, #364]
0x079E	0x4C4E    LDR	R4, [PC, #312]
0x07A0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 322 :: 		
0x07A2	0x4D5B    LDR	R5, [PC, #364]
0x07A4	0x4C4E    LDR	R4, [PC, #312]
0x07A6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 323 :: 		
0x07A8	0x9C06    LDR	R4, [SP, #24]
0x07AA	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 324 :: 		
0x07AC	0xE02A    B	L___Lib_UART_123_45_UARTx_Init_Advanced20
L___Lib_UART_123_45_UARTx_Init_Advanced19:
;__Lib_UART_123_45.c, 325 :: 		
0x07AE	0x4C59    LDR	R4, [PC, #356]
0x07B0	0x45A3    CMP	R11, R4
0x07B2	0xD112    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced21
;__Lib_UART_123_45.c, 326 :: 		
0x07B4	0x2501    MOVS	R5, #1
0x07B6	0xB26D    SXTB	R5, R5
0x07B8	0x4C57    LDR	R4, [PC, #348]
0x07BA	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 327 :: 		
0x07BC	0x4D57    LDR	R5, [PC, #348]
0x07BE	0x4C42    LDR	R4, [PC, #264]
0x07C0	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 328 :: 		
0x07C2	0x4D57    LDR	R5, [PC, #348]
0x07C4	0x4C42    LDR	R4, [PC, #264]
0x07C6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 329 :: 		
0x07C8	0x4D56    LDR	R5, [PC, #344]
0x07CA	0x4C43    LDR	R4, [PC, #268]
0x07CC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 330 :: 		
0x07CE	0x4D56    LDR	R5, [PC, #344]
0x07D0	0x4C43    LDR	R4, [PC, #268]
0x07D2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 331 :: 		
0x07D4	0x9C06    LDR	R4, [SP, #24]
0x07D6	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 332 :: 		
0x07D8	0xE014    B	L___Lib_UART_123_45_UARTx_Init_Advanced22
L___Lib_UART_123_45_UARTx_Init_Advanced21:
;__Lib_UART_123_45.c, 333 :: 		
0x07DA	0x4C54    LDR	R4, [PC, #336]
0x07DC	0x45A3    CMP	R11, R4
0x07DE	0xD111    BNE	L___Lib_UART_123_45_UARTx_Init_Advanced23
;__Lib_UART_123_45.c, 334 :: 		
0x07E0	0x2501    MOVS	R5, #1
0x07E2	0xB26D    SXTB	R5, R5
0x07E4	0x4C52    LDR	R4, [PC, #328]
0x07E6	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 335 :: 		
0x07E8	0x4D52    LDR	R5, [PC, #328]
0x07EA	0x4C37    LDR	R4, [PC, #220]
0x07EC	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 336 :: 		
0x07EE	0x4D52    LDR	R5, [PC, #328]
0x07F0	0x4C37    LDR	R4, [PC, #220]
0x07F2	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 337 :: 		
0x07F4	0x4D51    LDR	R5, [PC, #324]
0x07F6	0x4C38    LDR	R4, [PC, #224]
0x07F8	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 338 :: 		
0x07FA	0x4D51    LDR	R5, [PC, #324]
0x07FC	0x4C38    LDR	R4, [PC, #224]
0x07FE	0x6025    STR	R5, [R4, #0]
;__Lib_UART_123_45.c, 339 :: 		
0x0800	0x9C06    LDR	R4, [SP, #24]
0x0802	0x9403    STR	R4, [SP, #12]
;__Lib_UART_123_45.c, 340 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced23:
L___Lib_UART_123_45_UARTx_Init_Advanced22:
L___Lib_UART_123_45_UARTx_Init_Advanced20:
L___Lib_UART_123_45_UARTx_Init_Advanced18:
L___Lib_UART_123_45_UARTx_Init_Advanced16:
;__Lib_UART_123_45.c, 342 :: 		
0x0804	0xF8AD1004  STRH	R1, [SP, #4]
; module end address is: 24 (R6)
0x0808	0xF8AD0008  STRH	R0, [SP, #8]
0x080C	0x4630    MOV	R0, R6
0x080E	0xF7FFFDDD  BL	_GPIO_Alternate_Function_Enable+0
0x0812	0xF8BD0008  LDRH	R0, [SP, #8]
0x0816	0xF8BD1004  LDRH	R1, [SP, #4]
;__Lib_UART_123_45.c, 344 :: 		
0x081A	0xF10B0510  ADD	R5, R11, #16
0x081E	0x2400    MOVS	R4, #0
0x0820	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 345 :: 		
0x0822	0xF10B0510  ADD	R5, R11, #16
0x0826	0x682C    LDR	R4, [R5, #0]
0x0828	0x430C    ORRS	R4, R1
; stop_bits end address is: 4 (R1)
0x082A	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 346 :: 		
0x082C	0xF10B050C  ADD	R5, R11, #12
0x0830	0x2400    MOVS	R4, #0
0x0832	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 348 :: 		
0x0834	0xB118    CBZ	R0, L___Lib_UART_123_45_UARTx_Init_Advanced38
;__Lib_UART_123_45.c, 349 :: 		
0x0836	0xF4406080  ORR	R0, R0, #1024
0x083A	0xB280    UXTH	R0, R0
; parity end address is: 0 (R0)
;__Lib_UART_123_45.c, 350 :: 		
0x083C	0xE7FF    B	L___Lib_UART_123_45_UARTx_Init_Advanced24
L___Lib_UART_123_45_UARTx_Init_Advanced38:
;__Lib_UART_123_45.c, 348 :: 		
;__Lib_UART_123_45.c, 350 :: 		
L___Lib_UART_123_45_UARTx_Init_Advanced24:
;__Lib_UART_123_45.c, 352 :: 		
; parity start address is: 0 (R0)
0x083E	0xF10B050C  ADD	R5, R11, #12
0x0842	0x682C    LDR	R4, [R5, #0]
0x0844	0x4304    ORRS	R4, R0
; parity end address is: 0 (R0)
0x0846	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 354 :: 		
0x0848	0xF10B060C  ADD	R6, R11, #12
0x084C	0x2501    MOVS	R5, #1
0x084E	0x6834    LDR	R4, [R6, #0]
0x0850	0xF365344D  BFI	R4, R5, #13, #1
0x0854	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 355 :: 		
0x0856	0xF10B060C  ADD	R6, R11, #12
0x085A	0x2501    MOVS	R5, #1
0x085C	0x6834    LDR	R4, [R6, #0]
0x085E	0xF36504C3  BFI	R4, R5, #3, #1
0x0862	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 356 :: 		
0x0864	0xF10B060C  ADD	R6, R11, #12
0x0868	0x2501    MOVS	R5, #1
0x086A	0x6834    LDR	R4, [R6, #0]
0x086C	0xF3650482  BFI	R4, R5, #2, #1
0x0870	0x6034    STR	R4, [R6, #0]
;__Lib_UART_123_45.c, 357 :: 		
0x0872	0xF10B0514  ADD	R5, R11, #20
0x0876	0x2400    MOVS	R4, #0
0x0878	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 362 :: 		
0x087A	0x9D03    LDR	R5, [SP, #12]
0x087C	0x2419    MOVS	R4, #25
0x087E	0x4365    MULS	R5, R4, R5
0x0880	0xEA4F048C  LSL	R4, R12, #2
; baud_rate end address is: 48 (R12)
0x0884	0xFBB5F7F4  UDIV	R7, R5, R4
;__Lib_UART_123_45.c, 363 :: 		
0x0888	0x2464    MOVS	R4, #100
0x088A	0xFBB7F4F4  UDIV	R4, R7, R4
0x088E	0x0126    LSLS	R6, R4, #4
;__Lib_UART_123_45.c, 365 :: 		
0x0890	0x0935    LSRS	R5, R6, #4
0x0892	0x2464    MOVS	R4, #100
0x0894	0x436C    MULS	R4, R5, R4
0x0896	0x1B3C    SUB	R4, R7, R4
;__Lib_UART_123_45.c, 366 :: 		
0x0898	0x0124    LSLS	R4, R4, #4
0x089A	0xF2040532  ADDW	R5, R4, #50
0x089E	0x2464    MOVS	R4, #100
0x08A0	0xFBB5F4F4  UDIV	R4, R5, R4
0x08A4	0xF004040F  AND	R4, R4, #15
0x08A8	0xEA460404  ORR	R4, R6, R4, LSL #0
;__Lib_UART_123_45.c, 368 :: 		
0x08AC	0xF10B0508  ADD	R5, R11, #8
; UART_Base end address is: 44 (R11)
0x08B0	0xB2A4    UXTH	R4, R4
0x08B2	0x602C    STR	R4, [R5, #0]
;__Lib_UART_123_45.c, 369 :: 		
L_end_UARTx_Init_Advanced:
0x08B4	0xF8DDE000  LDR	LR, [SP, #0]
0x08B8	0xB009    ADD	SP, SP, #36
0x08BA	0x4770    BX	LR
0x08BC	0x38004001  	USART1_SR+0
0x08C0	0x03384242  	RCC_APB2ENR+0
0x08C4	0x0CDD0000  	_UART1_Write+0
0x08C8	0x02382000  	_UART_Wr_Ptr+0
0x08CC	0x05990000  	_UART1_Read+0
0x08D0	0x023C2000  	_UART_Rd_Ptr+0
0x08D4	0x05B10000  	_UART1_Data_Ready+0
0x08D8	0x02402000  	_UART_Rdy_Ptr+0
0x08DC	0x05690000  	_UART1_Tx_Idle+0
0x08E0	0x02442000  	_UART_Tx_Idle_Ptr+0
0x08E4	0x44004000  	USART2_SR+0
0x08E8	0x03C44242  	RCC_APB1ENR+0
0x08EC	0x0CA50000  	_UART2_Write+0
0x08F0	0x05810000  	_UART2_Read+0
0x08F4	0x05C90000  	_UART2_Data_Ready+0
0x08F8	0x06110000  	_UART2_Tx_Idle+0
0x08FC	0x48004000  	USART3_SR+0
0x0900	0x03C84242  	RCC_APB1ENR+0
0x0904	0x0CC10000  	_UART3_Write+0
0x0908	0x06290000  	_UART3_Read+0
0x090C	0x05E10000  	_UART3_Data_Ready+0
0x0910	0x05F90000  	_UART3_Tx_Idle+0
0x0914	0x4C004000  	UART4_SR+0
0x0918	0x03CC4242  	RCC_APB1ENR+0
0x091C	0x0D750000  	_UART4_Write+0
0x0920	0x05510000  	_UART4_Read+0
0x0924	0x05190000  	_UART4_Data_Ready+0
0x0928	0x04E90000  	_UART4_Tx_Idle+0
0x092C	0x50004000  	UART5_SR+0
0x0930	0x03D04242  	RCC_APB1ENR+0
0x0934	0x0EB50000  	_UART5_Write+0
0x0938	0x05010000  	_UART5_Read+0
0x093C	0x0BDD0000  	_UART5_Data_Ready+0
0x0940	0x0BC50000  	_UART5_Tx_Idle+0
; end of __Lib_UART_123_45_UARTx_Init_Advanced
_RCC_GetClocksFrequency:
;__Lib_System_105_107.c, 452 :: 		
; RCC_Clocks start address is: 0 (R0)
0x0324	0xB082    SUB	SP, SP, #8
0x0326	0xF8CDE000  STR	LR, [SP, #0]
0x032A	0x4603    MOV	R3, R0
; RCC_Clocks end address is: 0 (R0)
; RCC_Clocks start address is: 12 (R3)
;__Lib_System_105_107.c, 455 :: 		
0x032C	0x4619    MOV	R1, R3
0x032E	0x9101    STR	R1, [SP, #4]
0x0330	0xF7FFFF0E  BL	_Get_Fosc_kHz+0
0x0334	0xF24031E8  MOVW	R1, #1000
0x0338	0xFB00F201  MUL	R2, R0, R1
0x033C	0x9901    LDR	R1, [SP, #4]
0x033E	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 458 :: 		
0x0340	0x491F    LDR	R1, [PC, #124]
0x0342	0x7809    LDRB	R1, [R1, #0]
0x0344	0xF3C11103  UBFX	R1, R1, #4, #4
; tmp start address is: 0 (R0)
0x0348	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 459 :: 		
0x034A	0x491E    LDR	R1, [PC, #120]
0x034C	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x034E	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0350	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 461 :: 		
0x0352	0x1D1A    ADDS	R2, R3, #4
0x0354	0x6819    LDR	R1, [R3, #0]
0x0356	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0358	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 463 :: 		
0x035A	0x4919    LDR	R1, [PC, #100]
0x035C	0x8809    LDRH	R1, [R1, #0]
0x035E	0xF3C12102  UBFX	R1, R1, #8, #3
; tmp start address is: 0 (R0)
0x0362	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 464 :: 		
0x0364	0x4917    LDR	R1, [PC, #92]
0x0366	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0368	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x036A	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 466 :: 		
0x036C	0xF2030208  ADDW	R2, R3, #8
0x0370	0x1D19    ADDS	R1, R3, #4
0x0372	0x6809    LDR	R1, [R1, #0]
0x0374	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0376	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 468 :: 		
0x0378	0x4911    LDR	R1, [PC, #68]
0x037A	0x8809    LDRH	R1, [R1, #0]
0x037C	0xF3C121C2  UBFX	R1, R1, #11, #3
; tmp start address is: 0 (R0)
0x0380	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 469 :: 		
0x0382	0x4910    LDR	R1, [PC, #64]
0x0384	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x0386	0x7808    LDRB	R0, [R1, #0]
; presc start address is: 0 (R0)
0x0388	0xB2C0    UXTB	R0, R0
;__Lib_System_105_107.c, 471 :: 		
0x038A	0xF203020C  ADDW	R2, R3, #12
0x038E	0x1D19    ADDS	R1, R3, #4
0x0390	0x6809    LDR	R1, [R1, #0]
0x0392	0x40C1    LSRS	R1, R0
; presc end address is: 0 (R0)
0x0394	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 473 :: 		
0x0396	0x490A    LDR	R1, [PC, #40]
0x0398	0x8809    LDRH	R1, [R1, #0]
0x039A	0xF3C13181  UBFX	R1, R1, #14, #2
; tmp start address is: 0 (R0)
0x039E	0xB288    UXTH	R0, R1
;__Lib_System_105_107.c, 474 :: 		
0x03A0	0x4909    LDR	R1, [PC, #36]
0x03A2	0x1809    ADDS	R1, R1, R0
; tmp end address is: 0 (R0)
0x03A4	0x7809    LDRB	R1, [R1, #0]
; presc start address is: 0 (R0)
0x03A6	0xB2C8    UXTB	R0, R1
;__Lib_System_105_107.c, 476 :: 		
0x03A8	0xF2030210  ADDW	R2, R3, #16
0x03AC	0xF203010C  ADDW	R1, R3, #12
; RCC_Clocks end address is: 12 (R3)
0x03B0	0x6809    LDR	R1, [R1, #0]
0x03B2	0xFBB1F1F0  UDIV	R1, R1, R0
; presc end address is: 0 (R0)
0x03B6	0x6011    STR	R1, [R2, #0]
;__Lib_System_105_107.c, 477 :: 		
L_end_RCC_GetClocksFrequency:
0x03B8	0xF8DDE000  LDR	LR, [SP, #0]
0x03BC	0xB002    ADD	SP, SP, #8
0x03BE	0x4770    BX	LR
0x03C0	0x10044002  	RCC_CFGRbits+0
0x03C4	0x240C0000  	__Lib_System_105_107_APBAHBPrescTable+0
0x03C8	0x24280000  	__Lib_System_105_107_ADCPrescTable+0
; end of _RCC_GetClocksFrequency
_Get_Fosc_kHz:
;__Lib_Delays.c, 9 :: 		unsigned long Get_Fosc_kHz(){
;__Lib_Delays.c, 10 :: 		return __System_CLOCK_IN_KHZ;
0x0150	0x4801    LDR	R0, [PC, #4]
0x0152	0x6800    LDR	R0, [R0, #0]
;__Lib_Delays.c, 11 :: 		}
L_end_Get_Fosc_kHz:
0x0154	0x4770    BX	LR
0x0156	0xBF00    NOP
0x0158	0x02342000  	___System_CLOCK_IN_KHZ+0
; end of _Get_Fosc_kHz
_GPIO_Alternate_Function_Enable:
;__Lib_GPIO_32F10x.c, 303 :: 		
; module start address is: 0 (R0)
0x03CC	0xB081    SUB	SP, SP, #4
0x03CE	0xF8CDE000  STR	LR, [SP, #0]
; module end address is: 0 (R0)
; module start address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 304 :: 		
;__Lib_GPIO_32F10x.c, 305 :: 		
;__Lib_GPIO_32F10x.c, 307 :: 		
0x03D2	0x2201    MOVS	R2, #1
0x03D4	0xB252    SXTB	R2, R2
0x03D6	0x493E    LDR	R1, [PC, #248]
0x03D8	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 309 :: 		
0x03DA	0xF2000168  ADDW	R1, R0, #104
0x03DE	0x680B    LDR	R3, [R1, #0]
0x03E0	0xF06F6100  MVN	R1, #134217728
0x03E4	0xEA030201  AND	R2, R3, R1, LSL #0
; gpio_remap start address is: 16 (R4)
0x03E8	0x4614    MOV	R4, R2
;__Lib_GPIO_32F10x.c, 310 :: 		
0x03EA	0xF0036100  AND	R1, R3, #134217728
0x03EE	0x0EC9    LSRS	R1, R1, #27
; newstate start address is: 12 (R3)
0x03F0	0x460B    MOV	R3, R1
;__Lib_GPIO_32F10x.c, 312 :: 		
0x03F2	0xF0024100  AND	R1, R2, #-2147483648
0x03F6	0xF1B14F00  CMP	R1, #-2147483648
0x03FA	0xD102    BNE	L_GPIO_Alternate_Function_Enable66
;__Lib_GPIO_32F10x.c, 314 :: 		
0x03FC	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x03FE	0x680A    LDR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 315 :: 		
; tmpreg end address is: 8 (R2)
0x0400	0xE001    B	L_GPIO_Alternate_Function_Enable67
L_GPIO_Alternate_Function_Enable66:
;__Lib_GPIO_32F10x.c, 318 :: 		
0x0402	0x4935    LDR	R1, [PC, #212]
; tmpreg start address is: 8 (R2)
0x0404	0x680A    LDR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 319 :: 		
L_GPIO_Alternate_Function_Enable67:
;__Lib_GPIO_32F10x.c, 321 :: 		
; tmpreg start address is: 8 (R2)
0x0406	0xF4042170  AND	R1, R4, #983040
0x040A	0x0C09    LSRS	R1, R1, #16
; tmpmask start address is: 24 (R6)
0x040C	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 322 :: 		
0x040E	0xF64F71FF  MOVW	R1, #65535
0x0412	0xEA040101  AND	R1, R4, R1, LSL #0
; tmp start address is: 20 (R5)
0x0416	0x460D    MOV	R5, R1
;__Lib_GPIO_32F10x.c, 324 :: 		
0x0418	0xF4041140  AND	R1, R4, #3145728
0x041C	0xF5B11F40  CMP	R1, #3145728
0x0420	0xD10D    BNE	L_GPIO_Alternate_Function_Enable68
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 326 :: 		
0x0422	0xF06F6170  MVN	R1, #251658240
0x0426	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
; tmpreg start address is: 24 (R6)
0x042A	0x460E    MOV	R6, R1
;__Lib_GPIO_32F10x.c, 327 :: 		
0x042C	0x492A    LDR	R1, [PC, #168]
0x042E	0x680A    LDR	R2, [R1, #0]
0x0430	0xF06F6170  MVN	R1, #251658240
0x0434	0x400A    ANDS	R2, R1
0x0436	0x4928    LDR	R1, [PC, #160]
0x0438	0x600A    STR	R2, [R1, #0]
;__Lib_GPIO_32F10x.c, 328 :: 		
0x043A	0x4632    MOV	R2, R6
; tmpreg end address is: 24 (R6)
0x043C	0xE016    B	L_GPIO_Alternate_Function_Enable69
L_GPIO_Alternate_Function_Enable68:
;__Lib_GPIO_32F10x.c, 329 :: 		
; tmpreg start address is: 8 (R2)
; tmpmask start address is: 24 (R6)
0x043E	0xF4041180  AND	R1, R4, #1048576
0x0442	0xF5B11F80  CMP	R1, #1048576
0x0446	0xD109    BNE	L_GPIO_Alternate_Function_Enable70
;__Lib_GPIO_32F10x.c, 331 :: 		
0x0448	0xF04F0103  MOV	R1, #3
0x044C	0x40B1    LSLS	R1, R6
; tmpmask end address is: 24 (R6)
;__Lib_GPIO_32F10x.c, 332 :: 		
0x044E	0x43C9    MVN	R1, R1
0x0450	0xEA020101  AND	R1, R2, R1, LSL #0
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 333 :: 		
0x0454	0xF0416170  ORR	R1, R1, #251658240
; tmpreg start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 334 :: 		
0x0458	0x460A    MOV	R2, R1
; tmpreg end address is: 4 (R1)
0x045A	0xE007    B	L_GPIO_Alternate_Function_Enable71
L_GPIO_Alternate_Function_Enable70:
;__Lib_GPIO_32F10x.c, 337 :: 		
; tmpreg start address is: 8 (R2)
0x045C	0x0D61    LSRS	R1, R4, #21
0x045E	0x0109    LSLS	R1, R1, #4
0x0460	0xFA05F101  LSL	R1, R5, R1
0x0464	0x43C9    MVN	R1, R1
0x0466	0x400A    ANDS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 338 :: 		
0x0468	0xF0426270  ORR	R2, R2, #251658240
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 339 :: 		
L_GPIO_Alternate_Function_Enable71:
; tmpreg start address is: 8 (R2)
; tmpreg end address is: 8 (R2)
L_GPIO_Alternate_Function_Enable69:
;__Lib_GPIO_32F10x.c, 341 :: 		
; tmpreg start address is: 8 (R2)
0x046C	0xB12B    CBZ	R3, L__GPIO_Alternate_Function_Enable106
; newstate end address is: 12 (R3)
;__Lib_GPIO_32F10x.c, 343 :: 		
0x046E	0x0D61    LSRS	R1, R4, #21
0x0470	0x0109    LSLS	R1, R1, #4
0x0472	0xFA05F101  LSL	R1, R5, R1
; tmp end address is: 20 (R5)
0x0476	0x430A    ORRS	R2, R1
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 344 :: 		
0x0478	0xE7FF    B	L_GPIO_Alternate_Function_Enable72
L__GPIO_Alternate_Function_Enable106:
;__Lib_GPIO_32F10x.c, 341 :: 		
;__Lib_GPIO_32F10x.c, 344 :: 		
L_GPIO_Alternate_Function_Enable72:
;__Lib_GPIO_32F10x.c, 346 :: 		
; tmpreg start address is: 8 (R2)
0x047A	0xF0044100  AND	R1, R4, #-2147483648
; gpio_remap end address is: 16 (R4)
0x047E	0xF1B14F00  CMP	R1, #-2147483648
0x0482	0xD102    BNE	L_GPIO_Alternate_Function_Enable73
;__Lib_GPIO_32F10x.c, 348 :: 		
0x0484	0x4913    LDR	R1, [PC, #76]
0x0486	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 349 :: 		
0x0488	0xE001    B	L_GPIO_Alternate_Function_Enable74
L_GPIO_Alternate_Function_Enable73:
;__Lib_GPIO_32F10x.c, 352 :: 		
; tmpreg start address is: 8 (R2)
0x048A	0x4913    LDR	R1, [PC, #76]
0x048C	0x600A    STR	R2, [R1, #0]
; tmpreg end address is: 8 (R2)
;__Lib_GPIO_32F10x.c, 353 :: 		
L_GPIO_Alternate_Function_Enable74:
;__Lib_GPIO_32F10x.c, 356 :: 		
; i start address is: 40 (R10)
0x048E	0xF2400A00  MOVW	R10, #0
; module end address is: 0 (R0)
; i end address is: 40 (R10)
0x0492	0x4681    MOV	R9, R0
;__Lib_GPIO_32F10x.c, 357 :: 		
L_GPIO_Alternate_Function_Enable75:
; i start address is: 40 (R10)
; module start address is: 36 (R9)
0x0494	0xEA4F018A  LSL	R1, R10, #2
0x0498	0xEB090101  ADD	R1, R9, R1, LSL #0
0x049C	0x6809    LDR	R1, [R1, #0]
0x049E	0xF1B13FFF  CMP	R1, #-1
0x04A2	0xD010    BEQ	L_GPIO_Alternate_Function_Enable76
;__Lib_GPIO_32F10x.c, 358 :: 		
0x04A4	0xF1090134  ADD	R1, R9, #52
0x04A8	0xEA4F038A  LSL	R3, R10, #2
0x04AC	0x18C9    ADDS	R1, R1, R3
0x04AE	0x6809    LDR	R1, [R1, #0]
0x04B0	0x460A    MOV	R2, R1
0x04B2	0xEB090103  ADD	R1, R9, R3, LSL #0
0x04B6	0x6809    LDR	R1, [R1, #0]
0x04B8	0x4608    MOV	R0, R1
0x04BA	0x4611    MOV	R1, R2
0x04BC	0xF7FFFE4E  BL	__Lib_GPIO_32F10x_GPIO_Configure_Pin+0
;__Lib_GPIO_32F10x.c, 359 :: 		
0x04C0	0xF10A0A01  ADD	R10, R10, #1
;__Lib_GPIO_32F10x.c, 360 :: 		
; module end address is: 36 (R9)
; i end address is: 40 (R10)
0x04C4	0xE7E6    B	L_GPIO_Alternate_Function_Enable75
L_GPIO_Alternate_Function_Enable76:
;__Lib_GPIO_32F10x.c, 363 :: 		
L_end_GPIO_Alternate_Function_Enable:
0x04C6	0xF8DDE000  LDR	LR, [SP, #0]
0x04CA	0xB001    ADD	SP, SP, #4
0x04CC	0x4770    BX	LR
0x04CE	0xBF00    NOP
0x04D0	0x03004242  	RCC_APB2ENRbits+0
0x04D4	0x001C4001  	AFIO_MAPR2+0
0x04D8	0x00044001  	AFIO_MAPR+0
; end of _GPIO_Alternate_Function_Enable
__Lib_GPIO_32F10x_GPIO_Configure_Pin:
;__Lib_GPIO_32F10x.c, 282 :: 		
; config start address is: 4 (R1)
; af_pin start address is: 0 (R0)
0x015C	0xB083    SUB	SP, SP, #12
0x015E	0xF8CDE000  STR	LR, [SP, #0]
; config end address is: 4 (R1)
; af_pin end address is: 0 (R0)
; af_pin start address is: 0 (R0)
; config start address is: 4 (R1)
;__Lib_GPIO_32F10x.c, 286 :: 		
0x0162	0xF00003FF  AND	R3, R0, #255
; af_pin end address is: 0 (R0)
0x0166	0x091A    LSRS	R2, R3, #4
; port start address is: 0 (R0)
0x0168	0x4610    MOV	R0, R2
;__Lib_GPIO_32F10x.c, 287 :: 		
0x016A	0xF003020F  AND	R2, R3, #15
; pin start address is: 12 (R3)
0x016E	0x4613    MOV	R3, R2
;__Lib_GPIO_32F10x.c, 290 :: 		
0x0170	0xE014    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin57
; port end address is: 0 (R0)
;__Lib_GPIO_32F10x.c, 291 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin59:
0x0172	0x4A19    LDR	R2, [PC, #100]
0x0174	0x9202    STR	R2, [SP, #8]
0x0176	0xE01F    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 292 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin60:
0x0178	0x4A18    LDR	R2, [PC, #96]
0x017A	0x9202    STR	R2, [SP, #8]
0x017C	0xE01C    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 293 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin61:
0x017E	0x4A18    LDR	R2, [PC, #96]
0x0180	0x9202    STR	R2, [SP, #8]
0x0182	0xE019    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 294 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin62:
0x0184	0x4A17    LDR	R2, [PC, #92]
0x0186	0x9202    STR	R2, [SP, #8]
0x0188	0xE016    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 295 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin63:
0x018A	0x4A17    LDR	R2, [PC, #92]
0x018C	0x9202    STR	R2, [SP, #8]
0x018E	0xE013    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 296 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin64:
0x0190	0x4A16    LDR	R2, [PC, #88]
0x0192	0x9202    STR	R2, [SP, #8]
0x0194	0xE010    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 297 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin65:
0x0196	0x4A16    LDR	R2, [PC, #88]
0x0198	0x9202    STR	R2, [SP, #8]
0x019A	0xE00D    B	L___Lib_GPIO_32F10x_GPIO_Configure_Pin58
;__Lib_GPIO_32F10x.c, 298 :: 		
L___Lib_GPIO_32F10x_GPIO_Configure_Pin57:
; port start address is: 0 (R0)
0x019C	0x2800    CMP	R0, #0
0x019E	0xD0E8    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin59
0x01A0	0x2801    CMP	R0, #1
0x01A2	0xD0E9    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin60
0x01A4	0x2802    CMP	R0, #2
0x01A6	0xD0EA    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin61
0x01A8	0x2803    CMP	R0, #3
0x01AA	0xD0EB    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin62
0x01AC	0x2804    CMP	R0, #4
0x01AE	0xD0EC    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin63
0x01B0	0x2805    CMP	R0, #5
0x01B2	0xD0ED    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin64
0x01B4	0x2806    CMP	R0, #6
0x01B6	0xD0EE    BEQ	L___Lib_GPIO_32F10x_GPIO_Configure_Pin65
; port end address is: 0 (R0)
L___Lib_GPIO_32F10x_GPIO_Configure_Pin58:
;__Lib_GPIO_32F10x.c, 300 :: 		
0x01B8	0x2201    MOVS	R2, #1
0x01BA	0xB212    SXTH	R2, R2
0x01BC	0x409A    LSLS	R2, R3
; pin end address is: 12 (R3)
0x01BE	0xF8AD2004  STRH	R2, [SP, #4]
; config end address is: 4 (R1)
0x01C2	0x9802    LDR	R0, [SP, #8]
0x01C4	0x460A    MOV	R2, R1
0x01C6	0xF8BD1004  LDRH	R1, [SP, #4]
0x01CA	0xF000FBBB  BL	_GPIO_Config+0
;__Lib_GPIO_32F10x.c, 301 :: 		
L_end_GPIO_Configure_Pin:
0x01CE	0xF8DDE000  LDR	LR, [SP, #0]
0x01D2	0xB003    ADD	SP, SP, #12
0x01D4	0x4770    BX	LR
0x01D6	0xBF00    NOP
0x01D8	0x08004001  	#1073809408
0x01DC	0x0C004001  	#1073810432
0x01E0	0x10004001  	#1073811456
0x01E4	0x14004001  	#1073812480
0x01E8	0x18004001  	#1073813504
0x01EC	0x1C004001  	#1073814528
0x01F0	0x20004001  	#1073815552
; end of __Lib_GPIO_32F10x_GPIO_Configure_Pin
easymx_v7_STM32F107VC__uartInit_2:
;__em_f107vc_uart.c, 35 :: 		static T_mikrobus_ret _uartInit_2(const uint32_t* cfg)
; cfg start address is: 0 (R0)
0x16AC	0xB081    SUB	SP, SP, #4
0x16AE	0xF8CDE000  STR	LR, [SP, #0]
; cfg end address is: 0 (R0)
; cfg start address is: 0 (R0)
;__em_f107vc_uart.c, 37 :: 		UART2_Init_Advanced( (unsigned long) cfg[0], (unsigned int) cfg[1], (unsigned int) cfg[2], (unsigned int)cfg[3], &_GPIO_MODULE_USART2_PD56);
0x16B2	0x4D0B    LDR	R5, [PC, #44]
0x16B4	0xF200010C  ADDW	R1, R0, #12
0x16B8	0x680C    LDR	R4, [R1, #0]
0x16BA	0xF2000108  ADDW	R1, R0, #8
0x16BE	0x680B    LDR	R3, [R1, #0]
0x16C0	0x1D01    ADDS	R1, R0, #4
0x16C2	0x680A    LDR	R2, [R1, #0]
0x16C4	0x6801    LDR	R1, [R0, #0]
; cfg end address is: 0 (R0)
0x16C6	0x4608    MOV	R0, R1
0x16C8	0xB291    UXTH	R1, R2
0x16CA	0xB29A    UXTH	R2, R3
0x16CC	0xB2A3    UXTH	R3, R4
0x16CE	0xB420    PUSH	(R5)
0x16D0	0xF7FFFBDC  BL	_UART2_Init_Advanced+0
0x16D4	0xB001    ADD	SP, SP, #4
;__em_f107vc_uart.c, 38 :: 		return _MIKROBUS_OK;
0x16D6	0x2000    MOVS	R0, __MIKROBUS_OK
;__em_f107vc_uart.c, 39 :: 		}
L_end__uartInit_2:
0x16D8	0xF8DDE000  LDR	LR, [SP, #0]
0x16DC	0xB001    ADD	SP, SP, #4
0x16DE	0x4770    BX	LR
0x16E0	0x231C0000  	__GPIO_MODULE_USART2_PD56+0
; end of easymx_v7_STM32F107VC__uartInit_2
_UART2_Init_Advanced:
;__Lib_UART_123_45.c, 378 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0E8C	0xB081    SUB	SP, SP, #4
0x0E8E	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0E92	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 380 :: 		
0x0E94	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0E96	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0E98	0xB408    PUSH	(R3)
0x0E9A	0xB293    UXTH	R3, R2
0x0E9C	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0E9E	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0EA0	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x0EA2	0xF7FFFC2D  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0EA6	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 381 :: 		
L_end_UART2_Init_Advanced:
0x0EA8	0xF8DDE000  LDR	LR, [SP, #0]
0x0EAC	0xB001    ADD	SP, SP, #4
0x0EAE	0x4770    BX	LR
0x0EB0	0x44004000  	USART2_SR+0
; end of _UART2_Init_Advanced
_mikrobus_logInit:
;easymx_v7_STM32F107VC.c, 283 :: 		T_mikrobus_ret mikrobus_logInit(T_log_bus port, const uint32_t baud)
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x18F0	0xB081    SUB	SP, SP, #4
0x18F2	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 4 (R1)
; port end address is: 0 (R0)
; port start address is: 0 (R0)
; baud start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 285 :: 		switch( port )
0x18F6	0xE011    B	L_mikrobus_logInit88
; port end address is: 0 (R0)
;easymx_v7_STM32F107VC.c, 288 :: 		case _MIKROBUS1 : return _log_init1( baud );
L_mikrobus_logInit90:
0x18F8	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x18FA	0xF7FFFF2B  BL	easymx_v7_STM32F107VC__log_init1+0
0x18FE	0xE016    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 291 :: 		case _MIKROBUS2: return _log_init2( baud );
L_mikrobus_logInit91:
; baud start address is: 4 (R1)
0x1900	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x1902	0xF7FFFF0B  BL	easymx_v7_STM32F107VC__log_init2+0
0x1906	0xE012    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 309 :: 		case _LOG_USBUART_A : return _log_initUartA( baud );
L_mikrobus_logInit92:
; baud start address is: 4 (R1)
0x1908	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x190A	0xF7FFFEEB  BL	easymx_v7_STM32F107VC__log_initUartA+0
0x190E	0xE00E    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 312 :: 		case _LOG_USBUART_B : return _log_initUartB( baud );
L_mikrobus_logInit93:
; baud start address is: 4 (R1)
0x1910	0x4608    MOV	R0, R1
; baud end address is: 4 (R1)
0x1912	0xF7FFFCDB  BL	easymx_v7_STM32F107VC__log_initUartB+0
0x1916	0xE00A    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 314 :: 		default : return _MIKROBUS_ERR_BUS;
L_mikrobus_logInit94:
0x1918	0x2001    MOVS	R0, #1
0x191A	0xE008    B	L_end_mikrobus_logInit
;easymx_v7_STM32F107VC.c, 315 :: 		}
L_mikrobus_logInit88:
; baud start address is: 4 (R1)
; port start address is: 0 (R0)
0x191C	0x2800    CMP	R0, #0
0x191E	0xD0EB    BEQ	L_mikrobus_logInit90
0x1920	0x2801    CMP	R0, #1
0x1922	0xD0ED    BEQ	L_mikrobus_logInit91
0x1924	0x2820    CMP	R0, #32
0x1926	0xD0EF    BEQ	L_mikrobus_logInit92
0x1928	0x2830    CMP	R0, #48
0x192A	0xD0F1    BEQ	L_mikrobus_logInit93
; port end address is: 0 (R0)
; baud end address is: 4 (R1)
0x192C	0xE7F4    B	L_mikrobus_logInit94
;easymx_v7_STM32F107VC.c, 317 :: 		}
L_end_mikrobus_logInit:
0x192E	0xF8DDE000  LDR	LR, [SP, #0]
0x1932	0xB001    ADD	SP, SP, #4
0x1934	0x4770    BX	LR
; end of _mikrobus_logInit
easymx_v7_STM32F107VC__log_init1:
;__em_f107vc_log.c, 23 :: 		static T_mikrobus_ret _log_init1(uint32_t baud)
; baud start address is: 0 (R0)
0x1754	0xB081    SUB	SP, SP, #4
0x1756	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 25 :: 		UART3_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART3_PD89);
0x175A	0x4909    LDR	R1, [PC, #36]
0x175C	0xB402    PUSH	(R1)
0x175E	0xF2400300  MOVW	R3, #0
0x1762	0xF2400200  MOVW	R2, #0
0x1766	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x176A	0xF7FFFB11  BL	_UART3_Init_Advanced+0
0x176E	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 26 :: 		logger = UART3_Write;
0x1770	0x4A04    LDR	R2, [PC, #16]
0x1772	0x4905    LDR	R1, [PC, #20]
0x1774	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 27 :: 		return 0;
0x1776	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 28 :: 		}
L_end__log_init1:
0x1778	0xF8DDE000  LDR	LR, [SP, #0]
0x177C	0xB001    ADD	SP, SP, #4
0x177E	0x4770    BX	LR
0x1780	0x22440000  	__GPIO_MODULE_USART3_PD89+0
0x1784	0x0CC10000  	_UART3_Write+0
0x1788	0x02302000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init1
easymx_v7_STM32F107VC__log_init2:
;__em_f107vc_log.c, 30 :: 		static T_mikrobus_ret _log_init2(uint32_t baud)
; baud start address is: 0 (R0)
0x171C	0xB081    SUB	SP, SP, #4
0x171E	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 32 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x1722	0x4909    LDR	R1, [PC, #36]
0x1724	0xB402    PUSH	(R1)
0x1726	0xF2400300  MOVW	R3, #0
0x172A	0xF2400200  MOVW	R2, #0
0x172E	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x1732	0xF7FFFBAB  BL	_UART2_Init_Advanced+0
0x1736	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 33 :: 		logger = UART2_Write;
0x1738	0x4A04    LDR	R2, [PC, #16]
0x173A	0x4905    LDR	R1, [PC, #20]
0x173C	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 34 :: 		return 0;
0x173E	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 35 :: 		}
L_end__log_init2:
0x1740	0xF8DDE000  LDR	LR, [SP, #0]
0x1744	0xB001    ADD	SP, SP, #4
0x1746	0x4770    BX	LR
0x1748	0x231C0000  	__GPIO_MODULE_USART2_PD56+0
0x174C	0x0CA50000  	_UART2_Write+0
0x1750	0x02302000  	_logger+0
; end of easymx_v7_STM32F107VC__log_init2
easymx_v7_STM32F107VC__log_initUartA:
;__em_f107vc_log.c, 37 :: 		static T_mikrobus_ret _log_initUartA(uint32_t baud)
; baud start address is: 0 (R0)
0x16E4	0xB081    SUB	SP, SP, #4
0x16E6	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 39 :: 		UART1_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART1_PA9_10);
0x16EA	0x4909    LDR	R1, [PC, #36]
0x16EC	0xB402    PUSH	(R1)
0x16EE	0xF2400300  MOVW	R3, #0
0x16F2	0xF2400200  MOVW	R2, #0
0x16F6	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x16FA	0xF7FFFABD  BL	_UART1_Init_Advanced+0
0x16FE	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 40 :: 		logger = UART1_Write;
0x1700	0x4A04    LDR	R2, [PC, #16]
0x1702	0x4905    LDR	R1, [PC, #20]
0x1704	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 41 :: 		return 0;
0x1706	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 42 :: 		}
L_end__log_initUartA:
0x1708	0xF8DDE000  LDR	LR, [SP, #0]
0x170C	0xB001    ADD	SP, SP, #4
0x170E	0x4770    BX	LR
0x1710	0x22B00000  	__GPIO_MODULE_USART1_PA9_10+0
0x1714	0x0CDD0000  	_UART1_Write+0
0x1718	0x02302000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartA
_UART1_Init_Advanced:
;__Lib_UART_123_45.c, 372 :: 		
; stop_bits start address is: 12 (R3)
; parity start address is: 8 (R2)
; data_bits start address is: 4 (R1)
; baud_rate start address is: 0 (R0)
0x0C78	0xB081    SUB	SP, SP, #4
0x0C7A	0xF8CDE000  STR	LR, [SP, #0]
; stop_bits end address is: 12 (R3)
; parity end address is: 8 (R2)
; data_bits end address is: 4 (R1)
; baud_rate end address is: 0 (R0)
; baud_rate start address is: 0 (R0)
; data_bits start address is: 4 (R1)
; parity start address is: 8 (R2)
; stop_bits start address is: 12 (R3)
; module start address is: 20 (R5)
0x0C7E	0x9D01    LDR	R5, [SP, #4]
;__Lib_UART_123_45.c, 374 :: 		
0x0C80	0x462C    MOV	R4, R5
; module end address is: 20 (R5)
0x0C82	0xB410    PUSH	(R4)
; parity end address is: 8 (R2)
0x0C84	0xB408    PUSH	(R3)
0x0C86	0xB293    UXTH	R3, R2
0x0C88	0xB28A    UXTH	R2, R1
; data_bits end address is: 4 (R1)
0x0C8A	0x4601    MOV	R1, R0
; baud_rate end address is: 0 (R0)
0x0C8C	0x4803    LDR	R0, [PC, #12]
; stop_bits end address is: 12 (R3)
0x0C8E	0xF7FFFD37  BL	__Lib_UART_123_45_UARTx_Init_Advanced+0
0x0C92	0xB002    ADD	SP, SP, #8
;__Lib_UART_123_45.c, 375 :: 		
L_end_UART1_Init_Advanced:
0x0C94	0xF8DDE000  LDR	LR, [SP, #0]
0x0C98	0xB001    ADD	SP, SP, #4
0x0C9A	0x4770    BX	LR
0x0C9C	0x38004001  	USART1_SR+0
; end of _UART1_Init_Advanced
easymx_v7_STM32F107VC__log_initUartB:
;__em_f107vc_log.c, 44 :: 		static T_mikrobus_ret _log_initUartB(uint32_t baud)
; baud start address is: 0 (R0)
0x12CC	0xB081    SUB	SP, SP, #4
0x12CE	0xF8CDE000  STR	LR, [SP, #0]
; baud end address is: 0 (R0)
; baud start address is: 0 (R0)
;__em_f107vc_log.c, 46 :: 		UART2_Init_Advanced(baud, _UART_8_BIT_DATA, _UART_NOPARITY, _UART_ONE_STOPBIT, &_GPIO_MODULE_USART2_PD56);
0x12D2	0x4909    LDR	R1, [PC, #36]
0x12D4	0xB402    PUSH	(R1)
0x12D6	0xF2400300  MOVW	R3, #0
0x12DA	0xF2400200  MOVW	R2, #0
0x12DE	0xF2400100  MOVW	R1, #0
; baud end address is: 0 (R0)
0x12E2	0xF7FFFDD3  BL	_UART2_Init_Advanced+0
0x12E6	0xB001    ADD	SP, SP, #4
;__em_f107vc_log.c, 47 :: 		logger = UART2_Write;
0x12E8	0x4A04    LDR	R2, [PC, #16]
0x12EA	0x4905    LDR	R1, [PC, #20]
0x12EC	0x600A    STR	R2, [R1, #0]
;__em_f107vc_log.c, 48 :: 		return 0;
0x12EE	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 49 :: 		}
L_end__log_initUartB:
0x12F0	0xF8DDE000  LDR	LR, [SP, #0]
0x12F4	0xB001    ADD	SP, SP, #4
0x12F6	0x4770    BX	LR
0x12F8	0x231C0000  	__GPIO_MODULE_USART2_PD56+0
0x12FC	0x0CA50000  	_UART2_Write+0
0x1300	0x02302000  	_logger+0
; end of easymx_v7_STM32F107VC__log_initUartB
_mikrobus_logWrite:
;easymx_v7_STM32F107VC.c, 319 :: 		T_mikrobus_ret mikrobus_logWrite(uint8_t* data_, T_log_format format)
; format start address is: 4 (R1)
; data_ start address is: 0 (R0)
0x1938	0xB083    SUB	SP, SP, #12
0x193A	0xF8CDE000  STR	LR, [SP, #0]
0x193E	0x4602    MOV	R2, R0
; format end address is: 4 (R1)
; data_ end address is: 0 (R0)
; data_ start address is: 8 (R2)
; format start address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 321 :: 		uint8_t *ptr = data_;
; ptr start address is: 0 (R0)
0x1940	0x4610    MOV	R0, R2
; data_ end address is: 8 (R2)
;easymx_v7_STM32F107VC.c, 322 :: 		uint8_t row = 13;
0x1942	0x220D    MOVS	R2, #13
0x1944	0xF88D2008  STRB	R2, [SP, #8]
0x1948	0x220A    MOVS	R2, #10
0x194A	0xF88D2009  STRB	R2, [SP, #9]
;easymx_v7_STM32F107VC.c, 323 :: 		uint8_t line = 10;
;easymx_v7_STM32F107VC.c, 324 :: 		switch( format )
0x194E	0xE01F    B	L_mikrobus_logWrite95
; format end address is: 4 (R1)
;easymx_v7_STM32F107VC.c, 326 :: 		case _LOG_BYTE :
L_mikrobus_logWrite97:
;easymx_v7_STM32F107VC.c, 327 :: 		_log_write( ptr );
; ptr end address is: 0 (R0)
0x1950	0xF7FFFC72  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 328 :: 		break;
0x1954	0xE023    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 329 :: 		case _LOG_TEXT :
L_mikrobus_logWrite98:
;easymx_v7_STM32F107VC.c, 330 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite99:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x1956	0x7802    LDRB	R2, [R0, #0]
0x1958	0xB12A    CBZ	R2, L_mikrobus_logWrite100
;easymx_v7_STM32F107VC.c, 332 :: 		_log_write( ptr );
0x195A	0x9001    STR	R0, [SP, #4]
0x195C	0xF7FFFC6C  BL	easymx_v7_STM32F107VC__log_write+0
0x1960	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 333 :: 		ptr++;
0x1962	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 334 :: 		}
; ptr end address is: 0 (R0)
0x1964	0xE7F7    B	L_mikrobus_logWrite99
L_mikrobus_logWrite100:
;easymx_v7_STM32F107VC.c, 335 :: 		break;
0x1966	0xE01A    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 336 :: 		case _LOG_LINE :
L_mikrobus_logWrite101:
;easymx_v7_STM32F107VC.c, 337 :: 		while( *ptr )
; ptr start address is: 0 (R0)
L_mikrobus_logWrite102:
; ptr end address is: 0 (R0)
; ptr start address is: 0 (R0)
0x1968	0x7802    LDRB	R2, [R0, #0]
0x196A	0xB12A    CBZ	R2, L_mikrobus_logWrite103
;easymx_v7_STM32F107VC.c, 339 :: 		_log_write( ptr );
0x196C	0x9001    STR	R0, [SP, #4]
0x196E	0xF7FFFC63  BL	easymx_v7_STM32F107VC__log_write+0
0x1972	0x9801    LDR	R0, [SP, #4]
;easymx_v7_STM32F107VC.c, 340 :: 		ptr++;
0x1974	0x1C40    ADDS	R0, R0, #1
;easymx_v7_STM32F107VC.c, 341 :: 		}
; ptr end address is: 0 (R0)
0x1976	0xE7F7    B	L_mikrobus_logWrite102
L_mikrobus_logWrite103:
;easymx_v7_STM32F107VC.c, 342 :: 		_log_write( &row );
0x1978	0xAA02    ADD	R2, SP, #8
0x197A	0x4610    MOV	R0, R2
0x197C	0xF7FFFC5C  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 343 :: 		_log_write( &line );
0x1980	0xF10D0209  ADD	R2, SP, #9
0x1984	0x4610    MOV	R0, R2
0x1986	0xF7FFFC57  BL	easymx_v7_STM32F107VC__log_write+0
;easymx_v7_STM32F107VC.c, 344 :: 		break;
0x198A	0xE008    B	L_mikrobus_logWrite96
;easymx_v7_STM32F107VC.c, 345 :: 		default :
L_mikrobus_logWrite104:
;easymx_v7_STM32F107VC.c, 346 :: 		return _MIKROBUS_ERR_LOG;
0x198C	0x2006    MOVS	R0, #6
0x198E	0xE007    B	L_end_mikrobus_logWrite
;easymx_v7_STM32F107VC.c, 347 :: 		}
L_mikrobus_logWrite95:
; ptr start address is: 0 (R0)
; format start address is: 4 (R1)
0x1990	0x2900    CMP	R1, #0
0x1992	0xD0DD    BEQ	L_mikrobus_logWrite97
0x1994	0x2901    CMP	R1, #1
0x1996	0xD0DE    BEQ	L_mikrobus_logWrite98
0x1998	0x2902    CMP	R1, #2
0x199A	0xD0E5    BEQ	L_mikrobus_logWrite101
; format end address is: 4 (R1)
; ptr end address is: 0 (R0)
0x199C	0xE7F6    B	L_mikrobus_logWrite104
L_mikrobus_logWrite96:
;easymx_v7_STM32F107VC.c, 348 :: 		return 0;
0x199E	0x2000    MOVS	R0, #0
;easymx_v7_STM32F107VC.c, 349 :: 		}
L_end_mikrobus_logWrite:
0x19A0	0xF8DDE000  LDR	LR, [SP, #0]
0x19A4	0xB003    ADD	SP, SP, #12
0x19A6	0x4770    BX	LR
; end of _mikrobus_logWrite
easymx_v7_STM32F107VC__log_write:
;__em_f107vc_log.c, 17 :: 		static T_mikrobus_ret _log_write(uint8_t *data_)
; data_ start address is: 0 (R0)
0x1238	0xB081    SUB	SP, SP, #4
0x123A	0xF8CDE000  STR	LR, [SP, #0]
; data_ end address is: 0 (R0)
; data_ start address is: 0 (R0)
;__em_f107vc_log.c, 19 :: 		logger( *data_ );
0x123E	0x7801    LDRB	R1, [R0, #0]
; data_ end address is: 0 (R0)
0x1240	0xB2CC    UXTB	R4, R1
0x1242	0xB2A0    UXTH	R0, R4
0x1244	0x4C03    LDR	R4, [PC, #12]
0x1246	0x6824    LDR	R4, [R4, #0]
0x1248	0x47A0    BLX	R4
;__em_f107vc_log.c, 20 :: 		return 0;
0x124A	0x2000    MOVS	R0, #0
;__em_f107vc_log.c, 21 :: 		}
L_end__log_write:
0x124C	0xF8DDE000  LDR	LR, [SP, #0]
0x1250	0xB001    ADD	SP, SP, #4
0x1252	0x4770    BX	LR
0x1254	0x02302000  	_logger+0
; end of easymx_v7_STM32F107VC__log_write
_UART1_Write:
;__Lib_UART_123_45.c, 41 :: 		
; _data start address is: 0 (R0)
0x0CDC	0xB081    SUB	SP, SP, #4
0x0CDE	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 42 :: 		
0x0CE2	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0CE4	0x4803    LDR	R0, [PC, #12]
0x0CE6	0xF7FFFC23  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 43 :: 		
L_end_UART1_Write:
0x0CEA	0xF8DDE000  LDR	LR, [SP, #0]
0x0CEE	0xB001    ADD	SP, SP, #4
0x0CF0	0x4770    BX	LR
0x0CF2	0xBF00    NOP
0x0CF4	0x38004001  	USART1_SR+0
; end of _UART1_Write
__Lib_UART_123_45_UARTx_Write:
;__Lib_UART_123_45.c, 35 :: 		
; _data start address is: 4 (R1)
; UART_Base start address is: 0 (R0)
0x0530	0xB081    SUB	SP, SP, #4
; _data end address is: 4 (R1)
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; _data start address is: 4 (R1)
0x0532	0xF8AD1000  STRH	R1, [SP, #0]
; UART_Base end address is: 0 (R0)
; _data end address is: 4 (R1)
0x0536	0x4601    MOV	R1, R0
0x0538	0xF8BD0000  LDRH	R0, [SP, #0]
;__Lib_UART_123_45.c, 36 :: 		
L___Lib_UART_123_45_UARTx_Write0:
; _data start address is: 0 (R0)
; UART_Base start address is: 4 (R1)
0x053C	0x680B    LDR	R3, [R1, #0]
0x053E	0xF3C312C0  UBFX	R2, R3, #7, #1
0x0542	0xB902    CBNZ	R2, L___Lib_UART_123_45_UARTx_Write1
;__Lib_UART_123_45.c, 37 :: 		
0x0544	0xE7FA    B	L___Lib_UART_123_45_UARTx_Write0
L___Lib_UART_123_45_UARTx_Write1:
;__Lib_UART_123_45.c, 38 :: 		
0x0546	0x1D0A    ADDS	R2, R1, #4
; UART_Base end address is: 4 (R1)
0x0548	0x6010    STR	R0, [R2, #0]
; _data end address is: 0 (R0)
;__Lib_UART_123_45.c, 39 :: 		
L_end_UARTx_Write:
0x054A	0xB001    ADD	SP, SP, #4
0x054C	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Write
_UART2_Write:
;__Lib_UART_123_45.c, 45 :: 		
; _data start address is: 0 (R0)
0x0CA4	0xB081    SUB	SP, SP, #4
0x0CA6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 46 :: 		
0x0CAA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0CAC	0x4803    LDR	R0, [PC, #12]
0x0CAE	0xF7FFFC3F  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 47 :: 		
L_end_UART2_Write:
0x0CB2	0xF8DDE000  LDR	LR, [SP, #0]
0x0CB6	0xB001    ADD	SP, SP, #4
0x0CB8	0x4770    BX	LR
0x0CBA	0xBF00    NOP
0x0CBC	0x44004000  	USART2_SR+0
; end of _UART2_Write
_UART3_Write:
;__Lib_UART_123_45.c, 49 :: 		
; _data start address is: 0 (R0)
0x0CC0	0xB081    SUB	SP, SP, #4
0x0CC2	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 50 :: 		
0x0CC6	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0CC8	0x4803    LDR	R0, [PC, #12]
0x0CCA	0xF7FFFC31  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 51 :: 		
L_end_UART3_Write:
0x0CCE	0xF8DDE000  LDR	LR, [SP, #0]
0x0CD2	0xB001    ADD	SP, SP, #4
0x0CD4	0x4770    BX	LR
0x0CD6	0xBF00    NOP
0x0CD8	0x48004000  	USART3_SR+0
; end of _UART3_Write
_UART4_Write:
;__Lib_UART_123_45.c, 53 :: 		
; _data start address is: 0 (R0)
0x0D74	0xB081    SUB	SP, SP, #4
0x0D76	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 54 :: 		
0x0D7A	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0D7C	0x4803    LDR	R0, [PC, #12]
0x0D7E	0xF7FFFBD7  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 55 :: 		
L_end_UART4_Write:
0x0D82	0xF8DDE000  LDR	LR, [SP, #0]
0x0D86	0xB001    ADD	SP, SP, #4
0x0D88	0x4770    BX	LR
0x0D8A	0xBF00    NOP
0x0D8C	0x4C004000  	UART4_SR+0
; end of _UART4_Write
_UART5_Write:
;__Lib_UART_123_45.c, 57 :: 		
; _data start address is: 0 (R0)
0x0EB4	0xB081    SUB	SP, SP, #4
0x0EB6	0xF8CDE000  STR	LR, [SP, #0]
; _data end address is: 0 (R0)
; _data start address is: 0 (R0)
;__Lib_UART_123_45.c, 58 :: 		
0x0EBA	0xB281    UXTH	R1, R0
; _data end address is: 0 (R0)
0x0EBC	0x4803    LDR	R0, [PC, #12]
0x0EBE	0xF7FFFB37  BL	__Lib_UART_123_45_UARTx_Write+0
;__Lib_UART_123_45.c, 59 :: 		
L_end_UART5_Write:
0x0EC2	0xF8DDE000  LDR	LR, [SP, #0]
0x0EC6	0xB001    ADD	SP, SP, #4
0x0EC8	0x4770    BX	LR
0x0ECA	0xBF00    NOP
0x0ECC	0x50004000  	UART5_SR+0
; end of _UART5_Write
_applicationInit:
;Click_NBIoT_STM.c, 76 :: 		void applicationInit()
0x1D18	0xB081    SUB	SP, SP, #4
0x1D1A	0xF8CDE000  STR	LR, [SP, #0]
;Click_NBIoT_STM.c, 79 :: 		nbiot_configTimer();
0x1D1E	0xF7FFFE43  BL	Click_NBIoT_STM_nbiot_configTimer+0
;Click_NBIoT_STM.c, 82 :: 		nbiot_uartDriverInit((T_NBIOT_P)&_MIKROBUS1_GPIO, (T_NBIOT_P)&_MIKROBUS1_UART);
0x1D22	0x492E    LDR	R1, [PC, #184]
0x1D24	0x482E    LDR	R0, [PC, #184]
0x1D26	0xF7FFFE6B  BL	_nbiot_uartDriverInit+0
;Click_NBIoT_STM.c, 83 :: 		nbiot_coreInit( nbiot_default_handler, 1500 );
0x1D2A	0x482E    LDR	R0, [PC, #184]
0x1D2C	0xF24051DC  MOVW	R1, #1500
0x1D30	0xF7FFFE74  BL	_nbiot_coreInit+0
;Click_NBIoT_STM.c, 86 :: 		nbiot_hfcEnable( 1 );
0x1D34	0x2001    MOVS	R0, #1
0x1D36	0xF7FFFDD5  BL	_nbiot_hfcEnable+0
;Click_NBIoT_STM.c, 87 :: 		nbiot_modulePower( 0 );
0x1D3A	0x2000    MOVS	R0, #0
0x1D3C	0xF7FFFDBA  BL	_nbiot_modulePower+0
;Click_NBIoT_STM.c, 90 :: 		mikrobus_logWrite("--- Generic AT command ---", _LOG_LINE);
0x1D40	0x4829    LDR	R0, [PC, #164]
0x1D42	0x2102    MOVS	R1, #2
0x1D44	0xF7FFFDF8  BL	_mikrobus_logWrite+0
;Click_NBIoT_STM.c, 92 :: 		nbiot_cmdSingle( &AT[0] );
0x1D48	0x4828    LDR	R0, [PC, #160]
0x1D4A	0xF7FFFEDD  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 94 :: 		nbiot_cmdSingle( &ATE[0] );
0x1D4E	0x4828    LDR	R0, [PC, #160]
0x1D50	0xF7FFFEDA  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 95 :: 		Delay_1sec();
0x1D54	0xF7FFFA20  BL	_Delay_1sec+0
;Click_NBIoT_STM.c, 97 :: 		nbiot_cmdSingle( &ATI[0] );
0x1D58	0x4826    LDR	R0, [PC, #152]
0x1D5A	0xF7FFFED5  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 98 :: 		Delay_1sec();
0x1D5E	0xF7FFFA1B  BL	_Delay_1sec+0
;Click_NBIoT_STM.c, 100 :: 		nbiot_cmdSingle( &AT_CFUN[0] );
0x1D62	0x4825    LDR	R0, [PC, #148]
0x1D64	0xF7FFFED0  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 101 :: 		Delay_1sec();
0x1D68	0xF7FFFA16  BL	_Delay_1sec+0
;Click_NBIoT_STM.c, 103 :: 		nbiot_cmdSingle( &AT_CIMI[0] );
0x1D6C	0x4823    LDR	R0, [PC, #140]
0x1D6E	0xF7FFFECB  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 104 :: 		Delay_1sec();
0x1D72	0xF7FFFA11  BL	_Delay_1sec+0
;Click_NBIoT_STM.c, 106 :: 		nbiot_cmdSingle( &AT_CGDCONT[0] );
0x1D76	0x4822    LDR	R0, [PC, #136]
0x1D78	0xF7FFFEC6  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 107 :: 		Delay_1sec();
0x1D7C	0xF7FFFA0C  BL	_Delay_1sec+0
;Click_NBIoT_STM.c, 108 :: 		mikrobus_logWrite("------------------------", _LOG_LINE);
0x1D80	0x4820    LDR	R0, [PC, #128]
0x1D82	0x2102    MOVS	R1, #2
0x1D84	0xF7FFFDD8  BL	_mikrobus_logWrite+0
;Click_NBIoT_STM.c, 109 :: 		mikrobus_logWrite("--- UDP server - AT command ---", _LOG_LINE);
0x1D88	0x481F    LDR	R0, [PC, #124]
0x1D8A	0x2102    MOVS	R1, #2
0x1D8C	0xF7FFFDD4  BL	_mikrobus_logWrite+0
;Click_NBIoT_STM.c, 111 :: 		nbiot_cmdSingle( &AT_NCONFIG[0] );
0x1D90	0x481E    LDR	R0, [PC, #120]
0x1D92	0xF7FFFEB9  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 112 :: 		nbiot_cmdSingle( &AT_NCONFIG1[0] );
0x1D96	0x481E    LDR	R0, [PC, #120]
0x1D98	0xF7FFFEB6  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 113 :: 		nbiot_cmdSingle( &AT_NCONFIG2[0] );
0x1D9C	0x481D    LDR	R0, [PC, #116]
0x1D9E	0xF7FFFEB3  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 115 :: 		nbiot_cmdSingle( &AT_NBAND[0] );
0x1DA2	0x481D    LDR	R0, [PC, #116]
0x1DA4	0xF7FFFEB0  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 117 :: 		nbiot_cmdSingle( &AT_CGDCONT1[0] );
0x1DA8	0x481C    LDR	R0, [PC, #112]
0x1DAA	0xF7FFFEAD  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 119 :: 		nbiot_cmdSingle( &AT_CEREG[0] );
0x1DAE	0x481C    LDR	R0, [PC, #112]
0x1DB0	0xF7FFFEAA  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 121 :: 		nbiot_cmdSingle( &AT_COPS[0] );
0x1DB4	0x481B    LDR	R0, [PC, #108]
0x1DB6	0xF7FFFEA7  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 123 :: 		nbiot_cmdSingle( &AT_NSOCR[0] );
0x1DBA	0x481B    LDR	R0, [PC, #108]
0x1DBC	0xF7FFFEA4  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 125 :: 		nbiot_cmdSingle( &AT_NSOST[0] );
0x1DC0	0x481A    LDR	R0, [PC, #104]
0x1DC2	0xF7FFFEA1  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 127 :: 		nbiot_cmdSingle( &AT_NSOCL[0] );
0x1DC6	0x481A    LDR	R0, [PC, #104]
0x1DC8	0xF7FFFE9E  BL	_nbiot_cmdSingle+0
;Click_NBIoT_STM.c, 128 :: 		mikrobus_logWrite("------------------------", _LOG_LINE);
0x1DCC	0x4819    LDR	R0, [PC, #100]
0x1DCE	0x2102    MOVS	R1, #2
0x1DD0	0xF7FFFDB2  BL	_mikrobus_logWrite+0
;Click_NBIoT_STM.c, 129 :: 		}
L_end_applicationInit:
0x1DD4	0xF8DDE000  LDR	LR, [SP, #0]
0x1DD8	0xB001    ADD	SP, SP, #4
0x1DDA	0x4770    BX	LR
0x1DDC	0x241C0000  	__MIKROBUS1_UART+0
0x1DE0	0x23880000  	__MIKROBUS1_GPIO+0
0x1DE4	0x11610000  	_nbiot_default_handler+0
0x1DE8	0x00142000  	?lstr2_Click_NBIoT_STM+0
0x1DEC	0x002F2000  	_AT+0
0x1DF0	0x00342000  	_ATE+0
0x1DF4	0x00392000  	_ATI+0
0x1DF8	0x003E2000  	_AT_CFUN+0
0x1DFC	0x00482000  	_AT_CIMI+0
0x1E00	0x00522000  	_AT_CGDCONT+0
0x1E04	0x00612000  	?lstr3_Click_NBIoT_STM+0
0x1E08	0x007A2000  	?lstr4_Click_NBIoT_STM+0
0x1E0C	0x009A2000  	_AT_NCONFIG+0
0x1E10	0x00C72000  	_AT_NCONFIG1+0
0x1E14	0x00EF2000  	_AT_NCONFIG2+0
0x1E18	0x01172000  	_AT_NBAND+0
0x1E1C	0x01262000  	_AT_CGDCONT1+0
0x1E20	0x01622000  	_AT_CEREG+0
0x1E24	0x01712000  	_AT_COPS+0
0x1E28	0x018F2000  	_AT_NSOCR+0
0x1E2C	0x01B72000  	_AT_NSOST+0
0x1E30	0x01DF2000  	_AT_NSOCL+0
0x1E34	0x01EE2000  	?lstr5_Click_NBIoT_STM+0
; end of _applicationInit
Click_NBIoT_STM_nbiot_configTimer:
;click_nbiot_timer.h, 14 :: 		static void nbiot_configTimer()
0x19A8	0xB081    SUB	SP, SP, #4
0x19AA	0xF8CDE000  STR	LR, [SP, #0]
;click_nbiot_timer.h, 16 :: 		RCC_APB1ENR.TIM2EN = 1;
0x19AE	0x2101    MOVS	R1, #1
0x19B0	0xB249    SXTB	R1, R1
0x19B2	0x480E    LDR	R0, [PC, #56]
0x19B4	0x6001    STR	R1, [R0, #0]
;click_nbiot_timer.h, 17 :: 		TIM2_CR1.CEN = 0;
0x19B6	0x2100    MOVS	R1, #0
0x19B8	0xB249    SXTB	R1, R1
0x19BA	0x480D    LDR	R0, [PC, #52]
0x19BC	0x6001    STR	R1, [R0, #0]
;click_nbiot_timer.h, 18 :: 		TIM2_PSC = 1;
0x19BE	0x2101    MOVS	R1, #1
0x19C0	0x480C    LDR	R0, [PC, #48]
0x19C2	0x6001    STR	R1, [R0, #0]
;click_nbiot_timer.h, 19 :: 		TIM2_ARR = 35999;
0x19C4	0xF648419F  MOVW	R1, #35999
0x19C8	0x480B    LDR	R0, [PC, #44]
0x19CA	0x6001    STR	R1, [R0, #0]
;click_nbiot_timer.h, 20 :: 		NVIC_IntEnable(IVT_INT_TIM2);
0x19CC	0xF240002C  MOVW	R0, #44
0x19D0	0xF7FFFBF6  BL	_NVIC_IntEnable+0
;click_nbiot_timer.h, 21 :: 		TIM2_DIER.UIE = 1;
0x19D4	0x2101    MOVS	R1, #1
0x19D6	0xB249    SXTB	R1, R1
0x19D8	0x4808    LDR	R0, [PC, #32]
0x19DA	0x6001    STR	R1, [R0, #0]
;click_nbiot_timer.h, 22 :: 		TIM2_CR1.CEN = 1;
0x19DC	0x4804    LDR	R0, [PC, #16]
0x19DE	0x6001    STR	R1, [R0, #0]
;click_nbiot_timer.h, 23 :: 		EnableInterrupts();
0x19E0	0xF7FFFBE6  BL	_EnableInterrupts+0
;click_nbiot_timer.h, 24 :: 		}
L_end_nbiot_configTimer:
0x19E4	0xF8DDE000  LDR	LR, [SP, #0]
0x19E8	0xB001    ADD	SP, SP, #4
0x19EA	0x4770    BX	LR
0x19EC	0x03804242  	RCC_APB1ENR+0
0x19F0	0x00004200  	TIM2_CR1+0
0x19F4	0x00284000  	TIM2_PSC+0
0x19F8	0x002C4000  	TIM2_ARR+0
0x19FC	0x01804200  	TIM2_DIER+0
; end of Click_NBIoT_STM_nbiot_configTimer
_NVIC_IntEnable:
;__Lib_System_105_107.c, 156 :: 		
; ivt start address is: 0 (R0)
0x11C0	0xB081    SUB	SP, SP, #4
; ivt end address is: 0 (R0)
; ivt start address is: 0 (R0)
;__Lib_System_105_107.c, 168 :: 		
0x11C2	0x2804    CMP	R0, #4
0x11C4	0xD106    BNE	L_NVIC_IntEnable6
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 173 :: 		
0x11C6	0x4919    LDR	R1, [PC, #100]
0x11C8	0x6809    LDR	R1, [R1, #0]
0x11CA	0xF4413280  ORR	R2, R1, #65536
0x11CE	0x4917    LDR	R1, [PC, #92]
0x11D0	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 174 :: 		
0x11D2	0xE028    B	L_NVIC_IntEnable7
L_NVIC_IntEnable6:
;__Lib_System_105_107.c, 175 :: 		
; ivt start address is: 0 (R0)
0x11D4	0x2805    CMP	R0, #5
0x11D6	0xD106    BNE	L_NVIC_IntEnable8
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 180 :: 		
0x11D8	0x4914    LDR	R1, [PC, #80]
0x11DA	0x6809    LDR	R1, [R1, #0]
0x11DC	0xF4413200  ORR	R2, R1, #131072
0x11E0	0x4912    LDR	R1, [PC, #72]
0x11E2	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 181 :: 		
0x11E4	0xE01F    B	L_NVIC_IntEnable9
L_NVIC_IntEnable8:
;__Lib_System_105_107.c, 182 :: 		
; ivt start address is: 0 (R0)
0x11E6	0x2806    CMP	R0, #6
0x11E8	0xD106    BNE	L_NVIC_IntEnable10
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 187 :: 		
0x11EA	0x4910    LDR	R1, [PC, #64]
0x11EC	0x6809    LDR	R1, [R1, #0]
0x11EE	0xF4412280  ORR	R2, R1, #262144
0x11F2	0x490E    LDR	R1, [PC, #56]
0x11F4	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 188 :: 		
0x11F6	0xE016    B	L_NVIC_IntEnable11
L_NVIC_IntEnable10:
;__Lib_System_105_107.c, 189 :: 		
; ivt start address is: 0 (R0)
0x11F8	0x280F    CMP	R0, #15
0x11FA	0xD106    BNE	L_NVIC_IntEnable12
; ivt end address is: 0 (R0)
;__Lib_System_105_107.c, 194 :: 		
0x11FC	0x490C    LDR	R1, [PC, #48]
0x11FE	0x6809    LDR	R1, [R1, #0]
0x1200	0xF0410202  ORR	R2, R1, #2
0x1204	0x490A    LDR	R1, [PC, #40]
0x1206	0x600A    STR	R2, [R1, #0]
;__Lib_System_105_107.c, 195 :: 		
0x1208	0xE00D    B	L_NVIC_IntEnable13
L_NVIC_IntEnable12:
;__Lib_System_105_107.c, 196 :: 		
; ivt start address is: 0 (R0)
0x120A	0x2810    CMP	R0, #16
0x120C	0xD30B    BCC	L_NVIC_IntEnable14
;__Lib_System_105_107.c, 201 :: 		
0x120E	0xF2A00410  SUBW	R4, R0, #16
; ivt end address is: 0 (R0)
0x1212	0x0961    LSRS	R1, R4, #5
0x1214	0x008A    LSLS	R2, R1, #2
0x1216	0x4907    LDR	R1, [PC, #28]
0x1218	0x188B    ADDS	R3, R1, R2
;__Lib_System_105_107.c, 202 :: 		
0x121A	0xF004021F  AND	R2, R4, #31
0x121E	0xF04F0101  MOV	R1, #1
0x1222	0x4091    LSLS	R1, R2
0x1224	0x6019    STR	R1, [R3, #0]
;__Lib_System_105_107.c, 203 :: 		
L_NVIC_IntEnable14:
L_NVIC_IntEnable13:
L_NVIC_IntEnable11:
L_NVIC_IntEnable9:
L_NVIC_IntEnable7:
;__Lib_System_105_107.c, 204 :: 		
L_end_NVIC_IntEnable:
0x1226	0xB001    ADD	SP, SP, #4
0x1228	0x4770    BX	LR
0x122A	0xBF00    NOP
0x122C	0xED24E000  	SCB_SHCRS+0
0x1230	0xE010E000  	STK_CTRL+0
0x1234	0xE100E000  	NVIC_ISER0+0
; end of _NVIC_IntEnable
_EnableInterrupts:
;__Lib_System_105_107.c, 107 :: 		
0x11B0	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 110 :: 		
0x11B2	0xF3EF8C10  MRS	R12, #16
0x11B6	0x4660    MOV	R0, R12
; result start address is: 0 (R0)
;__Lib_System_105_107.c, 111 :: 		
0x11B8	0xB662    CPSIE	i
;__Lib_System_105_107.c, 113 :: 		
; result end address is: 0 (R0)
;__Lib_System_105_107.c, 114 :: 		
L_end_EnableInterrupts:
0x11BA	0xB001    ADD	SP, SP, #4
0x11BC	0x4770    BX	LR
; end of _EnableInterrupts
_nbiot_uartDriverInit:
;__nbiot_driver.c, 513 :: 		void nbiot_uartDriverInit(T_NBIOT_P gpioObj, T_NBIOT_P uartObj)
; uartObj start address is: 4 (R1)
; gpioObj start address is: 0 (R0)
0x1A00	0xB081    SUB	SP, SP, #4
0x1A02	0xF8CDE000  STR	LR, [SP, #0]
0x1A06	0x4603    MOV	R3, R0
; uartObj end address is: 4 (R1)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 12 (R3)
; uartObj start address is: 4 (R1)
;__nbiot_driver.c, 515 :: 		hal_uartMap( (T_HAL_P)uartObj );
0x1A08	0x4608    MOV	R0, R1
; uartObj end address is: 4 (R1)
0x1A0A	0xF7FFFC25  BL	__nbiot_driver_hal_uartMap+0
;__nbiot_driver.c, 516 :: 		hal_gpioMap( (T_HAL_P)gpioObj );
0x1A0E	0x4618    MOV	R0, R3
; gpioObj end address is: 12 (R3)
0x1A10	0xF7FFFC50  BL	__nbiot_driver_hal_gpioMap+0
;__nbiot_driver.c, 517 :: 		}
L_end_nbiot_uartDriverInit:
0x1A14	0xF8DDE000  LDR	LR, [SP, #0]
0x1A18	0xB001    ADD	SP, SP, #4
0x1A1A	0x4770    BX	LR
; end of _nbiot_uartDriverInit
__nbiot_driver_hal_uartMap:
;__hal_stm32.c, 133 :: 		static void hal_uartMap(T_HAL_P uartObj)
; uartObj start address is: 0 (R0)
; uartObj end address is: 0 (R0)
; uartObj start address is: 0 (R0)
;__hal_stm32.c, 137 :: 		fp_uartWrite = tmp->uartWrite;
0x1258	0x6802    LDR	R2, [R0, #0]
0x125A	0x4906    LDR	R1, [PC, #24]
0x125C	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 138 :: 		fp_uartRead  = tmp->uartRead;
0x125E	0x1D01    ADDS	R1, R0, #4
0x1260	0x680A    LDR	R2, [R1, #0]
0x1262	0x4905    LDR	R1, [PC, #20]
0x1264	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 139 :: 		fp_uartReady = tmp->uartReady;
0x1266	0xF2000108  ADDW	R1, R0, #8
; uartObj end address is: 0 (R0)
0x126A	0x680A    LDR	R2, [R1, #0]
0x126C	0x4903    LDR	R1, [PC, #12]
0x126E	0x600A    STR	R2, [R1, #0]
;__hal_stm32.c, 140 :: 		}
L_end_hal_uartMap:
0x1270	0x4770    BX	LR
0x1272	0xBF00    NOP
0x1274	0x02482000  	__nbiot_driver_fp_uartWrite+0
0x1278	0x04582000  	__nbiot_driver_fp_uartRead+0
0x127C	0x045C2000  	__nbiot_driver_fp_uartReady+0
; end of __nbiot_driver_hal_uartMap
__nbiot_driver_hal_gpioMap:
;__nbiot_hal.c, 215 :: 		static void hal_gpioMap(T_HAL_P gpioObj)
; gpioObj start address is: 0 (R0)
; gpioObj end address is: 0 (R0)
; gpioObj start address is: 0 (R0)
;__nbiot_hal.c, 256 :: 		hal_gpio_anSet = tmp->gpioSet[ __AN_PIN_OUTPUT__ ];
0x12B4	0x6802    LDR	R2, [R0, #0]
0x12B6	0x4903    LDR	R1, [PC, #12]
0x12B8	0x600A    STR	R2, [R1, #0]
;__nbiot_hal.c, 262 :: 		hal_gpio_rstSet = tmp->gpioSet[ __RST_PIN_OUTPUT__ ];
0x12BA	0x1D01    ADDS	R1, R0, #4
; gpioObj end address is: 0 (R0)
0x12BC	0x680A    LDR	R2, [R1, #0]
0x12BE	0x4902    LDR	R1, [PC, #8]
0x12C0	0x600A    STR	R2, [R1, #0]
;__nbiot_hal.c, 291 :: 		}
L_end_hal_gpioMap:
0x12C2	0x4770    BX	LR
0x12C4	0x04542000  	__nbiot_driver_hal_gpio_anSet+0
0x12C8	0x04502000  	__nbiot_driver_hal_gpio_rstSet+0
; end of __nbiot_driver_hal_gpioMap
_nbiot_coreInit:
;__nbiot_driver.c, 522 :: 		void nbiot_coreInit(T_nbiot_handler defaultHdl, uint32_t defaultWdog)
; defaultWdog start address is: 4 (R1)
; defaultHdl start address is: 0 (R0)
0x1A1C	0xB081    SUB	SP, SP, #4
0x1A1E	0xF8CDE000  STR	LR, [SP, #0]
; defaultWdog end address is: 4 (R1)
; defaultHdl end address is: 0 (R0)
; defaultHdl start address is: 0 (R0)
; defaultWdog start address is: 4 (R1)
;__nbiot_driver.c, 524 :: 		f_sequence_active          = false;
0x1A22	0x2300    MOVS	R3, #0
0x1A24	0x4A27    LDR	R2, [PC, #156]
0x1A26	0x7013    STRB	R3, [R2, #0]
;__nbiot_driver.c, 525 :: 		f_buffer_warning           = false;
0x1A28	0x2300    MOVS	R3, #0
0x1A2A	0x4A27    LDR	R2, [PC, #156]
0x1A2C	0x7013    STRB	R3, [R2, #0]
;__nbiot_driver.c, 526 :: 		f_response_ready           = false;
0x1A2E	0x2300    MOVS	R3, #0
0x1A30	0x4A26    LDR	R2, [PC, #152]
0x1A32	0x7013    STRB	R3, [R2, #0]
;__nbiot_driver.c, 527 :: 		f_wdog_timeout             = false;
0x1A34	0x2300    MOVS	R3, #0
0x1A36	0x4A26    LDR	R2, [PC, #152]
0x1A38	0x7013    STRB	R3, [R2, #0]
;__nbiot_driver.c, 530 :: 		hdlBuff.storage[0].handler = defaultHdl;
0x1A3A	0x4A26    LDR	R2, [PC, #152]
0x1A3C	0x6010    STR	R0, [R2, #0]
; defaultHdl end address is: 0 (R0)
;__nbiot_driver.c, 531 :: 		hdlBuff.storage[0].timeout = defaultWdog;
0x1A3E	0x4A26    LDR	R2, [PC, #152]
0x1A40	0x6011    STR	R1, [R2, #0]
; defaultWdog end address is: 4 (R1)
;__nbiot_driver.c, 532 :: 		hdlBuff.storage[0].hash    = generateHash("");
0x1A42	0x4A26    LDR	R2, [PC, #152]
0x1A44	0x4610    MOV	R0, R2
0x1A46	0xF7FFFC1D  BL	__nbiot_driver_generateHash+0
0x1A4A	0x4A25    LDR	R2, [PC, #148]
0x1A4C	0x6010    STR	R0, [R2, #0]
;__nbiot_driver.c, 533 :: 		hdlBuff.storage[0].len     = 0;
0x1A4E	0x2300    MOVS	R3, #0
0x1A50	0x4A24    LDR	R2, [PC, #144]
0x1A52	0x8013    STRH	R3, [R2, #0]
;__nbiot_driver.c, 534 :: 		hdlBuff.idx                = 1;
0x1A54	0x2301    MOVS	R3, #1
0x1A56	0x4A24    LDR	R2, [PC, #144]
0x1A58	0x8013    STRH	R3, [R2, #0]
;__nbiot_driver.c, 537 :: 		CORE_CLEAN_RX();
0x1A5A	0x2300    MOVS	R3, #0
0x1A5C	0x4A23    LDR	R2, [PC, #140]
0x1A5E	0x8013    STRH	R3, [R2, #0]
0x1A60	0x2300    MOVS	R3, #0
0x1A62	0x4A23    LDR	R2, [PC, #140]
0x1A64	0x7013    STRB	R3, [R2, #0]
;__nbiot_driver.c, 538 :: 		CORE_BLOCK();
0x1A66	0x2300    MOVS	R3, #0
0x1A68	0x4A19    LDR	R2, [PC, #100]
0x1A6A	0x7013    STRB	R3, [R2, #0]
0x1A6C	0x2300    MOVS	R3, #0
0x1A6E	0x4A17    LDR	R2, [PC, #92]
0x1A70	0x7013    STRB	R3, [R2, #0]
0x1A72	0x2301    MOVS	R3, #1
0x1A74	0x4A13    LDR	R2, [PC, #76]
0x1A76	0x7013    STRB	R3, [R2, #0]
;__nbiot_driver.c, 539 :: 		CORE_UNBLOCK();
0x1A78	0x2300    MOVS	R3, #0
0x1A7A	0x4A15    LDR	R2, [PC, #84]
0x1A7C	0x7013    STRB	R3, [R2, #0]
0x1A7E	0x2300    MOVS	R3, #0
0x1A80	0x4A12    LDR	R2, [PC, #72]
0x1A82	0x7013    STRB	R3, [R2, #0]
0x1A84	0x2300    MOVS	R3, #0
0x1A86	0x4A0F    LDR	R2, [PC, #60]
0x1A88	0x7013    STRB	R3, [R2, #0]
;__nbiot_driver.c, 540 :: 		WATCHDOG_START();
0x1A8A	0x2300    MOVS	R3, #0
0x1A8C	0x4A19    LDR	R2, [PC, #100]
0x1A8E	0x6013    STR	R3, [R2, #0]
0x1A90	0x2301    MOVS	R3, #1
0x1A92	0x4A19    LDR	R2, [PC, #100]
0x1A94	0x7013    STRB	R3, [R2, #0]
;__nbiot_driver.c, 541 :: 		WATCHDOG_STOP();
0x1A96	0x2300    MOVS	R3, #0
0x1A98	0x4A17    LDR	R2, [PC, #92]
0x1A9A	0x7013    STRB	R3, [R2, #0]
;__nbiot_driver.c, 542 :: 		TIMER_START();
0x1A9C	0x2300    MOVS	R3, #0
0x1A9E	0x4A17    LDR	R2, [PC, #92]
0x1AA0	0x6013    STR	R3, [R2, #0]
0x1AA2	0x2301    MOVS	R3, #1
0x1AA4	0x4A16    LDR	R2, [PC, #88]
0x1AA6	0x7013    STRB	R3, [R2, #0]
;__nbiot_driver.c, 543 :: 		TIMER_STOP();
0x1AA8	0x2300    MOVS	R3, #0
0x1AAA	0x4A15    LDR	R2, [PC, #84]
0x1AAC	0x7013    STRB	R3, [R2, #0]
;__nbiot_driver.c, 544 :: 		CORE_SET_FREE();
0x1AAE	0x4A15    LDR	R2, [PC, #84]
0x1AB0	0x7812    LDRB	R2, [R2, #0]
0x1AB2	0xB112    CBZ	R2, L_nbiot_coreInit44
0x1AB4	0x2001    MOVS	R0, #1
0x1AB6	0xF7FFFBE3  BL	__nbiot_driver_DTE_setState+0
L_nbiot_coreInit44:
;__nbiot_driver.c, 545 :: 		}
L_end_nbiot_coreInit:
0x1ABA	0xF8DDE000  LDR	LR, [SP, #0]
0x1ABE	0xB001    ADD	SP, SP, #4
0x1AC0	0x4770    BX	LR
0x1AC2	0xBF00    NOP
0x1AC4	0x04602000  	__nbiot_driver_f_sequence_active+0
0x1AC8	0x04612000  	__nbiot_driver_f_buffer_warning+0
0x1ACC	0x04622000  	__nbiot_driver_f_response_ready+0
0x1AD0	0x04632000  	__nbiot_driver_f_wdog_timeout+0
0x1AD4	0x025C2000  	__nbiot_driver_hdlBuff+16
0x1AD8	0x02582000  	__nbiot_driver_hdlBuff+12
0x1ADC	0x022E2000  	?lstr1___nbiot_driver+0
0x1AE0	0x02542000  	__nbiot_driver_hdlBuff+8
0x1AE4	0x02502000  	__nbiot_driver_hdlBuff+4
0x1AE8	0x024C2000  	__nbiot_driver_hdlBuff+0
0x1AEC	0x04642000  	__nbiot_driver_rxBuff+0
0x1AF0	0x04662000  	__nbiot_driver_rxBuff+2
0x1AF4	0x05682000  	__nbiot_driver_c_watchdog_timer+0
0x1AF8	0x05662000  	__nbiot_driver_f_watchdog_active+0
0x1AFC	0x056C2000  	__nbiot_driver_c_timer+0
0x1B00	0x05672000  	__nbiot_driver_f_timer_active+0
0x1B04	0x022F2000  	__nbiot_driver_f_hfc_active+0
; end of _nbiot_coreInit
__nbiot_driver_generateHash:
;__nbiot_driver.c, 406 :: 		static uint32_t generateHash( char *pCmd )
; pCmd start address is: 0 (R0)
; pCmd end address is: 0 (R0)
; pCmd start address is: 0 (R0)
;__nbiot_driver.c, 408 :: 		uint8_t  cnt  = 0;
; cnt start address is: 4 (R1)
0x1284	0x2100    MOVS	R1, #0
;__nbiot_driver.c, 409 :: 		uint16_t ch   = 0;
;__nbiot_driver.c, 410 :: 		uint32_t hash = 5;
; hash start address is: 16 (R4)
0x1286	0xF04F0405  MOV	R4, #5
; pCmd end address is: 0 (R0)
; cnt end address is: 4 (R1)
; hash end address is: 16 (R4)
0x128A	0x4603    MOV	R3, R0
0x128C	0xB2C8    UXTB	R0, R1
;__nbiot_driver.c, 412 :: 		while ( ch = *pCmd++ )
L___nbiot_driver_generateHash25:
; hash start address is: 16 (R4)
; pCmd start address is: 12 (R3)
; cnt start address is: 0 (R0)
; pCmd start address is: 12 (R3)
0x128E	0x461A    MOV	R2, R3
0x1290	0x1C59    ADDS	R1, R3, #1
0x1292	0x460B    MOV	R3, R1
; pCmd end address is: 12 (R3)
0x1294	0x7811    LDRB	R1, [R2, #0]
; ch start address is: 8 (R2)
0x1296	0xB2CA    UXTB	R2, R1
0x1298	0xB14A    CBZ	R2, L___nbiot_driver_generateHash26
; pCmd end address is: 12 (R3)
;__nbiot_driver.c, 414 :: 		hash += (ch << (cnt % 8));
; pCmd start address is: 12 (R3)
0x129A	0xF0000107  AND	R1, R0, #7
0x129E	0xB2C9    UXTB	R1, R1
0x12A0	0xFA02F101  LSL	R1, R2, R1
0x12A4	0xB289    UXTH	R1, R1
0x12A6	0x1864    ADDS	R4, R4, R1
;__nbiot_driver.c, 415 :: 		cnt++;
0x12A8	0x1C40    ADDS	R0, R0, #1
0x12AA	0xB2C0    UXTB	R0, R0
;__nbiot_driver.c, 416 :: 		}
; pCmd end address is: 12 (R3)
; ch end address is: 8 (R2)
; cnt end address is: 0 (R0)
0x12AC	0xE7EF    B	L___nbiot_driver_generateHash25
L___nbiot_driver_generateHash26:
;__nbiot_driver.c, 417 :: 		return hash;
0x12AE	0x4620    MOV	R0, R4
; hash end address is: 16 (R4)
;__nbiot_driver.c, 418 :: 		}
L_end_generateHash:
0x12B0	0x4770    BX	LR
; end of __nbiot_driver_generateHash
__nbiot_driver_DTE_setState:
;__nbiot_driver.c, 152 :: 		static void DTE_setState(bool state)
;__nbiot_driver.c, 155 :: 		}
L_end_DTE_setState:
0x1280	0x4770    BX	LR
; end of __nbiot_driver_DTE_setState
_nbiot_hfcEnable:
;__nbiot_driver.c, 547 :: 		void nbiot_hfcEnable( bool hfcState )
; hfcState start address is: 0 (R0)
; hfcState end address is: 0 (R0)
; hfcState start address is: 0 (R0)
;__nbiot_driver.c, 549 :: 		f_hfc_active = hfcState;
0x18E4	0x4901    LDR	R1, [PC, #4]
0x18E6	0x7008    STRB	R0, [R1, #0]
; hfcState end address is: 0 (R0)
;__nbiot_driver.c, 550 :: 		}
L_end_nbiot_hfcEnable:
0x18E8	0x4770    BX	LR
0x18EA	0xBF00    NOP
0x18EC	0x022F2000  	__nbiot_driver_f_hfc_active+0
; end of _nbiot_hfcEnable
_nbiot_modulePower:
;__nbiot_driver.c, 163 :: 		void nbiot_modulePower( bool powerState )
; powerState start address is: 0 (R0)
0x18B4	0xB081    SUB	SP, SP, #4
0x18B6	0xF8CDE000  STR	LR, [SP, #0]
; powerState end address is: 0 (R0)
; powerState start address is: 0 (R0)
;__nbiot_driver.c, 165 :: 		if (0 != powerState)
0x18BA	0xB168    CBZ	R0, L_nbiot_modulePower0
; powerState end address is: 0 (R0)
;__nbiot_driver.c, 167 :: 		hal_gpio_rstSet(1);
0x18BC	0x2001    MOVS	R0, #1
0x18BE	0x4C08    LDR	R4, [PC, #32]
0x18C0	0x6824    LDR	R4, [R4, #0]
0x18C2	0x47A0    BLX	R4
;__nbiot_driver.c, 168 :: 		Delay_100ms();
0x18C4	0xF7FFFC5C  BL	_Delay_100ms+0
;__nbiot_driver.c, 169 :: 		Delay_100ms();
0x18C8	0xF7FFFC5A  BL	_Delay_100ms+0
;__nbiot_driver.c, 170 :: 		hal_gpio_rstSet(0);
0x18CC	0x2000    MOVS	R0, #0
0x18CE	0x4C04    LDR	R4, [PC, #16]
0x18D0	0x6824    LDR	R4, [R4, #0]
0x18D2	0x47A0    BLX	R4
;__nbiot_driver.c, 171 :: 		Delay_1sec();
0x18D4	0xF7FFFC60  BL	_Delay_1sec+0
;__nbiot_driver.c, 172 :: 		}
L_nbiot_modulePower0:
;__nbiot_driver.c, 173 :: 		}
L_end_nbiot_modulePower:
0x18D8	0xF8DDE000  LDR	LR, [SP, #0]
0x18DC	0xB001    ADD	SP, SP, #4
0x18DE	0x4770    BX	LR
0x18E0	0x04502000  	__nbiot_driver_hal_gpio_rstSet+0
; end of _nbiot_modulePower
easymx_v7_STM32F107VC__setAN_1:
;__em_f107vc_gpio.c, 43 :: 		static void _setAN_1  (uint8_t value) 	{ GPIOA_ODR.B4  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x178C	0x4901    LDR	R1, [PC, #4]
0x178E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_1:
0x1790	0x4770    BX	LR
0x1792	0xBF00    NOP
0x1794	0x01904221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_1
easymx_v7_STM32F107VC__setRST_1:
;__em_f107vc_gpio.c, 44 :: 		static void _setRST_1 (uint8_t value) 	{ GPIOC_ODR.B2  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x181C	0x4901    LDR	R1, [PC, #4]
0x181E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_1:
0x1820	0x4770    BX	LR
0x1822	0xBF00    NOP
0x1824	0x01884222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_1
easymx_v7_STM32F107VC__setCS_1:
;__em_f107vc_gpio.c, 45 :: 		static void _setCS_1  (uint8_t value) 	{ GPIOD_ODR.B13 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1828	0x4901    LDR	R1, [PC, #4]
0x182A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_1:
0x182C	0x4770    BX	LR
0x182E	0xBF00    NOP
0x1830	0x81B44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_1
easymx_v7_STM32F107VC__setSCK_1:
;__em_f107vc_gpio.c, 46 :: 		static void _setSCK_1 (uint8_t value) 	{ GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1834	0x4901    LDR	R1, [PC, #4]
0x1836	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_1:
0x1838	0x4770    BX	LR
0x183A	0xBF00    NOP
0x183C	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_1
easymx_v7_STM32F107VC__setMISO_1:
;__em_f107vc_gpio.c, 47 :: 		static void _setMISO_1(uint8_t value) 	{ GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1810	0x4901    LDR	R1, [PC, #4]
0x1812	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_1:
0x1814	0x4770    BX	LR
0x1816	0xBF00    NOP
0x1818	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_1
easymx_v7_STM32F107VC__setMOSI_1:
;__em_f107vc_gpio.c, 48 :: 		static void _setMOSI_1(uint8_t value) 	{ GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1804	0x4901    LDR	R1, [PC, #4]
0x1806	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_1:
0x1808	0x4770    BX	LR
0x180A	0xBF00    NOP
0x180C	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_1
easymx_v7_STM32F107VC__setPWM_1:
;__em_f107vc_gpio.c, 49 :: 		static void _setPWM_1 (uint8_t value) 	{ GPIOA_ODR.B0  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x17B0	0x4901    LDR	R1, [PC, #4]
0x17B2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_1:
0x17B4	0x4770    BX	LR
0x17B6	0xBF00    NOP
0x17B8	0x01804221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_1
easymx_v7_STM32F107VC__setINT_1:
;__em_f107vc_gpio.c, 50 :: 		static void _setINT_1 (uint8_t value) 	{ GPIOD_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x17BC	0x4901    LDR	R1, [PC, #4]
0x17BE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_1:
0x17C0	0x4770    BX	LR
0x17C2	0xBF00    NOP
0x17C4	0x81A84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_1
easymx_v7_STM32F107VC__setRX_1:
;__em_f107vc_gpio.c, 51 :: 		static void _setRX_1  (uint8_t value) 	{ GPIOD_ODR.B9  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1798	0x4901    LDR	R1, [PC, #4]
0x179A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_1:
0x179C	0x4770    BX	LR
0x179E	0xBF00    NOP
0x17A0	0x81A44222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_1
easymx_v7_STM32F107VC__setTX_1:
;__em_f107vc_gpio.c, 52 :: 		static void _setTX_1  (uint8_t value) 	{ GPIOD_ODR.B8  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x17A4	0x4901    LDR	R1, [PC, #4]
0x17A6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_1:
0x17A8	0x4770    BX	LR
0x17AA	0xBF00    NOP
0x17AC	0x81A04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_1
easymx_v7_STM32F107VC__setSCL_1:
;__em_f107vc_gpio.c, 53 :: 		static void _setSCL_1 (uint8_t value) 	{ GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x17C8	0x4901    LDR	R1, [PC, #4]
0x17CA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_1:
0x17CC	0x4770    BX	LR
0x17CE	0xBF00    NOP
0x17D0	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_1
easymx_v7_STM32F107VC__setSDA_1:
;__em_f107vc_gpio.c, 54 :: 		static void _setSDA_1 (uint8_t value) 	{ GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x17EC	0x4901    LDR	R1, [PC, #4]
0x17EE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_1:
0x17F0	0x4770    BX	LR
0x17F2	0xBF00    NOP
0x17F4	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_1
easymx_v7_STM32F107VC__setAN_2:
;__em_f107vc_gpio.c, 68 :: 		static void _setAN_2  (uint8_t value)   { GPIOA_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x17F8	0x4901    LDR	R1, [PC, #4]
0x17FA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setAN_2:
0x17FC	0x4770    BX	LR
0x17FE	0xBF00    NOP
0x1800	0x01944221  	GPIOA_ODR+0
; end of easymx_v7_STM32F107VC__setAN_2
easymx_v7_STM32F107VC__setRST_2:
;__em_f107vc_gpio.c, 69 :: 		static void _setRST_2 (uint8_t value)   { GPIOC_ODR.B3  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x17D4	0x4901    LDR	R1, [PC, #4]
0x17D6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRST_2:
0x17D8	0x4770    BX	LR
0x17DA	0xBF00    NOP
0x17DC	0x018C4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setRST_2
easymx_v7_STM32F107VC__setCS_2:
;__em_f107vc_gpio.c, 70 :: 		static void _setCS_2  (uint8_t value)   { GPIOD_ODR.B14 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x17E0	0x4901    LDR	R1, [PC, #4]
0x17E2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setCS_2:
0x17E4	0x4770    BX	LR
0x17E6	0xBF00    NOP
0x17E8	0x81B84222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setCS_2
easymx_v7_STM32F107VC__setSCK_2:
;__em_f107vc_gpio.c, 71 :: 		static void _setSCK_2 (uint8_t value)   { GPIOC_ODR.B10 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F00	0x4901    LDR	R1, [PC, #4]
0x0F02	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCK_2:
0x0F04	0x4770    BX	LR
0x0F06	0xBF00    NOP
0x0F08	0x01A84222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setSCK_2
easymx_v7_STM32F107VC__setMISO_2:
;__em_f107vc_gpio.c, 72 :: 		static void _setMISO_2(uint8_t value)   { GPIOC_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F0C	0x4901    LDR	R1, [PC, #4]
0x0F0E	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMISO_2:
0x0F10	0x4770    BX	LR
0x0F12	0xBF00    NOP
0x0F14	0x01AC4222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMISO_2
easymx_v7_STM32F107VC__setMOSI_2:
;__em_f107vc_gpio.c, 73 :: 		static void _setMOSI_2(uint8_t value)   { GPIOC_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F18	0x4901    LDR	R1, [PC, #4]
0x0F1A	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setMOSI_2:
0x0F1C	0x4770    BX	LR
0x0F1E	0xBF00    NOP
0x0F20	0x01B04222  	GPIOC_ODR+0
; end of easymx_v7_STM32F107VC__setMOSI_2
easymx_v7_STM32F107VC__setPWM_2:
;__em_f107vc_gpio.c, 74 :: 		static void _setPWM_2 (uint8_t value)   { GPIOD_ODR.B12 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0EF4	0x4901    LDR	R1, [PC, #4]
0x0EF6	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setPWM_2:
0x0EF8	0x4770    BX	LR
0x0EFA	0xBF00    NOP
0x0EFC	0x81B04222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setPWM_2
easymx_v7_STM32F107VC__setINT_2:
;__em_f107vc_gpio.c, 75 :: 		static void _setINT_2 (uint8_t value)   { GPIOD_ODR.B11 = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0ED0	0x4901    LDR	R1, [PC, #4]
0x0ED2	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setINT_2:
0x0ED4	0x4770    BX	LR
0x0ED6	0xBF00    NOP
0x0ED8	0x81AC4222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setINT_2
easymx_v7_STM32F107VC__setRX_2:
;__em_f107vc_gpio.c, 76 :: 		static void _setRX_2  (uint8_t value)   { GPIOD_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0EDC	0x4901    LDR	R1, [PC, #4]
0x0EDE	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setRX_2:
0x0EE0	0x4770    BX	LR
0x0EE2	0xBF00    NOP
0x0EE4	0x81984222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setRX_2
easymx_v7_STM32F107VC__setTX_2:
;__em_f107vc_gpio.c, 77 :: 		static void _setTX_2  (uint8_t value)   { GPIOD_ODR.B5  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0EE8	0x4901    LDR	R1, [PC, #4]
0x0EEA	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setTX_2:
0x0EEC	0x4770    BX	LR
0x0EEE	0xBF00    NOP
0x0EF0	0x81944222  	GPIOD_ODR+0
; end of easymx_v7_STM32F107VC__setTX_2
easymx_v7_STM32F107VC__setSCL_2:
;__em_f107vc_gpio.c, 78 :: 		static void _setSCL_2 (uint8_t value)   { GPIOB_ODR.B6  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x0F24	0x4901    LDR	R1, [PC, #4]
0x0F26	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSCL_2:
0x0F28	0x4770    BX	LR
0x0F2A	0xBF00    NOP
0x0F2C	0x81984221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSCL_2
easymx_v7_STM32F107VC__setSDA_2:
;__em_f107vc_gpio.c, 79 :: 		static void _setSDA_2 (uint8_t value)   { GPIOB_ODR.B7  = value; }
; value start address is: 0 (R0)
; value end address is: 0 (R0)
; value start address is: 0 (R0)
0x1174	0x4901    LDR	R1, [PC, #4]
0x1176	0x6008    STR	R0, [R1, #0]
; value end address is: 0 (R0)
L_end__setSDA_2:
0x1178	0x4770    BX	LR
0x117A	0xBF00    NOP
0x117C	0x819C4221  	GPIOB_ODR+0
; end of easymx_v7_STM32F107VC__setSDA_2
_Delay_100ms:
;__Lib_Delays.c, 53 :: 		void Delay_100ms() {
;__Lib_Delays.c, 54 :: 		Delay_ms(100);
0x1180	0xF644777F  MOVW	R7, #20351
0x1184	0xF2C00712  MOVT	R7, #18
L_Delay_100ms20:
0x1188	0x1E7F    SUBS	R7, R7, #1
0x118A	0xD1FD    BNE	L_Delay_100ms20
0x118C	0xBF00    NOP
0x118E	0xBF00    NOP
0x1190	0xBF00    NOP
0x1192	0xBF00    NOP
0x1194	0xBF00    NOP
;__Lib_Delays.c, 55 :: 		}
L_end_Delay_100ms:
0x1196	0x4770    BX	LR
; end of _Delay_100ms
_Delay_1sec:
;__Lib_Delays.c, 62 :: 		void Delay_1sec() {
;__Lib_Delays.c, 63 :: 		Delay_ms(1000);
0x1198	0xF64127FF  MOVW	R7, #6911
0x119C	0xF2C007B7  MOVT	R7, #183
L_Delay_1sec24:
0x11A0	0x1E7F    SUBS	R7, R7, #1
0x11A2	0xD1FD    BNE	L_Delay_1sec24
0x11A4	0xBF00    NOP
0x11A6	0xBF00    NOP
0x11A8	0xBF00    NOP
0x11AA	0xBF00    NOP
0x11AC	0xBF00    NOP
;__Lib_Delays.c, 64 :: 		}
L_end_Delay_1sec:
0x11AE	0x4770    BX	LR
; end of _Delay_1sec
_nbiot_cmdSingle:
;__nbiot_driver.c, 634 :: 		void nbiot_cmdSingle( uint8_t *pCmd )
0x1B08	0xB082    SUB	SP, SP, #8
0x1B0A	0xF8CDE000  STR	LR, [SP, #0]
0x1B0E	0x9001    STR	R0, [SP, #4]
;__nbiot_driver.c, 636 :: 		_strcpy( txBuff, pCmd );
0x1B10	0x9901    LDR	R1, [SP, #4]
0x1B12	0x481A    LDR	R0, [PC, #104]
0x1B14	0xF7FFFA0C  BL	__nbiot_driver__strcpy+0
;__nbiot_driver.c, 638 :: 		CORE_SEQUENCE();
L_nbiot_cmdSingle58:
0x1B18	0x4919    LDR	R1, [PC, #100]
0x1B1A	0x7809    LDRB	R1, [R1, #0]
0x1B1C	0xB111    CBZ	R1, L_nbiot_cmdSingle59
0x1B1E	0xF7FFFA1F  BL	_nbiot_process+0
0x1B22	0xE7F9    B	L_nbiot_cmdSingle58
L_nbiot_cmdSingle59:
;__nbiot_driver.c, 639 :: 		createEvent(pCmd, &currentEv);
0x1B24	0x4917    LDR	R1, [PC, #92]
0x1B26	0x9801    LDR	R0, [SP, #4]
0x1B28	0xF7FFF946  BL	__nbiot_driver_createEvent+0
;__nbiot_driver.c, 641 :: 		transmitCommand(pCmd, TERMINATION_CHAR);
0x1B2C	0x210D    MOVS	R1, #13
0x1B2E	0x9801    LDR	R0, [SP, #4]
0x1B30	0xF7FFFAE0  BL	__nbiot_driver_transmitCommand+0
;__nbiot_driver.c, 642 :: 		EXEC_CALLBACK();
0x1B34	0x2100    MOVS	R1, #0
0x1B36	0x2900    CMP	R1, __NBIOT_CALLBACK_ENABLE
0x1B38	0xD007    BEQ	L_nbiot_cmdSingle60
0x1B3A	0x2204    MOVS	R2, #4
0x1B3C	0x4912    LDR	R1, [PC, #72]
0x1B3E	0x700A    STRB	R2, [R1, #0]
0x1B40	0x4912    LDR	R1, [PC, #72]
0x1B42	0x480E    LDR	R0, [PC, #56]
0x1B44	0x4C0F    LDR	R4, [PC, #60]
0x1B46	0x6824    LDR	R4, [R4, #0]
0x1B48	0x47A0    BLX	R4
L_nbiot_cmdSingle60:
;__nbiot_driver.c, 644 :: 		CORE_BLOCK();
0x1B4A	0x2200    MOVS	R2, #0
0x1B4C	0x4910    LDR	R1, [PC, #64]
0x1B4E	0x700A    STRB	R2, [R1, #0]
0x1B50	0x2200    MOVS	R2, #0
0x1B52	0x4910    LDR	R1, [PC, #64]
0x1B54	0x700A    STRB	R2, [R1, #0]
0x1B56	0x2201    MOVS	R2, #1
0x1B58	0x4909    LDR	R1, [PC, #36]
0x1B5A	0x700A    STRB	R2, [R1, #0]
;__nbiot_driver.c, 645 :: 		WATCHDOG_START();
0x1B5C	0x2200    MOVS	R2, #0
0x1B5E	0x490E    LDR	R1, [PC, #56]
0x1B60	0x600A    STR	R2, [R1, #0]
0x1B62	0x2201    MOVS	R2, #1
0x1B64	0x490D    LDR	R1, [PC, #52]
0x1B66	0x700A    STRB	R2, [R1, #0]
;__nbiot_driver.c, 646 :: 		CORE_SEQUENCE();
L_nbiot_cmdSingle61:
0x1B68	0x4905    LDR	R1, [PC, #20]
0x1B6A	0x7809    LDRB	R1, [R1, #0]
0x1B6C	0xB111    CBZ	R1, L_nbiot_cmdSingle62
0x1B6E	0xF7FFF9F7  BL	_nbiot_process+0
0x1B72	0xE7F9    B	L_nbiot_cmdSingle61
L_nbiot_cmdSingle62:
;__nbiot_driver.c, 647 :: 		}
L_end_nbiot_cmdSingle:
0x1B74	0xF8DDE000  LDR	LR, [SP, #0]
0x1B78	0xB002    ADD	SP, SP, #8
0x1B7A	0x4770    BX	LR
0x1B7C	0x057C2000  	__nbiot_driver_txBuff+0
0x1B80	0x04602000  	__nbiot_driver_f_sequence_active+0
0x1B84	0x05702000  	__nbiot_driver_currentEv+0
0x1B88	0x057A2000  	__nbiot_driver_currentEv+10
0x1B8C	0x05782000  	__nbiot_driver_currentEv+8
0x1B90	0x04632000  	__nbiot_driver_f_wdog_timeout+0
0x1B94	0x04622000  	__nbiot_driver_f_response_ready+0
0x1B98	0x05682000  	__nbiot_driver_c_watchdog_timer+0
0x1B9C	0x05662000  	__nbiot_driver_f_watchdog_active+0
; end of _nbiot_cmdSingle
_nbiot_default_handler:
;Click_NBIoT_STM.c, 62 :: 		void nbiot_default_handler( uint8_t *rsp, uint8_t *evArgs )
; rsp start address is: 0 (R0)
0x1160	0xB081    SUB	SP, SP, #4
0x1162	0xF8CDE000  STR	LR, [SP, #0]
; rsp end address is: 0 (R0)
; rsp start address is: 0 (R0)
;Click_NBIoT_STM.c, 64 :: 		mikrobus_logWrite( rsp, _LOG_TEXT );
0x1166	0x2101    MOVS	R1, #1
; rsp end address is: 0 (R0)
0x1168	0xF000FBE6  BL	_mikrobus_logWrite+0
;Click_NBIoT_STM.c, 65 :: 		}
L_end_nbiot_default_handler:
0x116C	0xF8DDE000  LDR	LR, [SP, #0]
0x1170	0xB001    ADD	SP, SP, #4
0x1172	0x4770    BX	LR
; end of _nbiot_default_handler
__nbiot_driver__strcpy:
;__nbiot_driver.c, 296 :: 		static void _strcpy(uint8_t *dest, uint8_t *src)
; src start address is: 4 (R1)
; dest start address is: 0 (R0)
0x0F30	0x460A    MOV	R2, R1
0x0F32	0x4601    MOV	R1, R0
; src end address is: 4 (R1)
; dest end address is: 0 (R0)
; dest start address is: 4 (R1)
; src start address is: 8 (R2)
;__nbiot_driver.c, 300 :: 		uint16_t i = 0;
; i start address is: 16 (R4)
0x0F34	0xF2400400  MOVW	R4, #0
;__nbiot_driver.c, 301 :: 		uint16_t j = 0;
; j start address is: 0 (R0)
0x0F38	0xF2400000  MOVW	R0, #0
; src end address is: 8 (R2)
; j end address is: 0 (R0)
; i end address is: 16 (R4)
; dest end address is: 4 (R1)
0x0F3C	0xB286    UXTH	R6, R0
0x0F3E	0x4610    MOV	R0, R2
;__nbiot_driver.c, 303 :: 		while ((dest[i++] = src[j++]) != '\0')
L___nbiot_driver__strcpy10:
; j start address is: 24 (R6)
; j start address is: 24 (R6)
; i start address is: 20 (R5)
; i start address is: 16 (R4)
; src start address is: 0 (R0)
; dest start address is: 4 (R1)
0x0F40	0xB2A3    UXTH	R3, R4
0x0F42	0x1C62    ADDS	R2, R4, #1
; i end address is: 16 (R4)
; i start address is: 20 (R5)
0x0F44	0xB295    UXTH	R5, R2
; i end address is: 20 (R5)
0x0F46	0x18CC    ADDS	R4, R1, R3
0x0F48	0xB2B3    UXTH	R3, R6
0x0F4A	0x1C72    ADDS	R2, R6, #1
0x0F4C	0xB296    UXTH	R6, R2
; j end address is: 24 (R6)
0x0F4E	0x18C2    ADDS	R2, R0, R3
0x0F50	0x7812    LDRB	R2, [R2, #0]
0x0F52	0x7022    STRB	R2, [R4, #0]
0x0F54	0x7822    LDRB	R2, [R4, #0]
0x0F56	0xB10A    CBZ	R2, L___nbiot_driver__strcpy11
; i end address is: 20 (R5)
; j end address is: 24 (R6)
;__nbiot_driver.c, 304 :: 		;
; j start address is: 24 (R6)
; i start address is: 20 (R5)
; src end address is: 0 (R0)
; dest end address is: 4 (R1)
; i end address is: 20 (R5)
; j end address is: 24 (R6)
0x0F58	0xB2AC    UXTH	R4, R5
0x0F5A	0xE7F1    B	L___nbiot_driver__strcpy10
L___nbiot_driver__strcpy11:
;__nbiot_driver.c, 305 :: 		}
L_end__strcpy:
0x0F5C	0x4770    BX	LR
; end of __nbiot_driver__strcpy
_nbiot_process:
;__nbiot_driver.c, 700 :: 		void nbiot_process()
0x0F60	0xB081    SUB	SP, SP, #4
0x0F62	0xF8CDE000  STR	LR, [SP, #0]
;__nbiot_driver.c, 703 :: 		if (0 != _NBIOT_POLL_ENABLE)
0x0F66	0x2000    MOVS	R0, #0
0x0F68	0x2801    CMP	R0, __NBIOT_POLL_ENABLE
0x0F6A	0xD006    BEQ	L_nbiot_process79
;__nbiot_driver.c, 705 :: 		if (0 != hal_uartReady())
0x0F6C	0xF7FFFE76  BL	__nbiot_driver_hal_uartReady+0
0x0F70	0xB118    CBZ	R0, L_nbiot_process80
;__nbiot_driver.c, 707 :: 		char tmp = hal_uartRead();
0x0F72	0xF7FFFE4B  BL	__nbiot_driver_hal_uartRead+0
;__nbiot_driver.c, 708 :: 		nbiot_putc( tmp );
0x0F76	0xF7FFFEBF  BL	_nbiot_putc+0
;__nbiot_driver.c, 709 :: 		}
L_nbiot_process80:
;__nbiot_driver.c, 710 :: 		}
L_nbiot_process79:
;__nbiot_driver.c, 713 :: 		if (f_buffer_warning)
0x0F7A	0x4852    LDR	R0, [PC, #328]
0x0F7C	0x7800    LDRB	R0, [R0, #0]
0x0F7E	0x2800    CMP	R0, #0
0x0F80	0xF000803A  BEQ	L_nbiot_process81
;__nbiot_driver.c, 715 :: 		CORE_SET_BUSY();
0x0F84	0x4850    LDR	R0, [PC, #320]
0x0F86	0x7800    LDRB	R0, [R0, #0]
0x0F88	0xB110    CBZ	R0, L_nbiot_process82
0x0F8A	0x2000    MOVS	R0, #0
0x0F8C	0xF000F978  BL	__nbiot_driver_DTE_setState+0
L_nbiot_process82:
;__nbiot_driver.c, 716 :: 		TIMER_STOP();
0x0F90	0x2100    MOVS	R1, #0
0x0F92	0x484E    LDR	R0, [PC, #312]
0x0F94	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 717 :: 		WATCHDOG_STOP();
0x0F96	0x2100    MOVS	R1, #0
0x0F98	0x484D    LDR	R0, [PC, #308]
0x0F9A	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 720 :: 		if (_NBIOT_EVENT_BUFFER_OUT == currentEv.evArg[_NBIOT_EVARG_EVENT_T])
0x0F9C	0x484D    LDR	R0, [PC, #308]
0x0F9E	0x7800    LDRB	R0, [R0, #0]
0x0FA0	0x2802    CMP	R0, #2
0x0FA2	0xD105    BNE	L_nbiot_process83
;__nbiot_driver.c, 723 :: 		currentEv.fpHdl(rxBuff.storage, currentEv.evArg);
0x0FA4	0x494C    LDR	R1, [PC, #304]
0x0FA6	0x484D    LDR	R0, [PC, #308]
0x0FA8	0x4C4D    LDR	R4, [PC, #308]
0x0FAA	0x6824    LDR	R4, [R4, #0]
0x0FAC	0x47A0    BLX	R4
;__nbiot_driver.c, 724 :: 		}
0x0FAE	0xE00B    B	L_nbiot_process84
L_nbiot_process83:
;__nbiot_driver.c, 728 :: 		createEvent(rxBuff.storage, &currentEv);
0x0FB0	0x494B    LDR	R1, [PC, #300]
0x0FB2	0x484A    LDR	R0, [PC, #296]
0x0FB4	0xF7FFFF00  BL	__nbiot_driver_createEvent+0
;__nbiot_driver.c, 729 :: 		EXEC_EVENT(_NBIOT_EVENT_BUFFER_OUT);
0x0FB8	0x2102    MOVS	R1, #2
0x0FBA	0x4846    LDR	R0, [PC, #280]
0x0FBC	0x7001    STRB	R1, [R0, #0]
0x0FBE	0x4946    LDR	R1, [PC, #280]
0x0FC0	0x4846    LDR	R0, [PC, #280]
0x0FC2	0x4C47    LDR	R4, [PC, #284]
0x0FC4	0x6824    LDR	R4, [R4, #0]
0x0FC6	0x47A0    BLX	R4
;__nbiot_driver.c, 730 :: 		}
L_nbiot_process84:
;__nbiot_driver.c, 731 :: 		f_buffer_warning = false;
0x0FC8	0x2100    MOVS	R1, #0
0x0FCA	0x483E    LDR	R0, [PC, #248]
0x0FCC	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 733 :: 		CORE_CLEAN_RX();
0x0FCE	0x2100    MOVS	R1, #0
0x0FD0	0x4844    LDR	R0, [PC, #272]
0x0FD2	0x8001    STRH	R1, [R0, #0]
0x0FD4	0x2100    MOVS	R1, #0
0x0FD6	0x4841    LDR	R0, [PC, #260]
0x0FD8	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 734 :: 		CORE_UNBLOCK();
0x0FDA	0x2100    MOVS	R1, #0
0x0FDC	0x4842    LDR	R0, [PC, #264]
0x0FDE	0x7001    STRB	R1, [R0, #0]
0x0FE0	0x2100    MOVS	R1, #0
0x0FE2	0x4842    LDR	R0, [PC, #264]
0x0FE4	0x7001    STRB	R1, [R0, #0]
0x0FE6	0x2100    MOVS	R1, #0
0x0FE8	0x4841    LDR	R0, [PC, #260]
0x0FEA	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 735 :: 		CORE_SET_FREE();
0x0FEC	0x4836    LDR	R0, [PC, #216]
0x0FEE	0x7800    LDRB	R0, [R0, #0]
0x0FF0	0xB110    CBZ	R0, L_nbiot_process85
0x0FF2	0x2001    MOVS	R0, #1
0x0FF4	0xF000F944  BL	__nbiot_driver_DTE_setState+0
L_nbiot_process85:
;__nbiot_driver.c, 736 :: 		}
L_nbiot_process81:
;__nbiot_driver.c, 739 :: 		if (f_response_ready)
0x0FF8	0x483C    LDR	R0, [PC, #240]
0x0FFA	0x7800    LDRB	R0, [R0, #0]
0x0FFC	0x2800    CMP	R0, #0
0x0FFE	0xD02C    BEQ	L_nbiot_process86
;__nbiot_driver.c, 741 :: 		CORE_SET_BUSY();
0x1000	0x4831    LDR	R0, [PC, #196]
0x1002	0x7800    LDRB	R0, [R0, #0]
0x1004	0xB110    CBZ	R0, L_nbiot_process87
0x1006	0x2000    MOVS	R0, #0
0x1008	0xF000F93A  BL	__nbiot_driver_DTE_setState+0
L_nbiot_process87:
;__nbiot_driver.c, 742 :: 		TIMER_STOP();
0x100C	0x2100    MOVS	R1, #0
0x100E	0x482F    LDR	R0, [PC, #188]
0x1010	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 743 :: 		WATCHDOG_STOP();
0x1012	0x2100    MOVS	R1, #0
0x1014	0x482E    LDR	R0, [PC, #184]
0x1016	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 745 :: 		createEvent(rxBuff.storage, &currentEv);
0x1018	0x4931    LDR	R1, [PC, #196]
0x101A	0x4830    LDR	R0, [PC, #192]
0x101C	0xF7FFFECC  BL	__nbiot_driver_createEvent+0
;__nbiot_driver.c, 746 :: 		EXEC_EVENT(_NBIOT_EVENT_RESPONSE);
0x1020	0x2100    MOVS	R1, #0
0x1022	0x482C    LDR	R0, [PC, #176]
0x1024	0x7001    STRB	R1, [R0, #0]
0x1026	0x492C    LDR	R1, [PC, #176]
0x1028	0x482C    LDR	R0, [PC, #176]
0x102A	0x4C2D    LDR	R4, [PC, #180]
0x102C	0x6824    LDR	R4, [R4, #0]
0x102E	0x47A0    BLX	R4
;__nbiot_driver.c, 748 :: 		CORE_CLEAN_RX();
0x1030	0x2100    MOVS	R1, #0
0x1032	0x482C    LDR	R0, [PC, #176]
0x1034	0x8001    STRH	R1, [R0, #0]
0x1036	0x2100    MOVS	R1, #0
0x1038	0x4828    LDR	R0, [PC, #160]
0x103A	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 749 :: 		CORE_UNBLOCK();
0x103C	0x2100    MOVS	R1, #0
0x103E	0x482A    LDR	R0, [PC, #168]
0x1040	0x7001    STRB	R1, [R0, #0]
0x1042	0x2100    MOVS	R1, #0
0x1044	0x4829    LDR	R0, [PC, #164]
0x1046	0x7001    STRB	R1, [R0, #0]
0x1048	0x2100    MOVS	R1, #0
0x104A	0x4829    LDR	R0, [PC, #164]
0x104C	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 750 :: 		CORE_SET_FREE();
0x104E	0x481E    LDR	R0, [PC, #120]
0x1050	0x7800    LDRB	R0, [R0, #0]
0x1052	0xB110    CBZ	R0, L_nbiot_process88
0x1054	0x2001    MOVS	R0, #1
0x1056	0xF000F913  BL	__nbiot_driver_DTE_setState+0
L_nbiot_process88:
;__nbiot_driver.c, 751 :: 		}
L_nbiot_process86:
;__nbiot_driver.c, 754 :: 		if (f_wdog_timeout)
0x105A	0x4823    LDR	R0, [PC, #140]
0x105C	0x7800    LDRB	R0, [R0, #0]
0x105E	0x2800    CMP	R0, #0
0x1060	0xD02C    BEQ	L_nbiot_process89
;__nbiot_driver.c, 756 :: 		CORE_SET_BUSY();
0x1062	0x4819    LDR	R0, [PC, #100]
0x1064	0x7800    LDRB	R0, [R0, #0]
0x1066	0xB110    CBZ	R0, L_nbiot_process90
0x1068	0x2000    MOVS	R0, #0
0x106A	0xF000F909  BL	__nbiot_driver_DTE_setState+0
L_nbiot_process90:
;__nbiot_driver.c, 757 :: 		TIMER_STOP();
0x106E	0x2100    MOVS	R1, #0
0x1070	0x4816    LDR	R0, [PC, #88]
0x1072	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 758 :: 		WATCHDOG_STOP();
0x1074	0x2100    MOVS	R1, #0
0x1076	0x4816    LDR	R0, [PC, #88]
0x1078	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 760 :: 		createEvent(rxBuff.storage, &currentEv);
0x107A	0x4919    LDR	R1, [PC, #100]
0x107C	0x4817    LDR	R0, [PC, #92]
0x107E	0xF7FFFE9B  BL	__nbiot_driver_createEvent+0
;__nbiot_driver.c, 761 :: 		EXEC_EVENT(_NBIOT_EVENT_TIMEOUT);
0x1082	0x2101    MOVS	R1, #1
0x1084	0x4813    LDR	R0, [PC, #76]
0x1086	0x7001    STRB	R1, [R0, #0]
0x1088	0x4913    LDR	R1, [PC, #76]
0x108A	0x4814    LDR	R0, [PC, #80]
0x108C	0x4C14    LDR	R4, [PC, #80]
0x108E	0x6824    LDR	R4, [R4, #0]
0x1090	0x47A0    BLX	R4
;__nbiot_driver.c, 763 :: 		CORE_CLEAN_RX();
0x1092	0x2100    MOVS	R1, #0
0x1094	0x4813    LDR	R0, [PC, #76]
0x1096	0x8001    STRH	R1, [R0, #0]
0x1098	0x2100    MOVS	R1, #0
0x109A	0x4810    LDR	R0, [PC, #64]
0x109C	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 764 :: 		CORE_UNBLOCK();
0x109E	0x2100    MOVS	R1, #0
0x10A0	0x4811    LDR	R0, [PC, #68]
0x10A2	0x7001    STRB	R1, [R0, #0]
0x10A4	0x2100    MOVS	R1, #0
0x10A6	0x4811    LDR	R0, [PC, #68]
0x10A8	0x7001    STRB	R1, [R0, #0]
0x10AA	0x2100    MOVS	R1, #0
0x10AC	0x4810    LDR	R0, [PC, #64]
0x10AE	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 765 :: 		CORE_SET_FREE();
0x10B0	0x4805    LDR	R0, [PC, #20]
0x10B2	0x7800    LDRB	R0, [R0, #0]
0x10B4	0xB110    CBZ	R0, L_nbiot_process91
0x10B6	0x2001    MOVS	R0, #1
0x10B8	0xF000F8E2  BL	__nbiot_driver_DTE_setState+0
L_nbiot_process91:
;__nbiot_driver.c, 766 :: 		}
L_nbiot_process89:
;__nbiot_driver.c, 767 :: 		}
L_end_nbiot_process:
0x10BC	0xF8DDE000  LDR	LR, [SP, #0]
0x10C0	0xB001    ADD	SP, SP, #4
0x10C2	0x4770    BX	LR
0x10C4	0x04612000  	__nbiot_driver_f_buffer_warning+0
0x10C8	0x022F2000  	__nbiot_driver_f_hfc_active+0
0x10CC	0x05672000  	__nbiot_driver_f_timer_active+0
0x10D0	0x05662000  	__nbiot_driver_f_watchdog_active+0
0x10D4	0x057A2000  	__nbiot_driver_currentEv+10
0x10D8	0x05782000  	__nbiot_driver_currentEv+8
0x10DC	0x04662000  	__nbiot_driver_rxBuff+2
0x10E0	0x05702000  	__nbiot_driver_currentEv+0
0x10E4	0x04642000  	__nbiot_driver_rxBuff+0
0x10E8	0x04632000  	__nbiot_driver_f_wdog_timeout+0
0x10EC	0x04622000  	__nbiot_driver_f_response_ready+0
0x10F0	0x04602000  	__nbiot_driver_f_sequence_active+0
; end of _nbiot_process
__nbiot_driver_hal_uartReady:
;__hal_stm32.c, 152 :: 		static uint8_t hal_uartReady()
0x0C5C	0xB081    SUB	SP, SP, #4
0x0C5E	0xF8CDE000  STR	LR, [SP, #0]
;__hal_stm32.c, 154 :: 		return ( uint8_t )fp_uartReady();
0x0C62	0x4C04    LDR	R4, [PC, #16]
0x0C64	0x6824    LDR	R4, [R4, #0]
0x0C66	0x47A0    BLX	R4
0x0C68	0xB2C0    UXTB	R0, R0
;__hal_stm32.c, 155 :: 		}
L_end_hal_uartReady:
0x0C6A	0xF8DDE000  LDR	LR, [SP, #0]
0x0C6E	0xB001    ADD	SP, SP, #4
0x0C70	0x4770    BX	LR
0x0C72	0xBF00    NOP
0x0C74	0x045C2000  	__nbiot_driver_fp_uartReady+0
; end of __nbiot_driver_hal_uartReady
_UART1_Read:
;__Lib_UART_123_45.c, 104 :: 		
0x0598	0xB081    SUB	SP, SP, #4
0x059A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 105 :: 		
0x059E	0x4803    LDR	R0, [PC, #12]
0x05A0	0xF7FFFEB4  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 106 :: 		
L_end_UART1_Read:
0x05A4	0xF8DDE000  LDR	LR, [SP, #0]
0x05A8	0xB001    ADD	SP, SP, #4
0x05AA	0x4770    BX	LR
0x05AC	0x38004001  	USART1_SR+0
; end of _UART1_Read
__Lib_UART_123_45_UARTx_Read:
;__Lib_UART_123_45.c, 96 :: 		
; UART_Base start address is: 0 (R0)
0x030C	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
; UART_Base end address is: 0 (R0)
;__Lib_UART_123_45.c, 98 :: 		
L___Lib_UART_123_45_UARTx_Read4:
; UART_Base start address is: 0 (R0)
0x030E	0x6802    LDR	R2, [R0, #0]
0x0310	0xF3C21140  UBFX	R1, R2, #5, #1
0x0314	0xB901    CBNZ	R1, L___Lib_UART_123_45_UARTx_Read5
0x0316	0xE7FA    B	L___Lib_UART_123_45_UARTx_Read4
L___Lib_UART_123_45_UARTx_Read5:
;__Lib_UART_123_45.c, 101 :: 		
0x0318	0x1D01    ADDS	R1, R0, #4
; UART_Base end address is: 0 (R0)
0x031A	0x6809    LDR	R1, [R1, #0]
0x031C	0xB288    UXTH	R0, R1
;__Lib_UART_123_45.c, 102 :: 		
L_end_UARTx_Read:
0x031E	0xB001    ADD	SP, SP, #4
0x0320	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Read
_UART1_Data_Ready:
;__Lib_UART_123_45.c, 131 :: 		
0x05B0	0xB081    SUB	SP, SP, #4
0x05B2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 132 :: 		
0x05B6	0x4803    LDR	R0, [PC, #12]
0x05B8	0xF7FFFF90  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 133 :: 		
L_end_UART1_Data_Ready:
0x05BC	0xF8DDE000  LDR	LR, [SP, #0]
0x05C0	0xB001    ADD	SP, SP, #4
0x05C2	0x4770    BX	LR
0x05C4	0x38004001  	USART1_SR+0
; end of _UART1_Data_Ready
__Lib_UART_123_45_UARTx_Data_Ready:
;__Lib_UART_123_45.c, 126 :: 		
; UART_Base start address is: 0 (R0)
0x04DC	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 128 :: 		
0x04DE	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x04E0	0xF3C11040  UBFX	R0, R1, #5, #1
;__Lib_UART_123_45.c, 129 :: 		
L_end_UARTx_Data_Ready:
0x04E4	0xB001    ADD	SP, SP, #4
0x04E6	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Data_Ready
_UART1_Tx_Idle:
;__Lib_UART_123_45.c, 212 :: 		
0x0568	0xB081    SUB	SP, SP, #4
0x056A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 213 :: 		
0x056E	0x4803    LDR	R0, [PC, #12]
0x0570	0xF7FFFE40  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 214 :: 		
L_end_UART1_Tx_Idle:
0x0574	0xF8DDE000  LDR	LR, [SP, #0]
0x0578	0xB001    ADD	SP, SP, #4
0x057A	0x4770    BX	LR
0x057C	0x38004001  	USART1_SR+0
; end of _UART1_Tx_Idle
__Lib_UART_123_45_UARTx_Tx_Idle:
;__Lib_UART_123_45.c, 208 :: 		
; UART_Base start address is: 0 (R0)
0x01F4	0xB081    SUB	SP, SP, #4
; UART_Base end address is: 0 (R0)
; UART_Base start address is: 0 (R0)
;__Lib_UART_123_45.c, 209 :: 		
0x01F6	0x6801    LDR	R1, [R0, #0]
; UART_Base end address is: 0 (R0)
0x01F8	0xF3C11080  UBFX	R0, R1, #6, #1
;__Lib_UART_123_45.c, 210 :: 		
L_end_UARTx_Tx_Idle:
0x01FC	0xB001    ADD	SP, SP, #4
0x01FE	0x4770    BX	LR
; end of __Lib_UART_123_45_UARTx_Tx_Idle
_UART2_Read:
;__Lib_UART_123_45.c, 108 :: 		
0x0580	0xB081    SUB	SP, SP, #4
0x0582	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 109 :: 		
0x0586	0x4803    LDR	R0, [PC, #12]
0x0588	0xF7FFFEC0  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 110 :: 		
L_end_UART2_Read:
0x058C	0xF8DDE000  LDR	LR, [SP, #0]
0x0590	0xB001    ADD	SP, SP, #4
0x0592	0x4770    BX	LR
0x0594	0x44004000  	USART2_SR+0
; end of _UART2_Read
_UART2_Data_Ready:
;__Lib_UART_123_45.c, 135 :: 		
0x05C8	0xB081    SUB	SP, SP, #4
0x05CA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 136 :: 		
0x05CE	0x4803    LDR	R0, [PC, #12]
0x05D0	0xF7FFFF84  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 137 :: 		
L_end_UART2_Data_Ready:
0x05D4	0xF8DDE000  LDR	LR, [SP, #0]
0x05D8	0xB001    ADD	SP, SP, #4
0x05DA	0x4770    BX	LR
0x05DC	0x44004000  	USART2_SR+0
; end of _UART2_Data_Ready
_UART2_Tx_Idle:
;__Lib_UART_123_45.c, 216 :: 		
0x0610	0xB081    SUB	SP, SP, #4
0x0612	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 217 :: 		
0x0616	0x4803    LDR	R0, [PC, #12]
0x0618	0xF7FFFDEC  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 218 :: 		
L_end_UART2_Tx_Idle:
0x061C	0xF8DDE000  LDR	LR, [SP, #0]
0x0620	0xB001    ADD	SP, SP, #4
0x0622	0x4770    BX	LR
0x0624	0x44004000  	USART2_SR+0
; end of _UART2_Tx_Idle
_UART3_Read:
;__Lib_UART_123_45.c, 112 :: 		
0x0628	0xB081    SUB	SP, SP, #4
0x062A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 113 :: 		
0x062E	0x4803    LDR	R0, [PC, #12]
0x0630	0xF7FFFE6C  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 114 :: 		
L_end_UART3_Read:
0x0634	0xF8DDE000  LDR	LR, [SP, #0]
0x0638	0xB001    ADD	SP, SP, #4
0x063A	0x4770    BX	LR
0x063C	0x48004000  	USART3_SR+0
; end of _UART3_Read
_UART3_Data_Ready:
;__Lib_UART_123_45.c, 139 :: 		
0x05E0	0xB081    SUB	SP, SP, #4
0x05E2	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 140 :: 		
0x05E6	0x4803    LDR	R0, [PC, #12]
0x05E8	0xF7FFFF78  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 141 :: 		
L_end_UART3_Data_Ready:
0x05EC	0xF8DDE000  LDR	LR, [SP, #0]
0x05F0	0xB001    ADD	SP, SP, #4
0x05F2	0x4770    BX	LR
0x05F4	0x48004000  	USART3_SR+0
; end of _UART3_Data_Ready
_UART3_Tx_Idle:
;__Lib_UART_123_45.c, 220 :: 		
0x05F8	0xB081    SUB	SP, SP, #4
0x05FA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 221 :: 		
0x05FE	0x4803    LDR	R0, [PC, #12]
0x0600	0xF7FFFDF8  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 222 :: 		
L_end_UART3_Tx_Idle:
0x0604	0xF8DDE000  LDR	LR, [SP, #0]
0x0608	0xB001    ADD	SP, SP, #4
0x060A	0x4770    BX	LR
0x060C	0x48004000  	USART3_SR+0
; end of _UART3_Tx_Idle
_UART4_Read:
;__Lib_UART_123_45.c, 116 :: 		
0x0550	0xB081    SUB	SP, SP, #4
0x0552	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 117 :: 		
0x0556	0x4803    LDR	R0, [PC, #12]
0x0558	0xF7FFFED8  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 118 :: 		
L_end_UART4_Read:
0x055C	0xF8DDE000  LDR	LR, [SP, #0]
0x0560	0xB001    ADD	SP, SP, #4
0x0562	0x4770    BX	LR
0x0564	0x4C004000  	UART4_SR+0
; end of _UART4_Read
_UART4_Data_Ready:
;__Lib_UART_123_45.c, 143 :: 		
0x0518	0xB081    SUB	SP, SP, #4
0x051A	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 144 :: 		
0x051E	0x4803    LDR	R0, [PC, #12]
0x0520	0xF7FFFFDC  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 145 :: 		
L_end_UART4_Data_Ready:
0x0524	0xF8DDE000  LDR	LR, [SP, #0]
0x0528	0xB001    ADD	SP, SP, #4
0x052A	0x4770    BX	LR
0x052C	0x4C004000  	UART4_SR+0
; end of _UART4_Data_Ready
_UART4_Tx_Idle:
;__Lib_UART_123_45.c, 224 :: 		
0x04E8	0xB081    SUB	SP, SP, #4
0x04EA	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 225 :: 		
0x04EE	0x4803    LDR	R0, [PC, #12]
0x04F0	0xF7FFFE80  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 226 :: 		
L_end_UART4_Tx_Idle:
0x04F4	0xF8DDE000  LDR	LR, [SP, #0]
0x04F8	0xB001    ADD	SP, SP, #4
0x04FA	0x4770    BX	LR
0x04FC	0x4C004000  	UART4_SR+0
; end of _UART4_Tx_Idle
_UART5_Read:
;__Lib_UART_123_45.c, 120 :: 		
0x0500	0xB081    SUB	SP, SP, #4
0x0502	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 121 :: 		
0x0506	0x4803    LDR	R0, [PC, #12]
0x0508	0xF7FFFF00  BL	__Lib_UART_123_45_UARTx_Read+0
;__Lib_UART_123_45.c, 122 :: 		
L_end_UART5_Read:
0x050C	0xF8DDE000  LDR	LR, [SP, #0]
0x0510	0xB001    ADD	SP, SP, #4
0x0512	0x4770    BX	LR
0x0514	0x50004000  	UART5_SR+0
; end of _UART5_Read
_UART5_Data_Ready:
;__Lib_UART_123_45.c, 147 :: 		
0x0BDC	0xB081    SUB	SP, SP, #4
0x0BDE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 148 :: 		
0x0BE2	0x4803    LDR	R0, [PC, #12]
0x0BE4	0xF7FFFC7A  BL	__Lib_UART_123_45_UARTx_Data_Ready+0
;__Lib_UART_123_45.c, 149 :: 		
L_end_UART5_Data_Ready:
0x0BE8	0xF8DDE000  LDR	LR, [SP, #0]
0x0BEC	0xB001    ADD	SP, SP, #4
0x0BEE	0x4770    BX	LR
0x0BF0	0x50004000  	UART5_SR+0
; end of _UART5_Data_Ready
_UART5_Tx_Idle:
;__Lib_UART_123_45.c, 228 :: 		
0x0BC4	0xB081    SUB	SP, SP, #4
0x0BC6	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_UART_123_45.c, 229 :: 		
0x0BCA	0x4803    LDR	R0, [PC, #12]
0x0BCC	0xF7FFFB12  BL	__Lib_UART_123_45_UARTx_Tx_Idle+0
;__Lib_UART_123_45.c, 230 :: 		
L_end_UART5_Tx_Idle:
0x0BD0	0xF8DDE000  LDR	LR, [SP, #0]
0x0BD4	0xB001    ADD	SP, SP, #4
0x0BD6	0x4770    BX	LR
0x0BD8	0x50004000  	UART5_SR+0
; end of _UART5_Tx_Idle
__nbiot_driver_hal_uartRead:
;__hal_stm32.c, 147 :: 		static uint8_t hal_uartRead()
0x0C0C	0xB081    SUB	SP, SP, #4
0x0C0E	0xF8CDE000  STR	LR, [SP, #0]
;__hal_stm32.c, 149 :: 		return ( uint8_t )fp_uartRead();
0x0C12	0x4C04    LDR	R4, [PC, #16]
0x0C14	0x6824    LDR	R4, [R4, #0]
0x0C16	0x47A0    BLX	R4
0x0C18	0xB2C0    UXTB	R0, R0
;__hal_stm32.c, 150 :: 		}
L_end_hal_uartRead:
0x0C1A	0xF8DDE000  LDR	LR, [SP, #0]
0x0C1E	0xB001    ADD	SP, SP, #4
0x0C20	0x4770    BX	LR
0x0C22	0xBF00    NOP
0x0C24	0x04582000  	__nbiot_driver_fp_uartRead+0
; end of __nbiot_driver_hal_uartRead
_nbiot_putc:
;__nbiot_driver.c, 552 :: 		void nbiot_putc( uint8_t rxInput )
; rxInput start address is: 0 (R0)
; rxInput end address is: 0 (R0)
; rxInput start address is: 0 (R0)
;__nbiot_driver.c, 554 :: 		CORE_BLOCK();
0x0CF8	0x2200    MOVS	R2, #0
0x0CFA	0x4915    LDR	R1, [PC, #84]
0x0CFC	0x700A    STRB	R2, [R1, #0]
0x0CFE	0x2200    MOVS	R2, #0
0x0D00	0x4914    LDR	R1, [PC, #80]
0x0D02	0x700A    STRB	R2, [R1, #0]
0x0D04	0x2201    MOVS	R2, #1
0x0D06	0x4914    LDR	R1, [PC, #80]
0x0D08	0x700A    STRB	R2, [R1, #0]
;__nbiot_driver.c, 555 :: 		TIMER_START();
0x0D0A	0x2200    MOVS	R2, #0
0x0D0C	0x4913    LDR	R1, [PC, #76]
0x0D0E	0x600A    STR	R2, [R1, #0]
0x0D10	0x2201    MOVS	R2, #1
0x0D12	0x4913    LDR	R1, [PC, #76]
0x0D14	0x700A    STRB	R2, [R1, #0]
;__nbiot_driver.c, 556 :: 		rxBuff.storage[rxBuff.idx++] = rxInput;
0x0D16	0x4913    LDR	R1, [PC, #76]
0x0D18	0x880A    LDRH	R2, [R1, #0]
0x0D1A	0x4913    LDR	R1, [PC, #76]
0x0D1C	0x1889    ADDS	R1, R1, R2
0x0D1E	0x7008    STRB	R0, [R1, #0]
; rxInput end address is: 0 (R0)
0x0D20	0x4910    LDR	R1, [PC, #64]
0x0D22	0x8809    LDRH	R1, [R1, #0]
0x0D24	0x1C4A    ADDS	R2, R1, #1
0x0D26	0x490F    LDR	R1, [PC, #60]
0x0D28	0x800A    STRH	R2, [R1, #0]
;__nbiot_driver.c, 558 :: 		if (_NBIOT_BUF_WARNING <= rxBuff.idx)
0x0D2A	0x490E    LDR	R1, [PC, #56]
0x0D2C	0x880A    LDRH	R2, [R1, #0]
0x0D2E	0x490F    LDR	R1, [PC, #60]
0x0D30	0x428A    CMP	R2, R1
0x0D32	0xD302    BCC	L_nbiot_putc45
;__nbiot_driver.c, 560 :: 		f_buffer_warning = true;
0x0D34	0x2201    MOVS	R2, #1
0x0D36	0x490E    LDR	R1, [PC, #56]
0x0D38	0x700A    STRB	R2, [R1, #0]
;__nbiot_driver.c, 561 :: 		}
L_nbiot_putc45:
;__nbiot_driver.c, 563 :: 		if((_NBIOT_BUF_SIZE - 1) == rxBuff.idx)
0x0D3A	0x490A    LDR	R1, [PC, #40]
0x0D3C	0x8809    LDRH	R1, [R1, #0]
0x0D3E	0xF1B10FFF  CMP	R1, #255
0x0D42	0xD104    BNE	L_nbiot_putc46
;__nbiot_driver.c, 565 :: 		rxBuff.idx--;
0x0D44	0x4907    LDR	R1, [PC, #28]
0x0D46	0x8809    LDRH	R1, [R1, #0]
0x0D48	0x1E4A    SUBS	R2, R1, #1
0x0D4A	0x4906    LDR	R1, [PC, #24]
0x0D4C	0x800A    STRH	R2, [R1, #0]
;__nbiot_driver.c, 566 :: 		}
L_nbiot_putc46:
;__nbiot_driver.c, 567 :: 		}
L_end_nbiot_putc:
0x0D4E	0x4770    BX	LR
0x0D50	0x04632000  	__nbiot_driver_f_wdog_timeout+0
0x0D54	0x04622000  	__nbiot_driver_f_response_ready+0
0x0D58	0x04602000  	__nbiot_driver_f_sequence_active+0
0x0D5C	0x056C2000  	__nbiot_driver_c_timer+0
0x0D60	0x05672000  	__nbiot_driver_f_timer_active+0
0x0D64	0x04642000  	__nbiot_driver_rxBuff+0
0x0D68	0x04662000  	__nbiot_driver_rxBuff+2
0x0D6C	0x00C00000  	__NBIOT_BUF_WARNING
0x0D70	0x04612000  	__nbiot_driver_f_buffer_warning+0
; end of _nbiot_putc
__nbiot_driver_createEvent:
;__nbiot_driver.c, 481 :: 		static void createEvent( char *pInput, T_CORE_event *pEvent )
0x0DB8	0xB089    SUB	SP, SP, #36
0x0DBA	0xF8CDE000  STR	LR, [SP, #0]
0x0DBE	0x9006    STR	R0, [SP, #24]
0x0DC0	0x9107    STR	R1, [SP, #28]
;__nbiot_driver.c, 483 :: 		uint8_t hIdx     = 0;
;__nbiot_driver.c, 484 :: 		uint8_t startIdx = 0;
;__nbiot_driver.c, 485 :: 		uint8_t startOff = 0;
;__nbiot_driver.c, 486 :: 		uint8_t endIdx   = 0;
;__nbiot_driver.c, 487 :: 		uint8_t endOff   = 0;
;__nbiot_driver.c, 489 :: 		char tmp[_NBIOT_CMD_MAXSIZE + 1] = { 0 };
0x0DC2	0xF10D0B04  ADD	R11, SP, #4
0x0DC6	0xF10B0A11  ADD	R10, R11, #17
0x0DCA	0xF8DFC0B0  LDR	R12, [PC, #176]
0x0DCE	0xF000FF75  BL	___CC2DW+0
;__nbiot_driver.c, 492 :: 		startIdx = searchLut(pInput, LUT_START_MARK, LUT_START_MARK_SIZE, SEARCH_IDX);
0x0DD2	0x2300    MOVS	R3, #0
0x0DD4	0x2207    MOVS	R2, #7
0x0DD6	0x492A    LDR	R1, [PC, #168]
0x0DD8	0x9806    LDR	R0, [SP, #24]
0x0DDA	0xF7FFFC31  BL	__nbiot_driver_searchLut+0
0x0DDE	0xF88D0020  STRB	R0, [SP, #32]
;__nbiot_driver.c, 493 :: 		startOff = searchLut(pInput, LUT_START_MARK, LUT_START_MARK_SIZE, SEARCH_OFFSET);
0x0DE2	0x2301    MOVS	R3, #1
0x0DE4	0x2207    MOVS	R2, #7
0x0DE6	0x4926    LDR	R1, [PC, #152]
0x0DE8	0x9806    LDR	R0, [SP, #24]
0x0DEA	0xF7FFFC29  BL	__nbiot_driver_searchLut+0
0x0DEE	0xF88D0021  STRB	R0, [SP, #33]
;__nbiot_driver.c, 494 :: 		endIdx = searchLut(pInput, LUT_END_MARK, LUT_END_MARK_SIZE, SEARCH_IDX);
0x0DF2	0x2300    MOVS	R3, #0
0x0DF4	0x2206    MOVS	R2, #6
0x0DF6	0x4923    LDR	R1, [PC, #140]
0x0DF8	0x9806    LDR	R0, [SP, #24]
0x0DFA	0xF7FFFC21  BL	__nbiot_driver_searchLut+0
0x0DFE	0xF88D0022  STRB	R0, [SP, #34]
;__nbiot_driver.c, 495 :: 		endOff = searchLut(pInput, LUT_END_MARK, LUT_END_MARK_SIZE, SEARCH_OFFSET);
0x0E02	0x2301    MOVS	R3, #1
0x0E04	0x2206    MOVS	R2, #6
0x0E06	0x491F    LDR	R1, [PC, #124]
0x0E08	0x9806    LDR	R0, [SP, #24]
0x0E0A	0xF7FFFC19  BL	__nbiot_driver_searchLut+0
; endOff start address is: 4 (R1)
0x0E0E	0xB2C1    UXTB	R1, R0
;__nbiot_driver.c, 497 :: 		if (0 == endOff)
0x0E10	0xB908    CBNZ	R0, L___nbiot_driver_createEvent94
; endOff end address is: 4 (R1)
;__nbiot_driver.c, 499 :: 		endOff = _NBIOT_CMD_MAXSIZE;
; endOff start address is: 0 (R0)
0x0E12	0x2010    MOVS	R0, #16
; endOff end address is: 0 (R0)
;__nbiot_driver.c, 500 :: 		}
0x0E14	0xE000    B	L___nbiot_driver_createEvent43
L___nbiot_driver_createEvent94:
;__nbiot_driver.c, 497 :: 		if (0 == endOff)
0x0E16	0xB2C8    UXTB	R0, R1
;__nbiot_driver.c, 500 :: 		}
L___nbiot_driver_createEvent43:
;__nbiot_driver.c, 503 :: 		_strncpy(tmp, pInput + startOff, endOff - startOff);
; endOff start address is: 0 (R0)
0x0E18	0xF89D2021  LDRB	R2, [SP, #33]
0x0E1C	0x1A84    SUB	R4, R0, R2
; endOff end address is: 0 (R0)
0x0E1E	0xF89D3021  LDRB	R3, [SP, #33]
0x0E22	0x9A06    LDR	R2, [SP, #24]
0x0E24	0x18D3    ADDS	R3, R2, R3
0x0E26	0xAA01    ADD	R2, SP, #4
0x0E28	0x4619    MOV	R1, R3
0x0E2A	0x4610    MOV	R0, R2
0x0E2C	0xB2A2    UXTH	R2, R4
0x0E2E	0xF7FFFEAF  BL	__nbiot_driver__strncpy+0
;__nbiot_driver.c, 504 :: 		hIdx                         = locateHandler(tmp);
0x0E32	0xAA01    ADD	R2, SP, #4
0x0E34	0x4610    MOV	R0, R2
0x0E36	0xF7FFFE7F  BL	__nbiot_driver_locateHandler+0
; hIdx start address is: 4 (R1)
0x0E3A	0xB2C1    UXTB	R1, R0
;__nbiot_driver.c, 505 :: 		pEvent->fpHdl                = hdlBuff.storage[hIdx].handler;
0x0E3C	0xB2C2    UXTB	R2, R0
0x0E3E	0x0113    LSLS	R3, R2, #4
0x0E40	0x4A11    LDR	R2, [PC, #68]
0x0E42	0x18D2    ADDS	R2, R2, R3
0x0E44	0x320C    ADDS	R2, #12
0x0E46	0x6813    LDR	R3, [R2, #0]
0x0E48	0x9A07    LDR	R2, [SP, #28]
0x0E4A	0x6013    STR	R3, [R2, #0]
;__nbiot_driver.c, 506 :: 		pEvent->wDogLimit            = hdlBuff.storage[hIdx].timeout;
0x0E4C	0x9A07    LDR	R2, [SP, #28]
0x0E4E	0x1D14    ADDS	R4, R2, #4
0x0E50	0x010B    LSLS	R3, R1, #4
; hIdx end address is: 4 (R1)
0x0E52	0x4A0D    LDR	R2, [PC, #52]
0x0E54	0x18D2    ADDS	R2, R2, R3
0x0E56	0x3208    ADDS	R2, #8
0x0E58	0x6812    LDR	R2, [R2, #0]
0x0E5A	0x6022    STR	R2, [R4, #0]
;__nbiot_driver.c, 507 :: 		pEvent->evArg[_NBIOT_EVARG_START_T]  = startIdx;
0x0E5C	0x9A07    LDR	R2, [SP, #28]
0x0E5E	0xF2020308  ADDW	R3, R2, #8
0x0E62	0xF89D2020  LDRB	R2, [SP, #32]
0x0E66	0x701A    STRB	R2, [R3, #0]
;__nbiot_driver.c, 508 :: 		pEvent->evArg[_NBIOT_EVARG_END_T]    = endIdx;
0x0E68	0x9A07    LDR	R2, [SP, #28]
0x0E6A	0x3208    ADDS	R2, #8
0x0E6C	0x1C53    ADDS	R3, R2, #1
0x0E6E	0xF89D2022  LDRB	R2, [SP, #34]
0x0E72	0x701A    STRB	R2, [R3, #0]
;__nbiot_driver.c, 509 :: 		}
L_end_createEvent:
0x0E74	0xF8DDE000  LDR	LR, [SP, #0]
0x0E78	0xB009    ADD	SP, SP, #36
0x0E7A	0x4770    BX	LR
0x0E7C	0x23E80000  	?ICS__nbiot_driver_createEvent_tmp_L0+0
0x0E80	0x02072000  	__nbiot_driver_LUT_START_MARK+0
0x0E84	0x021C2000  	__nbiot_driver_LUT_END_MARK+0
0x0E88	0x02502000  	__nbiot_driver_hdlBuff+4
; end of __nbiot_driver_createEvent
__nbiot_driver_searchLut:
;__nbiot_driver.c, 447 :: 		static uint8_t searchLut( char* pInput, char (*pLut)[ LUTS_WIDTH ], uint8_t lutSize, uint8_t flag )
; pInput start address is: 0 (R0)
0x0640	0xB085    SUB	SP, SP, #20
0x0642	0xF8CDE000  STR	LR, [SP, #0]
0x0646	0x4682    MOV	R10, R0
0x0648	0x9102    STR	R1, [SP, #8]
0x064A	0xF88D200C  STRB	R2, [SP, #12]
0x064E	0xF88D3010  STRB	R3, [SP, #16]
; pInput end address is: 0 (R0)
; pInput start address is: 40 (R10)
;__nbiot_driver.c, 449 :: 		uint8_t     inLen    = 0;
;__nbiot_driver.c, 450 :: 		uint8_t     inOff    = 0;
;__nbiot_driver.c, 451 :: 		uint8_t     lutLen   = 0;
;__nbiot_driver.c, 452 :: 		uint8_t     lutIdx   = 0;
;__nbiot_driver.c, 454 :: 		if (_NBIOT_CMD_MAXSIZE < (inLen = _strlen(pInput)))
0x0652	0x4650    MOV	R0, R10
0x0654	0xF7FFFDD4  BL	__nbiot_driver__strlen+0
0x0658	0xF88D0011  STRB	R0, [SP, #17]
0x065C	0xB2C4    UXTB	R4, R0
0x065E	0x2C10    CMP	R4, #16
0x0660	0xD902    BLS	L___nbiot_driver_searchLut32
;__nbiot_driver.c, 456 :: 		inLen = _NBIOT_CMD_MAXSIZE;
0x0662	0x2410    MOVS	R4, #16
0x0664	0xF88D4011  STRB	R4, [SP, #17]
;__nbiot_driver.c, 457 :: 		}
L___nbiot_driver_searchLut32:
;__nbiot_driver.c, 459 :: 		for (lutIdx = 1; lutIdx < lutSize; lutIdx++)
; lutIdx start address is: 28 (R7)
0x0668	0x2701    MOVS	R7, #1
; lutIdx end address is: 28 (R7)
; pInput end address is: 40 (R10)
0x066A	0x4651    MOV	R1, R10
L___nbiot_driver_searchLut33:
; lutIdx start address is: 28 (R7)
; pInput start address is: 4 (R1)
0x066C	0xF89D400C  LDRB	R4, [SP, #12]
0x0670	0x42A7    CMP	R7, R4
0x0672	0xD23F    BCS	L___nbiot_driver_searchLut34
;__nbiot_driver.c, 461 :: 		lutLen = _strlen(pLut[lutIdx]);
0x0674	0x2403    MOVS	R4, #3
0x0676	0xFB04F507  MUL	R5, R4, R7
0x067A	0x9C02    LDR	R4, [SP, #8]
0x067C	0x1964    ADDS	R4, R4, R5
0x067E	0x9101    STR	R1, [SP, #4]
0x0680	0x4620    MOV	R0, R4
0x0682	0xF7FFFDBD  BL	__nbiot_driver__strlen+0
0x0686	0x9901    LDR	R1, [SP, #4]
; lutLen start address is: 8 (R2)
0x0688	0xB2C2    UXTB	R2, R0
;__nbiot_driver.c, 463 :: 		for (inOff = 0; inOff < inLen; inOff++)
; inOff start address is: 48 (R12)
0x068A	0xF2400C00  MOVW	R12, #0
; lutIdx end address is: 28 (R7)
; pInput end address is: 4 (R1)
; lutLen end address is: 8 (R2)
; inOff end address is: 48 (R12)
0x068E	0x468A    MOV	R10, R1
0x0690	0xB2F9    UXTB	R1, R7
0x0692	0xFA5FFB8C  UXTB	R11, R12
0x0696	0xFA5FFC82  UXTB	R12, R2
L___nbiot_driver_searchLut36:
; lutLen start address is: 48 (R12)
; inOff start address is: 44 (R11)
; lutLen start address is: 48 (R12)
; lutLen end address is: 48 (R12)
; pInput start address is: 40 (R10)
; lutIdx start address is: 4 (R1)
0x069A	0xF89D4011  LDRB	R4, [SP, #17]
0x069E	0x45A3    CMP	R11, R4
0x06A0	0xD223    BCS	L___nbiot_driver_searchLut37
; lutLen end address is: 48 (R12)
;__nbiot_driver.c, 465 :: 		if (!_strncmp(pLut[lutIdx], pInput + inOff, lutLen))
; lutLen start address is: 48 (R12)
0x06A2	0xEB0A060B  ADD	R6, R10, R11, LSL #0
0x06A6	0x2403    MOVS	R4, #3
0x06A8	0xFB04F501  MUL	R5, R4, R1
0x06AC	0x9C02    LDR	R4, [SP, #8]
0x06AE	0x1964    ADDS	R4, R4, R5
0x06B0	0xF88D1004  STRB	R1, [SP, #4]
0x06B4	0xFA5FF28C  UXTB	R2, R12
0x06B8	0x4631    MOV	R1, R6
0x06BA	0x4620    MOV	R0, R4
0x06BC	0xF7FFFDF8  BL	__nbiot_driver__strncmp+0
0x06C0	0xF89D1004  LDRB	R1, [SP, #4]
0x06C4	0xB958    CBNZ	R0, L___nbiot_driver_searchLut39
;__nbiot_driver.c, 467 :: 		if (SEARCH_IDX == flag)
0x06C6	0xF89D4010  LDRB	R4, [SP, #16]
0x06CA	0xB90C    CBNZ	R4, L___nbiot_driver_searchLut40
; inOff end address is: 44 (R11)
; lutLen end address is: 48 (R12)
; pInput end address is: 40 (R10)
;__nbiot_driver.c, 469 :: 		return lutIdx;
0x06CC	0xB2C8    UXTB	R0, R1
; lutIdx end address is: 4 (R1)
0x06CE	0xE012    B	L_end_searchLut
;__nbiot_driver.c, 470 :: 		}
L___nbiot_driver_searchLut40:
;__nbiot_driver.c, 471 :: 		else if (SEARCH_OFFSET == flag)
; lutIdx start address is: 4 (R1)
; pInput start address is: 40 (R10)
; lutLen start address is: 48 (R12)
; inOff start address is: 44 (R11)
0x06D0	0xF89D4010  LDRB	R4, [SP, #16]
0x06D4	0x2C01    CMP	R4, #1
0x06D6	0xD102    BNE	L___nbiot_driver_searchLut42
; lutLen end address is: 48 (R12)
; pInput end address is: 40 (R10)
; lutIdx end address is: 4 (R1)
;__nbiot_driver.c, 473 :: 		return inOff;
0x06D8	0xFA5FF08B  UXTB	R0, R11
; inOff end address is: 44 (R11)
0x06DC	0xE00B    B	L_end_searchLut
;__nbiot_driver.c, 474 :: 		}
L___nbiot_driver_searchLut42:
;__nbiot_driver.c, 475 :: 		}
; lutIdx start address is: 4 (R1)
; pInput start address is: 40 (R10)
; lutLen start address is: 48 (R12)
; inOff start address is: 44 (R11)
L___nbiot_driver_searchLut39:
;__nbiot_driver.c, 463 :: 		for (inOff = 0; inOff < inLen; inOff++)
0x06DE	0xF10B0401  ADD	R4, R11, #1
; inOff end address is: 44 (R11)
; inOff start address is: 0 (R0)
0x06E2	0xB2E0    UXTB	R0, R4
;__nbiot_driver.c, 476 :: 		}
; lutLen end address is: 48 (R12)
; inOff end address is: 0 (R0)
0x06E4	0xFA5FFB80  UXTB	R11, R0
0x06E8	0xE7D7    B	L___nbiot_driver_searchLut36
L___nbiot_driver_searchLut37:
;__nbiot_driver.c, 459 :: 		for (lutIdx = 1; lutIdx < lutSize; lutIdx++)
0x06EA	0x1C4C    ADDS	R4, R1, #1
; lutIdx end address is: 4 (R1)
; lutIdx start address is: 20 (R5)
0x06EC	0xB2E5    UXTB	R5, R4
;__nbiot_driver.c, 477 :: 		}
0x06EE	0x4651    MOV	R1, R10
; pInput end address is: 40 (R10)
; lutIdx end address is: 20 (R5)
0x06F0	0xB2EF    UXTB	R7, R5
0x06F2	0xE7BB    B	L___nbiot_driver_searchLut33
L___nbiot_driver_searchLut34:
;__nbiot_driver.c, 478 :: 		return 0;
0x06F4	0x2000    MOVS	R0, #0
;__nbiot_driver.c, 479 :: 		}
L_end_searchLut:
0x06F6	0xF8DDE000  LDR	LR, [SP, #0]
0x06FA	0xB005    ADD	SP, SP, #20
0x06FC	0x4770    BX	LR
; end of __nbiot_driver_searchLut
__nbiot_driver__strlen:
;__nbiot_driver.c, 322 :: 		static uint16_t _strlen(uint8_t *s)
; s start address is: 0 (R0)
0x0200	0x4601    MOV	R1, R0
; s end address is: 0 (R0)
; s start address is: 4 (R1)
;__nbiot_driver.c, 324 :: 		uint16_t i = 0;
; i start address is: 12 (R3)
0x0202	0xF2400300  MOVW	R3, #0
;__nbiot_driver.c, 325 :: 		uint16_t c = 0;
; c start address is: 0 (R0)
0x0206	0xF2400000  MOVW	R0, #0
; s end address is: 4 (R1)
; c end address is: 0 (R0)
; i end address is: 12 (R3)
0x020A	0xB282    UXTH	R2, R0
0x020C	0x4608    MOV	R0, R1
;__nbiot_driver.c, 327 :: 		while (0 != s[i])
L___nbiot_driver__strlen16:
; c start address is: 8 (R2)
; i start address is: 12 (R3)
; s start address is: 0 (R0)
0x020E	0x18C1    ADDS	R1, R0, R3
0x0210	0x7809    LDRB	R1, [R1, #0]
0x0212	0xB121    CBZ	R1, L___nbiot_driver__strlen17
;__nbiot_driver.c, 329 :: 		i++;
0x0214	0x1C5B    ADDS	R3, R3, #1
0x0216	0xB29B    UXTH	R3, R3
;__nbiot_driver.c, 330 :: 		c++;
0x0218	0x1C52    ADDS	R2, R2, #1
0x021A	0xB292    UXTH	R2, R2
;__nbiot_driver.c, 331 :: 		}
; s end address is: 0 (R0)
; i end address is: 12 (R3)
0x021C	0xE7F7    B	L___nbiot_driver__strlen16
L___nbiot_driver__strlen17:
;__nbiot_driver.c, 333 :: 		return c;
0x021E	0xB290    UXTH	R0, R2
; c end address is: 8 (R2)
;__nbiot_driver.c, 334 :: 		}
L_end__strlen:
0x0220	0x4770    BX	LR
; end of __nbiot_driver__strlen
__nbiot_driver__strncmp:
;__nbiot_driver.c, 254 :: 		static int8_t _strncmp(uint8_t *cs, uint8_t *ct, uint16_t count)
; count start address is: 8 (R2)
; ct start address is: 4 (R1)
; cs start address is: 0 (R0)
0x02B0	0xB293    UXTH	R3, R2
0x02B2	0x460A    MOV	R2, R1
0x02B4	0x4601    MOV	R1, R0
; count end address is: 8 (R2)
; ct end address is: 4 (R1)
; cs end address is: 0 (R0)
; cs start address is: 4 (R1)
; ct start address is: 8 (R2)
; count start address is: 12 (R3)
;__nbiot_driver.c, 258 :: 		uint16_t i = 0;
; i start address is: 16 (R4)
0x02B6	0xF2400400  MOVW	R4, #0
;__nbiot_driver.c, 259 :: 		uint16_t j = 0;
; j start address is: 0 (R0)
0x02BA	0xF2400000  MOVW	R0, #0
; ct end address is: 8 (R2)
; count end address is: 12 (R3)
; j end address is: 0 (R0)
; i end address is: 16 (R4)
0x02BE	0xFA1FF880  UXTH	R8, R0
0x02C2	0x4610    MOV	R0, R2
0x02C4	0xB29A    UXTH	R2, R3
;__nbiot_driver.c, 261 :: 		while (0 != count)
L___nbiot_driver__strncmp1:
; j start address is: 32 (R8)
; ct start address is: 0 (R0)
; i start address is: 16 (R4)
; count start address is: 8 (R2)
; ct start address is: 0 (R0)
; ct end address is: 0 (R0)
; cs start address is: 4 (R1)
; cs end address is: 4 (R1)
0x02C6	0xB1EA    CBZ	R2, L___nbiot_driver__strncmp2
; ct end address is: 0 (R0)
; cs end address is: 4 (R1)
;__nbiot_driver.c, 263 :: 		c1 = cs[i++];
; cs start address is: 4 (R1)
; ct start address is: 0 (R0)
0x02C8	0x190B    ADDS	R3, R1, R4
0x02CA	0x781D    LDRB	R5, [R3, #0]
; c1 start address is: 24 (R6)
0x02CC	0xB2EE    UXTB	R6, R5
0x02CE	0x1C63    ADDS	R3, R4, #1
; i end address is: 16 (R4)
; i start address is: 28 (R7)
0x02D0	0xB29F    UXTH	R7, R3
;__nbiot_driver.c, 264 :: 		c2 = ct[j++];
0x02D2	0xEB000308  ADD	R3, R0, R8, LSL #0
0x02D6	0x781C    LDRB	R4, [R3, #0]
; c2 start address is: 36 (R9)
0x02D8	0xFA5FF984  UXTB	R9, R4
0x02DC	0xF1080801  ADD	R8, R8, #1
0x02E0	0xFA1FF888  UXTH	R8, R8
;__nbiot_driver.c, 266 :: 		if (c1 != c2)
0x02E4	0x42A5    CMP	R5, R4
0x02E6	0xD007    BEQ	L___nbiot_driver__strncmp3
; ct end address is: 0 (R0)
; cs end address is: 4 (R1)
; i end address is: 28 (R7)
; j end address is: 32 (R8)
; count end address is: 8 (R2)
;__nbiot_driver.c, 268 :: 		return c1 < c2 ? -1 : 1;
0x02E8	0x454E    CMP	R6, R9
0x02EA	0xD202    BCS	L___nbiot_driver__strncmp4
; c1 end address is: 24 (R6)
; c2 end address is: 36 (R9)
; ?FLOC____nbiot_driver__strncmp?T44 start address is: 0 (R0)
0x02EC	0x20FF    MOVS	R0, #-1
0x02EE	0xB240    SXTB	R0, R0
; ?FLOC____nbiot_driver__strncmp?T44 end address is: 0 (R0)
0x02F0	0xE001    B	L___nbiot_driver__strncmp5
L___nbiot_driver__strncmp4:
; ?FLOC____nbiot_driver__strncmp?T44 start address is: 0 (R0)
0x02F2	0x2001    MOVS	R0, #1
0x02F4	0xB240    SXTB	R0, R0
; ?FLOC____nbiot_driver__strncmp?T44 end address is: 0 (R0)
L___nbiot_driver__strncmp5:
; ?FLOC____nbiot_driver__strncmp?T44 start address is: 0 (R0)
; ?FLOC____nbiot_driver__strncmp?T44 end address is: 0 (R0)
0x02F6	0xE007    B	L_end__strncmp
;__nbiot_driver.c, 269 :: 		}
L___nbiot_driver__strncmp3:
;__nbiot_driver.c, 270 :: 		if (0 == c1)
; count start address is: 8 (R2)
; j start address is: 32 (R8)
; i start address is: 28 (R7)
; c1 start address is: 24 (R6)
; cs start address is: 4 (R1)
; ct start address is: 0 (R0)
0x02F8	0xB906    CBNZ	R6, L___nbiot_driver__strncmp6
; ct end address is: 0 (R0)
; cs end address is: 4 (R1)
; c1 end address is: 24 (R6)
; i end address is: 28 (R7)
; j end address is: 32 (R8)
; count end address is: 8 (R2)
;__nbiot_driver.c, 272 :: 		break;
0x02FA	0xE003    B	L___nbiot_driver__strncmp2
;__nbiot_driver.c, 273 :: 		}
L___nbiot_driver__strncmp6:
;__nbiot_driver.c, 274 :: 		count--;
; count start address is: 8 (R2)
; j start address is: 32 (R8)
; i start address is: 28 (R7)
; cs start address is: 4 (R1)
; ct start address is: 0 (R0)
0x02FC	0x1E52    SUBS	R2, R2, #1
0x02FE	0xB292    UXTH	R2, R2
;__nbiot_driver.c, 275 :: 		}
; ct end address is: 0 (R0)
; cs end address is: 4 (R1)
; i end address is: 28 (R7)
; j end address is: 32 (R8)
; count end address is: 8 (R2)
0x0300	0xB2BC    UXTH	R4, R7
0x0302	0xE7E0    B	L___nbiot_driver__strncmp1
L___nbiot_driver__strncmp2:
;__nbiot_driver.c, 276 :: 		return 0;
0x0304	0x2000    MOVS	R0, #0
0x0306	0xB240    SXTB	R0, R0
;__nbiot_driver.c, 277 :: 		}
L_end__strncmp:
0x0308	0x4770    BX	LR
; end of __nbiot_driver__strncmp
__nbiot_driver__strncpy:
;__nbiot_driver.c, 279 :: 		static void _strncpy(uint8_t *dest, uint8_t *src, uint16_t count)
; count start address is: 8 (R2)
; src start address is: 4 (R1)
; dest start address is: 0 (R0)
0x0B90	0xB081    SUB	SP, SP, #4
; count end address is: 8 (R2)
; src end address is: 4 (R1)
; dest end address is: 0 (R0)
; dest start address is: 0 (R0)
; src start address is: 4 (R1)
; count start address is: 8 (R2)
;__nbiot_driver.c, 281 :: 		char *tmp  = dest;
; tmp start address is: 16 (R4)
0x0B92	0x4604    MOV	R4, R0
; dest end address is: 0 (R0)
;__nbiot_driver.c, 283 :: 		uint16_t i = 0;
; i start address is: 0 (R0)
0x0B94	0xF2400000  MOVW	R0, #0
; src end address is: 4 (R1)
; count end address is: 8 (R2)
; i end address is: 0 (R0)
; tmp end address is: 16 (R4)
0x0B98	0xF8AD2000  STRH	R2, [SP, #0]
0x0B9C	0xB282    UXTH	R2, R0
0x0B9E	0x4608    MOV	R0, R1
0x0BA0	0xF8BD1000  LDRH	R1, [SP, #0]
;__nbiot_driver.c, 285 :: 		while (0 != count)
L___nbiot_driver__strncpy7:
; i start address is: 8 (R2)
; src start address is: 0 (R0)
; tmp start address is: 16 (R4)
; count start address is: 4 (R1)
; src start address is: 0 (R0)
; src end address is: 0 (R0)
0x0BA4	0xB159    CBZ	R1, L___nbiot_driver__strncpy8
; src end address is: 0 (R0)
;__nbiot_driver.c, 287 :: 		if (0 != (*tmp = src[i]))
; src start address is: 0 (R0)
0x0BA6	0x1883    ADDS	R3, R0, R2
0x0BA8	0x781B    LDRB	R3, [R3, #0]
0x0BAA	0x7023    STRB	R3, [R4, #0]
0x0BAC	0x7823    LDRB	R3, [R4, #0]
0x0BAE	0xB113    CBZ	R3, L___nbiot_driver__strncpy92
;__nbiot_driver.c, 289 :: 		i++;
0x0BB0	0x1C52    ADDS	R2, R2, #1
0x0BB2	0xB292    UXTH	R2, R2
; i end address is: 8 (R2)
;__nbiot_driver.c, 290 :: 		}
0x0BB4	0xE7FF    B	L___nbiot_driver__strncpy9
L___nbiot_driver__strncpy92:
;__nbiot_driver.c, 287 :: 		if (0 != (*tmp = src[i]))
;__nbiot_driver.c, 290 :: 		}
L___nbiot_driver__strncpy9:
;__nbiot_driver.c, 291 :: 		tmp++;
; i start address is: 8 (R2)
0x0BB6	0x1C64    ADDS	R4, R4, #1
;__nbiot_driver.c, 292 :: 		count--;
0x0BB8	0x1E49    SUBS	R1, R1, #1
0x0BBA	0xB289    UXTH	R1, R1
;__nbiot_driver.c, 293 :: 		}
; src end address is: 0 (R0)
; i end address is: 8 (R2)
; tmp end address is: 16 (R4)
; count end address is: 4 (R1)
0x0BBC	0xE7F2    B	L___nbiot_driver__strncpy7
L___nbiot_driver__strncpy8:
;__nbiot_driver.c, 294 :: 		}
L_end__strncpy:
0x0BBE	0xB001    ADD	SP, SP, #4
0x0BC0	0x4770    BX	LR
; end of __nbiot_driver__strncpy
__nbiot_driver_locateHandler:
;__nbiot_driver.c, 420 :: 		static uint16_t locateHandler( char* pCmd )
; pCmd start address is: 0 (R0)
0x0B38	0xB081    SUB	SP, SP, #4
0x0B3A	0xF8CDE000  STR	LR, [SP, #0]
0x0B3E	0x4604    MOV	R4, R0
; pCmd end address is: 0 (R0)
; pCmd start address is: 16 (R4)
;__nbiot_driver.c, 427 :: 		len = _strlen(pCmd);
0x0B40	0x4620    MOV	R0, R4
0x0B42	0xF7FFFB5D  BL	__nbiot_driver__strlen+0
; len start address is: 20 (R5)
0x0B46	0xB2C5    UXTB	R5, R0
;__nbiot_driver.c, 428 :: 		hash = generateHash(pCmd);
0x0B48	0x4620    MOV	R0, R4
; pCmd end address is: 16 (R4)
0x0B4A	0xF000FB9B  BL	__nbiot_driver_generateHash+0
; hash start address is: 0 (R0)
;__nbiot_driver.c, 430 :: 		for (idx = 1; idx < hdlBuff.idx; idx++)
; idx start address is: 16 (R4)
0x0B4E	0x2401    MOVS	R4, #1
; len end address is: 20 (R5)
; idx end address is: 16 (R4)
0x0B50	0xB2EB    UXTB	R3, R5
L___nbiot_driver_locateHandler27:
; idx start address is: 16 (R4)
; len start address is: 12 (R3)
; hash start address is: 0 (R0)
; hash end address is: 0 (R0)
; len start address is: 12 (R3)
; len end address is: 12 (R3)
0x0B52	0x490D    LDR	R1, [PC, #52]
0x0B54	0x8809    LDRH	R1, [R1, #0]
0x0B56	0x428C    CMP	R4, R1
0x0B58	0xD211    BCS	L___nbiot_driver_locateHandler28
; hash end address is: 0 (R0)
; len end address is: 12 (R3)
;__nbiot_driver.c, 432 :: 		if (hdlBuff.storage[idx].len == len)
; len start address is: 12 (R3)
; hash start address is: 0 (R0)
0x0B5A	0x0122    LSLS	R2, R4, #4
0x0B5C	0x490B    LDR	R1, [PC, #44]
0x0B5E	0x1889    ADDS	R1, R1, R2
0x0B60	0x8809    LDRH	R1, [R1, #0]
0x0B62	0x4299    CMP	R1, R3
0x0B64	0xD108    BNE	L___nbiot_driver_locateHandler30
;__nbiot_driver.c, 434 :: 		if (hdlBuff.storage[idx].hash == hash)
0x0B66	0x0122    LSLS	R2, R4, #4
0x0B68	0x4908    LDR	R1, [PC, #32]
0x0B6A	0x1889    ADDS	R1, R1, R2
0x0B6C	0x1D09    ADDS	R1, R1, #4
0x0B6E	0x6809    LDR	R1, [R1, #0]
0x0B70	0x4281    CMP	R1, R0
0x0B72	0xD101    BNE	L___nbiot_driver_locateHandler31
; hash end address is: 0 (R0)
; len end address is: 12 (R3)
;__nbiot_driver.c, 436 :: 		return idx;
0x0B74	0xB2A0    UXTH	R0, R4
; idx end address is: 16 (R4)
0x0B76	0xE003    B	L_end_locateHandler
;__nbiot_driver.c, 437 :: 		}
L___nbiot_driver_locateHandler31:
;__nbiot_driver.c, 438 :: 		}
; idx start address is: 16 (R4)
; len start address is: 12 (R3)
; hash start address is: 0 (R0)
L___nbiot_driver_locateHandler30:
;__nbiot_driver.c, 430 :: 		for (idx = 1; idx < hdlBuff.idx; idx++)
0x0B78	0x1C64    ADDS	R4, R4, #1
0x0B7A	0xB2A4    UXTH	R4, R4
;__nbiot_driver.c, 439 :: 		}
; hash end address is: 0 (R0)
; len end address is: 12 (R3)
; idx end address is: 16 (R4)
0x0B7C	0xE7E9    B	L___nbiot_driver_locateHandler27
L___nbiot_driver_locateHandler28:
;__nbiot_driver.c, 441 :: 		return 0;
0x0B7E	0x2000    MOVS	R0, #0
;__nbiot_driver.c, 442 :: 		}
L_end_locateHandler:
0x0B80	0xF8DDE000  LDR	LR, [SP, #0]
0x0B84	0xB001    ADD	SP, SP, #4
0x0B86	0x4770    BX	LR
0x0B88	0x024C2000  	__nbiot_driver_hdlBuff+0
0x0B8C	0x02502000  	__nbiot_driver_hdlBuff+4
; end of __nbiot_driver_locateHandler
__nbiot_driver_transmitCommand:
;__nbiot_driver.c, 389 :: 		static void transmitCommand( uint8_t *pInput, uint8_t delimiter )
; pInput start address is: 0 (R0)
0x10F4	0xB084    SUB	SP, SP, #16
0x10F6	0xF8CDE000  STR	LR, [SP, #0]
0x10FA	0xF88D100C  STRB	R1, [SP, #12]
; pInput end address is: 0 (R0)
; pInput start address is: 0 (R0)
; pInput end address is: 0 (R0)
;__nbiot_driver.c, 391 :: 		while (0 != *pInput)
L___nbiot_driver_transmitCommand18:
; pInput start address is: 0 (R0)
0x10FE	0x7802    LDRB	R2, [R0, #0]
0x1100	0xB302    CBZ	R2, L___nbiot_driver_transmitCommand19
;__nbiot_driver.c, 393 :: 		if (0!= f_hfc_active)
0x1102	0x4A16    LDR	R2, [PC, #88]
0x1104	0x7812    LDRB	R2, [R2, #0]
0x1106	0xB19A    CBZ	R2, L___nbiot_driver_transmitCommand93
; pInput end address is: 0 (R0)
0x1108	0x4601    MOV	R1, R0
;__nbiot_driver.c, 395 :: 		while (MODULE_BUSY())
L___nbiot_driver_transmitCommand21:
; pInput start address is: 4 (R1)
; pInput start address is: 4 (R1)
; pInput end address is: 4 (R1)
0x110A	0xF7FFFDC9  BL	__nbiot_driver_DCE_getState+0
0x110E	0xB120    CBZ	R0, L___nbiot_driver_transmitCommand23
; pInput end address is: 4 (R1)
; pInput start address is: 4 (R1)
0x1110	0x2200    MOVS	R2, #0
0x1112	0xB252    SXTB	R2, R2
0x1114	0xF88D2008  STRB	R2, [SP, #8]
0x1118	0xE003    B	L___nbiot_driver_transmitCommand24
L___nbiot_driver_transmitCommand23:
0x111A	0x2201    MOVS	R2, #1
0x111C	0xB252    SXTB	R2, R2
0x111E	0xF88D2008  STRB	R2, [SP, #8]
L___nbiot_driver_transmitCommand24:
0x1122	0xF99D2008  LDRSB	R2, [SP, #8]
0x1126	0xB10A    CBZ	R2, L___nbiot_driver_transmitCommand22
;__nbiot_driver.c, 397 :: 		asm nop;
0x1128	0xBF00    NOP
;__nbiot_driver.c, 398 :: 		}
0x112A	0xE7EE    B	L___nbiot_driver_transmitCommand21
L___nbiot_driver_transmitCommand22:
;__nbiot_driver.c, 399 :: 		}
0x112C	0x4608    MOV	R0, R1
0x112E	0xE7FF    B	L___nbiot_driver_transmitCommand20
; pInput end address is: 4 (R1)
L___nbiot_driver_transmitCommand93:
;__nbiot_driver.c, 393 :: 		if (0!= f_hfc_active)
;__nbiot_driver.c, 399 :: 		}
L___nbiot_driver_transmitCommand20:
;__nbiot_driver.c, 400 :: 		hal_uartWrite(*pInput++);
; pInput start address is: 0 (R0)
0x1130	0x7802    LDRB	R2, [R0, #0]
0x1132	0x9001    STR	R0, [SP, #4]
0x1134	0xB2D0    UXTB	R0, R2
0x1136	0xF7FFFD85  BL	__nbiot_driver_hal_uartWrite+0
0x113A	0x9801    LDR	R0, [SP, #4]
0x113C	0x1C42    ADDS	R2, R0, #1
; pInput end address is: 0 (R0)
; pInput start address is: 4 (R1)
0x113E	0x4611    MOV	R1, R2
;__nbiot_driver.c, 401 :: 		}
0x1140	0x4608    MOV	R0, R1
; pInput end address is: 4 (R1)
0x1142	0xE7DC    B	L___nbiot_driver_transmitCommand18
L___nbiot_driver_transmitCommand19:
;__nbiot_driver.c, 402 :: 		hal_uartWrite(delimiter);
0x1144	0xF89D000C  LDRB	R0, [SP, #12]
0x1148	0xF7FFFD7C  BL	__nbiot_driver_hal_uartWrite+0
;__nbiot_driver.c, 403 :: 		hal_uartWrite('\n');
0x114C	0x200A    MOVS	R0, #10
0x114E	0xF7FFFD79  BL	__nbiot_driver_hal_uartWrite+0
;__nbiot_driver.c, 404 :: 		}
L_end_transmitCommand:
0x1152	0xF8DDE000  LDR	LR, [SP, #0]
0x1156	0xB004    ADD	SP, SP, #16
0x1158	0x4770    BX	LR
0x115A	0xBF00    NOP
0x115C	0x022F2000  	__nbiot_driver_f_hfc_active+0
; end of __nbiot_driver_transmitCommand
__nbiot_driver_DCE_getState:
;__nbiot_driver.c, 157 :: 		static int DCE_getState()
;__nbiot_driver.c, 161 :: 		}
L_end_DCE_getState:
0x0CA0	0x4770    BX	LR
; end of __nbiot_driver_DCE_getState
__nbiot_driver_hal_uartWrite:
;__hal_stm32.c, 142 :: 		static void hal_uartWrite(uint8_t input)
; input start address is: 0 (R0)
0x0C44	0xB081    SUB	SP, SP, #4
0x0C46	0xF8CDE000  STR	LR, [SP, #0]
; input end address is: 0 (R0)
; input start address is: 0 (R0)
;__hal_stm32.c, 144 :: 		fp_uartWrite(input);
; input end address is: 0 (R0)
0x0C4A	0x4C03    LDR	R4, [PC, #12]
0x0C4C	0x6824    LDR	R4, [R4, #0]
0x0C4E	0x47A0    BLX	R4
;__hal_stm32.c, 145 :: 		}
L_end_hal_uartWrite:
0x0C50	0xF8DDE000  LDR	LR, [SP, #0]
0x0C54	0xB001    ADD	SP, SP, #4
0x0C56	0x4770    BX	LR
0x0C58	0x02482000  	__nbiot_driver_fp_uartWrite+0
; end of __nbiot_driver_hal_uartWrite
_applicationTask:
;Click_NBIoT_STM.c, 131 :: 		void applicationTask()
0x1BA0	0xB081    SUB	SP, SP, #4
0x1BA2	0xF8CDE000  STR	LR, [SP, #0]
;Click_NBIoT_STM.c, 133 :: 		nbiot_process();
0x1BA6	0xF7FFF9DB  BL	_nbiot_process+0
;Click_NBIoT_STM.c, 134 :: 		}
L_end_applicationTask:
0x1BAA	0xF8DDE000  LDR	LR, [SP, #0]
0x1BAE	0xB001    ADD	SP, SP, #4
0x1BB0	0x4770    BX	LR
; end of _applicationTask
__Lib_System_105_107_InitialSetUpRCCRCC2:
;__Lib_System_105_107.c, 383 :: 		
0x1EBC	0xB081    SUB	SP, SP, #4
0x1EBE	0xF8CDE000  STR	LR, [SP, #0]
;__Lib_System_105_107.c, 386 :: 		
; ulRCC_CR start address is: 8 (R2)
0x1EC2	0x4A46    LDR	R2, [PC, #280]
;__Lib_System_105_107.c, 387 :: 		
; ulRCC_CFGR start address is: 12 (R3)
0x1EC4	0x4B46    LDR	R3, [PC, #280]
;__Lib_System_105_107.c, 388 :: 		
; ulRCC_CFGR2 start address is: 16 (R4)
0x1EC6	0x4C47    LDR	R4, [PC, #284]
;__Lib_System_105_107.c, 389 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1EC8	0x4947    LDR	R1, [PC, #284]
;__Lib_System_105_107.c, 396 :: 		
0x1ECA	0xF64B3080  MOVW	R0, #48000
0x1ECE	0x4281    CMP	R1, R0
0x1ED0	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC232
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 397 :: 		
0x1ED2	0x4846    LDR	R0, [PC, #280]
0x1ED4	0x6800    LDR	R0, [R0, #0]
0x1ED6	0xF0400102  ORR	R1, R0, #2
0x1EDA	0x4844    LDR	R0, [PC, #272]
0x1EDC	0x6001    STR	R1, [R0, #0]
0x1EDE	0xE011    B	L___Lib_System_105_107_InitialSetUpRCCRCC233
L___Lib_System_105_107_InitialSetUpRCCRCC232:
;__Lib_System_105_107.c, 398 :: 		
; Fosc_kHz start address is: 4 (R1)
0x1EE0	0xF64550C0  MOVW	R0, #24000
0x1EE4	0x4281    CMP	R1, R0
0x1EE6	0xD906    BLS	L___Lib_System_105_107_InitialSetUpRCCRCC234
; Fosc_kHz end address is: 4 (R1)
;__Lib_System_105_107.c, 399 :: 		
0x1EE8	0x4840    LDR	R0, [PC, #256]
0x1EEA	0x6800    LDR	R0, [R0, #0]
0x1EEC	0xF0400101  ORR	R1, R0, #1
0x1EF0	0x483E    LDR	R0, [PC, #248]
0x1EF2	0x6001    STR	R1, [R0, #0]
0x1EF4	0xE006    B	L___Lib_System_105_107_InitialSetUpRCCRCC235
L___Lib_System_105_107_InitialSetUpRCCRCC234:
;__Lib_System_105_107.c, 401 :: 		
0x1EF6	0x483D    LDR	R0, [PC, #244]
0x1EF8	0x6801    LDR	R1, [R0, #0]
0x1EFA	0xF06F0007  MVN	R0, #7
0x1EFE	0x4001    ANDS	R1, R0
0x1F00	0x483A    LDR	R0, [PC, #232]
0x1F02	0x6001    STR	R1, [R0, #0]
L___Lib_System_105_107_InitialSetUpRCCRCC235:
L___Lib_System_105_107_InitialSetUpRCCRCC233:
;__Lib_System_105_107.c, 403 :: 		
0x1F04	0xF7FFFE56  BL	__Lib_System_105_107_SystemClockSetDefault+0
;__Lib_System_105_107.c, 405 :: 		
0x1F08	0x4839    LDR	R0, [PC, #228]
0x1F0A	0x6003    STR	R3, [R0, #0]
;__Lib_System_105_107.c, 406 :: 		
0x1F0C	0x4839    LDR	R0, [PC, #228]
0x1F0E	0x6004    STR	R4, [R0, #0]
; ulRCC_CFGR2 end address is: 16 (R4)
;__Lib_System_105_107.c, 407 :: 		
0x1F10	0x4839    LDR	R0, [PC, #228]
0x1F12	0xEA020100  AND	R1, R2, R0, LSL #0
0x1F16	0x4839    LDR	R0, [PC, #228]
0x1F18	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 409 :: 		
0x1F1A	0xF0020001  AND	R0, R2, #1
0x1F1E	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC253
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x1F20	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 410 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC237:
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1F22	0x4836    LDR	R0, [PC, #216]
0x1F24	0x6800    LDR	R0, [R0, #0]
0x1F26	0xF0000002  AND	R0, R0, #2
0x1F2A	0x2800    CMP	R0, #0
0x1F2C	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC238
;__Lib_System_105_107.c, 411 :: 		
0x1F2E	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC237
L___Lib_System_105_107_InitialSetUpRCCRCC238:
;__Lib_System_105_107.c, 412 :: 		
; ulRCC_CFGR end address is: 4 (R1)
0x1F30	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC236
; ulRCC_CR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC253:
;__Lib_System_105_107.c, 409 :: 		
0x1F32	0x4619    MOV	R1, R3
;__Lib_System_105_107.c, 412 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC236:
;__Lib_System_105_107.c, 414 :: 		
; ulRCC_CFGR start address is: 4 (R1)
; ulRCC_CR start address is: 8 (R2)
0x1F34	0xF4023080  AND	R0, R2, #65536
0x1F38	0xB140    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC254
; ulRCC_CR end address is: 8 (R2)
; ulRCC_CFGR end address is: 4 (R1)
0x1F3A	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 415 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC240:
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x1F3C	0x482F    LDR	R0, [PC, #188]
0x1F3E	0x6800    LDR	R0, [R0, #0]
0x1F40	0xF4003000  AND	R0, R0, #131072
0x1F44	0x2800    CMP	R0, #0
0x1F46	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC241
;__Lib_System_105_107.c, 416 :: 		
0x1F48	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC240
L___Lib_System_105_107_InitialSetUpRCCRCC241:
;__Lib_System_105_107.c, 417 :: 		
; ulRCC_CR end address is: 8 (R2)
0x1F4A	0xE000    B	L___Lib_System_105_107_InitialSetUpRCCRCC239
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC254:
;__Lib_System_105_107.c, 414 :: 		
0x1F4C	0x460B    MOV	R3, R1
;__Lib_System_105_107.c, 417 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC239:
;__Lib_System_105_107.c, 419 :: 		
; ulRCC_CR start address is: 8 (R2)
; ulRCC_CFGR start address is: 12 (R3)
0x1F4E	0xF0025080  AND	R0, R2, #268435456
0x1F52	0xB168    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC255
;__Lib_System_105_107.c, 420 :: 		
0x1F54	0x4829    LDR	R0, [PC, #164]
0x1F56	0x6800    LDR	R0, [R0, #0]
0x1F58	0xF0405180  ORR	R1, R0, #268435456
0x1F5C	0x4827    LDR	R0, [PC, #156]
0x1F5E	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
;__Lib_System_105_107.c, 421 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC243:
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x1F60	0x4826    LDR	R0, [PC, #152]
0x1F62	0x6800    LDR	R0, [R0, #0]
0x1F64	0xF0005000  AND	R0, R0, #536870912
0x1F68	0x2800    CMP	R0, #0
0x1F6A	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC244
;__Lib_System_105_107.c, 422 :: 		
0x1F6C	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC243
L___Lib_System_105_107_InitialSetUpRCCRCC244:
;__Lib_System_105_107.c, 423 :: 		
; ulRCC_CR end address is: 8 (R2)
0x1F6E	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC242
; ulRCC_CFGR end address is: 12 (R3)
L___Lib_System_105_107_InitialSetUpRCCRCC255:
;__Lib_System_105_107.c, 419 :: 		
;__Lib_System_105_107.c, 423 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC242:
;__Lib_System_105_107.c, 425 :: 		
; ulRCC_CFGR start address is: 12 (R3)
; ulRCC_CR start address is: 8 (R2)
0x1F70	0xF0026080  AND	R0, R2, #67108864
0x1F74	0xB178    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC256
;__Lib_System_105_107.c, 426 :: 		
0x1F76	0x4821    LDR	R0, [PC, #132]
0x1F78	0x6800    LDR	R0, [R0, #0]
0x1F7A	0xF0406180  ORR	R1, R0, #67108864
0x1F7E	0x481F    LDR	R0, [PC, #124]
0x1F80	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 12 (R3)
; ulRCC_CR end address is: 8 (R2)
0x1F82	0x4611    MOV	R1, R2
0x1F84	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 427 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC246:
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x1F86	0x481D    LDR	R0, [PC, #116]
0x1F88	0x6800    LDR	R0, [R0, #0]
0x1F8A	0xF0006000  AND	R0, R0, #134217728
0x1F8E	0x2800    CMP	R0, #0
0x1F90	0xD100    BNE	L___Lib_System_105_107_InitialSetUpRCCRCC247
;__Lib_System_105_107.c, 428 :: 		
0x1F92	0xE7F8    B	L___Lib_System_105_107_InitialSetUpRCCRCC246
L___Lib_System_105_107_InitialSetUpRCCRCC247:
;__Lib_System_105_107.c, 429 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x1F94	0xE001    B	L___Lib_System_105_107_InitialSetUpRCCRCC245
; ulRCC_CR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC256:
;__Lib_System_105_107.c, 425 :: 		
0x1F96	0x4611    MOV	R1, R2
0x1F98	0x461A    MOV	R2, R3
;__Lib_System_105_107.c, 429 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC245:
;__Lib_System_105_107.c, 431 :: 		
; ulRCC_CR start address is: 4 (R1)
; ulRCC_CFGR start address is: 8 (R2)
0x1F9A	0xF0017080  AND	R0, R1, #16777216
; ulRCC_CR end address is: 4 (R1)
0x1F9E	0xB170    CBZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC257
;__Lib_System_105_107.c, 432 :: 		
0x1FA0	0x4816    LDR	R0, [PC, #88]
0x1FA2	0x6800    LDR	R0, [R0, #0]
0x1FA4	0xF0407180  ORR	R1, R0, #16777216
0x1FA8	0x4814    LDR	R0, [PC, #80]
0x1FAA	0x6001    STR	R1, [R0, #0]
; ulRCC_CFGR end address is: 8 (R2)
0x1FAC	0x4611    MOV	R1, R2
;__Lib_System_105_107.c, 433 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC249:
; ulRCC_CFGR start address is: 4 (R1)
0x1FAE	0x4813    LDR	R0, [PC, #76]
0x1FB0	0x6800    LDR	R0, [R0, #0]
0x1FB2	0xF0007000  AND	R0, R0, #33554432
0x1FB6	0xB900    CBNZ	R0, L___Lib_System_105_107_InitialSetUpRCCRCC250
;__Lib_System_105_107.c, 434 :: 		
0x1FB8	0xE7F9    B	L___Lib_System_105_107_InitialSetUpRCCRCC249
L___Lib_System_105_107_InitialSetUpRCCRCC250:
;__Lib_System_105_107.c, 435 :: 		
0x1FBA	0x460A    MOV	R2, R1
0x1FBC	0xE7FF    B	L___Lib_System_105_107_InitialSetUpRCCRCC248
; ulRCC_CFGR end address is: 4 (R1)
L___Lib_System_105_107_InitialSetUpRCCRCC257:
;__Lib_System_105_107.c, 431 :: 		
;__Lib_System_105_107.c, 435 :: 		
L___Lib_System_105_107_InitialSetUpRCCRCC248:
;__Lib_System_105_107.c, 439 :: 		
; ulRCC_CFGR start address is: 8 (R2)
; ulRCC_CFGR end address is: 8 (R2)
L___Lib_System_105_107_InitialSetUpRCCRCC251:
; ulRCC_CFGR start address is: 8 (R2)
0x1FBE	0x480C    LDR	R0, [PC, #48]
0x1FC0	0x6800    LDR	R0, [R0, #0]
0x1FC2	0xF000010C  AND	R1, R0, #12
0x1FC6	0x0090    LSLS	R0, R2, #2
0x1FC8	0xF000000C  AND	R0, R0, #12
0x1FCC	0x4281    CMP	R1, R0
0x1FCE	0xD000    BEQ	L___Lib_System_105_107_InitialSetUpRCCRCC252
;__Lib_System_105_107.c, 440 :: 		
; ulRCC_CFGR end address is: 8 (R2)
0x1FD0	0xE7F5    B	L___Lib_System_105_107_InitialSetUpRCCRCC251
L___Lib_System_105_107_InitialSetUpRCCRCC252:
;__Lib_System_105_107.c, 441 :: 		
L_end_InitialSetUpRCCRCC2:
0x1FD2	0xF8DDE000  LDR	LR, [SP, #0]
0x1FD6	0xB001    ADD	SP, SP, #4
0x1FD8	0x4770    BX	LR
0x1FDA	0xBF00    NOP
0x1FDC	0x00810501  	#83951745
0x1FE0	0x8402001D  	#1934338
0x1FE4	0x06440001  	#67140
0x1FE8	0x19400001  	#72000
0x1FEC	0x20004002  	FLASH_ACR+0
0x1FF0	0x10044002  	RCC_CFGR+0
0x1FF4	0x102C4002  	RCC_CFGR2+0
0x1FF8	0xFFFF000F  	#1048575
0x1FFC	0x10004002  	RCC_CR+0
; end of __Lib_System_105_107_InitialSetUpRCCRCC2
__Lib_System_105_107_SystemClockSetDefault:
;__Lib_System_105_107.c, 356 :: 		
0x1BB4	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 359 :: 		
0x1BB6	0x4815    LDR	R0, [PC, #84]
0x1BB8	0x6800    LDR	R0, [R0, #0]
0x1BBA	0xF0400101  ORR	R1, R0, #1
0x1BBE	0x4813    LDR	R0, [PC, #76]
0x1BC0	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 362 :: 		
0x1BC2	0x4913    LDR	R1, [PC, #76]
0x1BC4	0x4813    LDR	R0, [PC, #76]
0x1BC6	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 365 :: 		
0x1BC8	0x4810    LDR	R0, [PC, #64]
0x1BCA	0x6801    LDR	R1, [R0, #0]
0x1BCC	0x4812    LDR	R0, [PC, #72]
0x1BCE	0x4001    ANDS	R1, R0
0x1BD0	0x480E    LDR	R0, [PC, #56]
0x1BD2	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 368 :: 		
0x1BD4	0x480D    LDR	R0, [PC, #52]
0x1BD6	0x6801    LDR	R1, [R0, #0]
0x1BD8	0xF46F2080  MVN	R0, #262144
0x1BDC	0x4001    ANDS	R1, R0
0x1BDE	0x480B    LDR	R0, [PC, #44]
0x1BE0	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 371 :: 		
0x1BE2	0x480C    LDR	R0, [PC, #48]
0x1BE4	0x6801    LDR	R1, [R0, #0]
0x1BE6	0xF46F00FE  MVN	R0, #8323072
0x1BEA	0x4001    ANDS	R1, R0
0x1BEC	0x4809    LDR	R0, [PC, #36]
0x1BEE	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 374 :: 		
0x1BF0	0x4806    LDR	R0, [PC, #24]
0x1BF2	0x6801    LDR	R1, [R0, #0]
0x1BF4	0xF06F50A0  MVN	R0, #335544320
0x1BF8	0x4001    ANDS	R1, R0
0x1BFA	0x4804    LDR	R0, [PC, #16]
0x1BFC	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 377 :: 		
0x1BFE	0xF04F0100  MOV	R1, #0
0x1C02	0x4806    LDR	R0, [PC, #24]
0x1C04	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 381 :: 		
L_end_SystemClockSetDefault:
0x1C06	0xB001    ADD	SP, SP, #4
0x1C08	0x4770    BX	LR
0x1C0A	0xBF00    NOP
0x1C0C	0x10004002  	RCC_CR+0
0x1C10	0x0000F0FF  	#-251723776
0x1C14	0x10044002  	RCC_CFGR+0
0x1C18	0xFFFFFEF6  	#-17367041
0x1C1C	0x102C4002  	RCC_CFGR2+0
; end of __Lib_System_105_107_SystemClockSetDefault
__Lib_System_105_107_InitialSetUpFosc:
;__Lib_System_105_107.c, 443 :: 		
0x2000	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 444 :: 		
0x2002	0x4902    LDR	R1, [PC, #8]
0x2004	0x4802    LDR	R0, [PC, #8]
0x2006	0x6001    STR	R1, [R0, #0]
;__Lib_System_105_107.c, 445 :: 		
L_end_InitialSetUpFosc:
0x2008	0xB001    ADD	SP, SP, #4
0x200A	0x4770    BX	LR
0x200C	0x19400001  	#72000
0x2010	0x02342000  	___System_CLOCK_IN_KHZ+0
; end of __Lib_System_105_107_InitialSetUpFosc
___GenExcept:
;__Lib_System_105_107.c, 307 :: 		
0x1EB4	0xB081    SUB	SP, SP, #4
;__Lib_System_105_107.c, 308 :: 		
L___GenExcept28:
0x1EB6	0xE7FE    B	L___GenExcept28
;__Lib_System_105_107.c, 309 :: 		
L_end___GenExcept:
0x1EB8	0xB001    ADD	SP, SP, #4
0x1EBA	0x4770    BX	LR
; end of ___GenExcept
0x242C	0xB500    PUSH	(R14)
0x242E	0xF8DFB014  LDR	R11, [PC, #20]
0x2432	0xF8DFA014  LDR	R10, [PC, #20]
0x2436	0xF8DFC014  LDR	R12, [PC, #20]
0x243A	0xF7FFFC3F  BL	7356
0x243E	0xBD00    POP	(R15)
0x2440	0x4770    BX	LR
0x2442	0xBF00    NOP
0x2444	0x00002000  	#536870912
0x2448	0x022F2000  	#536871471
0x244C	0x20140000  	#8212
0x24AC	0xB500    PUSH	(R14)
0x24AE	0xF8DFB010  LDR	R11, [PC, #16]
0x24B2	0xF8DFA010  LDR	R10, [PC, #16]
0x24B6	0xF7FFFCBF  BL	7736
0x24BA	0xBD00    POP	(R15)
0x24BC	0x4770    BX	LR
0x24BE	0xBF00    NOP
0x24C0	0x00002000  	#536870912
0x24C4	0x067C2000  	#536872572
_Timer_interrupt:
;click_nbiot_timer.h, 26 :: 		void Timer_interrupt() iv IVT_INT_TIM2
0x1E74	0xB081    SUB	SP, SP, #4
0x1E76	0xF8CDE000  STR	LR, [SP, #0]
;click_nbiot_timer.h, 28 :: 		nbiot_tick();
0x1E7A	0xF7FFFED1  BL	_nbiot_tick+0
;click_nbiot_timer.h, 29 :: 		TIM2_SR.UIF = 0;
0x1E7E	0x2100    MOVS	R1, #0
0x1E80	0xB249    SXTB	R1, R1
0x1E82	0x4803    LDR	R0, [PC, #12]
0x1E84	0x6001    STR	R1, [R0, #0]
;click_nbiot_timer.h, 30 :: 		}
L_end_Timer_interrupt:
0x1E86	0xF8DDE000  LDR	LR, [SP, #0]
0x1E8A	0xB001    ADD	SP, SP, #4
0x1E8C	0x4770    BX	LR
0x1E8E	0xBF00    NOP
0x1E90	0x02004200  	TIM2_SR+0
; end of _Timer_interrupt
_nbiot_tick:
;__nbiot_driver.c, 569 :: 		void nbiot_tick()
;__nbiot_driver.c, 571 :: 		if (f_watchdog_active)
0x1C20	0x481C    LDR	R0, [PC, #112]
0x1C22	0x7800    LDRB	R0, [R0, #0]
0x1C24	0xB1C8    CBZ	R0, L_nbiot_tick47
;__nbiot_driver.c, 573 :: 		if (c_watchdog_timer++ > currentEv.wDogLimit)
0x1C26	0x481C    LDR	R0, [PC, #112]
0x1C28	0x6802    LDR	R2, [R0, #0]
0x1C2A	0x481B    LDR	R0, [PC, #108]
0x1C2C	0x6800    LDR	R0, [R0, #0]
0x1C2E	0x1C41    ADDS	R1, R0, #1
0x1C30	0x4819    LDR	R0, [PC, #100]
0x1C32	0x6001    STR	R1, [R0, #0]
0x1C34	0x4819    LDR	R0, [PC, #100]
0x1C36	0x6800    LDR	R0, [R0, #0]
0x1C38	0x4282    CMP	R2, R0
0x1C3A	0xD90E    BLS	L_nbiot_tick48
;__nbiot_driver.c, 575 :: 		f_watchdog_active = false;
0x1C3C	0x2100    MOVS	R1, #0
0x1C3E	0x4815    LDR	R0, [PC, #84]
0x1C40	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 576 :: 		c_watchdog_timer = 0;
0x1C42	0x2100    MOVS	R1, #0
0x1C44	0x4814    LDR	R0, [PC, #80]
0x1C46	0x6001    STR	R1, [R0, #0]
;__nbiot_driver.c, 577 :: 		rxBuff.storage[rxBuff.idx] = 0;
0x1C48	0x4815    LDR	R0, [PC, #84]
0x1C4A	0x8801    LDRH	R1, [R0, #0]
0x1C4C	0x4815    LDR	R0, [PC, #84]
0x1C4E	0x1841    ADDS	R1, R0, R1
0x1C50	0x2000    MOVS	R0, #0
0x1C52	0x7008    STRB	R0, [R1, #0]
;__nbiot_driver.c, 578 :: 		f_wdog_timeout = true;
0x1C54	0x2101    MOVS	R1, #1
0x1C56	0x4814    LDR	R0, [PC, #80]
0x1C58	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 579 :: 		}
L_nbiot_tick48:
;__nbiot_driver.c, 580 :: 		}
L_nbiot_tick47:
;__nbiot_driver.c, 581 :: 		if (f_timer_active)
0x1C5A	0x4814    LDR	R0, [PC, #80]
0x1C5C	0x7800    LDRB	R0, [R0, #0]
0x1C5E	0xB1C0    CBZ	R0, L_nbiot_tick49
;__nbiot_driver.c, 583 :: 		if (c_timer++ > _NBIOT_TIMER_LIMIT)
0x1C60	0x4813    LDR	R0, [PC, #76]
0x1C62	0x6802    LDR	R2, [R0, #0]
0x1C64	0x4812    LDR	R0, [PC, #72]
0x1C66	0x6800    LDR	R0, [R0, #0]
0x1C68	0x1C41    ADDS	R1, R0, #1
0x1C6A	0x4811    LDR	R0, [PC, #68]
0x1C6C	0x6001    STR	R1, [R0, #0]
0x1C6E	0x4811    LDR	R0, [PC, #68]
0x1C70	0x4282    CMP	R2, R0
0x1C72	0xD90E    BLS	L_nbiot_tick50
;__nbiot_driver.c, 585 :: 		f_timer_active = false;
0x1C74	0x2100    MOVS	R1, #0
0x1C76	0x480D    LDR	R0, [PC, #52]
0x1C78	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 586 :: 		c_timer = 0;
0x1C7A	0x2100    MOVS	R1, #0
0x1C7C	0x480C    LDR	R0, [PC, #48]
0x1C7E	0x6001    STR	R1, [R0, #0]
;__nbiot_driver.c, 587 :: 		rxBuff.storage[rxBuff.idx] = 0;
0x1C80	0x4807    LDR	R0, [PC, #28]
0x1C82	0x8801    LDRH	R1, [R0, #0]
0x1C84	0x4807    LDR	R0, [PC, #28]
0x1C86	0x1841    ADDS	R1, R0, R1
0x1C88	0x2000    MOVS	R0, #0
0x1C8A	0x7008    STRB	R0, [R1, #0]
;__nbiot_driver.c, 588 :: 		f_response_ready = true;
0x1C8C	0x2101    MOVS	R1, #1
0x1C8E	0x480A    LDR	R0, [PC, #40]
0x1C90	0x7001    STRB	R1, [R0, #0]
;__nbiot_driver.c, 589 :: 		}
L_nbiot_tick50:
;__nbiot_driver.c, 590 :: 		}
L_nbiot_tick49:
;__nbiot_driver.c, 591 :: 		}
L_end_nbiot_tick:
0x1C92	0x4770    BX	LR
0x1C94	0x05662000  	__nbiot_driver_f_watchdog_active+0
0x1C98	0x05682000  	__nbiot_driver_c_watchdog_timer+0
0x1C9C	0x05742000  	__nbiot_driver_currentEv+4
0x1CA0	0x04642000  	__nbiot_driver_rxBuff+0
0x1CA4	0x04662000  	__nbiot_driver_rxBuff+2
0x1CA8	0x04632000  	__nbiot_driver_f_wdog_timeout+0
0x1CAC	0x05672000  	__nbiot_driver_f_timer_active+0
0x1CB0	0x056C2000  	__nbiot_driver_c_timer+0
0x1CB4	0x00050000  	__NBIOT_TIMER_LIMIT
0x1CB8	0x04622000  	__nbiot_driver_f_response_ready+0
; end of _nbiot_tick
;Click_NBIoT_STM.c,0 :: ?ICS?lstr1_Click_NBIoT_STM [20]
0x2014	0x202D2D2D ;?ICS?lstr1_Click_NBIoT_STM+0
0x2018	0x74737953 ;?ICS?lstr1_Click_NBIoT_STM+4
0x201C	0x49206D65 ;?ICS?lstr1_Click_NBIoT_STM+8
0x2020	0x2074696E ;?ICS?lstr1_Click_NBIoT_STM+12
0x2024	0x002D2D2D ;?ICS?lstr1_Click_NBIoT_STM+16
; end of ?ICS?lstr1_Click_NBIoT_STM
;,0 :: _initBlock_1 [32]
; Containing: ?ICS?lstr2_Click_NBIoT_STM [27]
;             ?ICS_AT [5]
0x2028	0x202D2D2D ;_initBlock_1+0 : ?ICS?lstr2_Click_NBIoT_STM at 0x2028
0x202C	0x656E6547 ;_initBlock_1+4
0x2030	0x20636972 ;_initBlock_1+8
0x2034	0x63205441 ;_initBlock_1+12
0x2038	0x616D6D6F ;_initBlock_1+16
0x203C	0x2D20646E ;_initBlock_1+20
0x2040	0x41002D2D ;_initBlock_1+24 : ?ICS_AT at 0x2043
0x2044	0x00000054 ;_initBlock_1+28
; end of _initBlock_1
;,0 :: _initBlock_2 [10]
; Containing: ?ICS_ATE [5]
;             ?ICS_ATI [5]
0x2048	0x31455441 ;_initBlock_2+0 : ?ICS_ATE at 0x2048
0x204C	0x49544100 ;_initBlock_2+4 : ?ICS_ATI at 0x204D
0x2050	0x0000 ;_initBlock_2+8
; end of _initBlock_2
;Click_NBIoT_STM.c,0 :: ?ICS_AT_CFUN [10]
0x2052	0x432B5441 ;?ICS_AT_CFUN+0
0x2056	0x3D4E5546 ;?ICS_AT_CFUN+4
0x205A	0x0031 ;?ICS_AT_CFUN+8
; end of ?ICS_AT_CFUN
;Click_NBIoT_STM.c,0 :: ?ICS_AT_CIMI [10]
0x205C	0x432B5441 ;?ICS_AT_CIMI+0
0x2060	0x00494D49 ;?ICS_AT_CIMI+4
0x2064	0x0000 ;?ICS_AT_CIMI+8
; end of ?ICS_AT_CIMI
;,0 :: _initBlock_5 [40]
; Containing: ?ICS_AT_CGDCONT [15]
;             ?ICS?lstr3_Click_NBIoT_STM [25]
0x2066	0x432B5441 ;_initBlock_5+0 : ?ICS_AT_CGDCONT at 0x2066
0x206A	0x4F434447 ;_initBlock_5+4
0x206E	0x003F544E ;_initBlock_5+8
0x2072	0x2D000000 ;_initBlock_5+12 : ?ICS?lstr3_Click_NBIoT_STM at 0x2075
0x2076	0x2D2D2D2D ;_initBlock_5+16
0x207A	0x2D2D2D2D ;_initBlock_5+20
0x207E	0x2D2D2D2D ;_initBlock_5+24
0x2082	0x2D2D2D2D ;_initBlock_5+28
0x2086	0x2D2D2D2D ;_initBlock_5+32
0x208A	0x002D2D2D ;_initBlock_5+36
; end of _initBlock_5
;Click_NBIoT_STM.c,0 :: ?ICS?lstr4_Click_NBIoT_STM [32]
0x208E	0x202D2D2D ;?ICS?lstr4_Click_NBIoT_STM+0
0x2092	0x20504455 ;?ICS?lstr4_Click_NBIoT_STM+4
0x2096	0x76726573 ;?ICS?lstr4_Click_NBIoT_STM+8
0x209A	0x2D207265 ;?ICS?lstr4_Click_NBIoT_STM+12
0x209E	0x20544120 ;?ICS?lstr4_Click_NBIoT_STM+16
0x20A2	0x6D6D6F63 ;?ICS?lstr4_Click_NBIoT_STM+20
0x20A6	0x20646E61 ;?ICS?lstr4_Click_NBIoT_STM+24
0x20AA	0x002D2D2D ;?ICS?lstr4_Click_NBIoT_STM+28
; end of ?ICS?lstr4_Click_NBIoT_STM
;,0 :: _initBlock_7 [140]
; Containing: ?ICS_AT_NCONFIG [45]
;             ?ICS_AT_NCONFIG1 [40]
;             ?ICS_AT_NCONFIG2 [40]
;             ?ICS_AT_NBAND [15]
0x20AE	0x4E2B5441 ;_initBlock_7+0 : ?ICS_AT_NCONFIG at 0x20AE
0x20B2	0x464E4F43 ;_initBlock_7+4
0x20B6	0x433D4749 ;_initBlock_7+8
0x20BA	0x33305F52 ;_initBlock_7+12
0x20BE	0x305F3435 ;_initBlock_7+16
0x20C2	0x5F383333 ;_initBlock_7+20
0x20C6	0x41524353 ;_initBlock_7+24
0x20CA	0x494C424D ;_initBlock_7+28
0x20CE	0x542C474E ;_initBlock_7+32
0x20D2	0x00455552 ;_initBlock_7+36
0x20D6	0x00000000 ;_initBlock_7+40
0x20DA	0x2B544100 ;_initBlock_7+44 : ?ICS_AT_NCONFIG1 at 0x20DB
0x20DE	0x4E4F434E ;_initBlock_7+48
0x20E2	0x3D474946 ;_initBlock_7+52
0x20E6	0x305F5243 ;_initBlock_7+56
0x20EA	0x5F393538 ;_initBlock_7+60
0x20EE	0x415F4953 ;_initBlock_7+64
0x20F2	0x44494F56 ;_initBlock_7+68
0x20F6	0x5552542C ;_initBlock_7+72
0x20FA	0x00000045 ;_initBlock_7+76
0x20FE	0x00000000 ;_initBlock_7+80
0x2102	0x2B544100 ;_initBlock_7+84 : ?ICS_AT_NCONFIG2 at 0x2103
0x2106	0x4E4F434E ;_initBlock_7+88
0x210A	0x3D474946 ;_initBlock_7+92
0x210E	0x4F545541 ;_initBlock_7+96
0x2112	0x4E4E4F43 ;_initBlock_7+100
0x2116	0x2C544345 ;_initBlock_7+104
0x211A	0x534C4146 ;_initBlock_7+108
0x211E	0x00000045 ;_initBlock_7+112
0x2122	0x00000000 ;_initBlock_7+116
0x2126	0x00000000 ;_initBlock_7+120
0x212A	0x2B544100 ;_initBlock_7+124 : ?ICS_AT_NBAND at 0x212B
0x212E	0x4E41424E ;_initBlock_7+128
0x2132	0x00383D44 ;_initBlock_7+132
0x2136	0x00000000 ;_initBlock_7+136
; end of _initBlock_7
;Click_NBIoT_STM.c,0 :: ?ICS_AT_CGDCONT1 [60]
0x213A	0x432B5441 ;?ICS_AT_CGDCONT1+0
0x213E	0x4F434447 ;?ICS_AT_CGDCONT1+4
0x2142	0x313D544E ;?ICS_AT_CGDCONT1+8
0x2146	0x5049222C ;?ICS_AT_CGDCONT1+12
0x214A	0x6D222C22 ;?ICS_AT_CGDCONT1+16
0x214E	0x6C69626F ;?ICS_AT_CGDCONT1+20
0x2152	0x706F5F65 ;?ICS_AT_CGDCONT1+24
0x2156	0x74617265 ;?ICS_AT_CGDCONT1+28
0x215A	0x415F726F ;?ICS_AT_CGDCONT1+32
0x215E	0x00224E50 ;?ICS_AT_CGDCONT1+36
0x2162	0x00000000 ;?ICS_AT_CGDCONT1+40
0x2166	0x00000000 ;?ICS_AT_CGDCONT1+44
0x216A	0x00000000 ;?ICS_AT_CGDCONT1+48
0x216E	0x00000000 ;?ICS_AT_CGDCONT1+52
0x2172	0x00000000 ;?ICS_AT_CGDCONT1+56
; end of ?ICS_AT_CGDCONT1
;,0 :: _initBlock_9 [140]
; Containing: ?ICS_AT_CEREG [15]
;             ?ICS_AT_COPS [30]
;             ?ICS_AT_NSOCR [40]
;             ?ICS_AT_NSOST [40]
;             ?ICS_AT_NSOCL [15]
0x2176	0x432B5441 ;_initBlock_9+0 : ?ICS_AT_CEREG at 0x2176
0x217A	0x47455245 ;_initBlock_9+4
0x217E	0x0000323D ;_initBlock_9+8
0x2182	0x41000000 ;_initBlock_9+12 : ?ICS_AT_COPS at 0x2185
0x2186	0x4F432B54 ;_initBlock_9+16
0x218A	0x313D5350 ;_initBlock_9+20
0x218E	0x222C322C ;_initBlock_9+24
0x2192	0x34333231 ;_initBlock_9+28
0x2196	0x00002235 ;_initBlock_9+32
0x219A	0x00000000 ;_initBlock_9+36
0x219E	0x00000000 ;_initBlock_9+40
0x21A2	0x2B544100 ;_initBlock_9+44 : ?ICS_AT_NSOCR at 0x21A3
0x21A6	0x434F534E ;_initBlock_9+48
0x21AA	0x44203D52 ;_initBlock_9+52
0x21AE	0x4D415247 ;_initBlock_9+56
0x21B2	0x2C37312C ;_initBlock_9+60
0x21B6	0x36363631 ;_initBlock_9+64
0x21BA	0x00312C36 ;_initBlock_9+68
0x21BE	0x00000000 ;_initBlock_9+72
0x21C2	0x00000000 ;_initBlock_9+76
0x21C6	0x00000000 ;_initBlock_9+80
0x21CA	0x2B544100 ;_initBlock_9+84 : ?ICS_AT_NSOST at 0x21CB
0x21CE	0x534F534E ;_initBlock_9+88
0x21D2	0x2C303D54 ;_initBlock_9+92
0x21D6	0x352E3338 ;_initBlock_9+96
0x21DA	0x32322E38 ;_initBlock_9+100
0x21DE	0x34362E38 ;_initBlock_9+104
0x21E2	0x3636312C ;_initBlock_9+108
0x21E6	0x322C3636 ;_initBlock_9+112
0x21EA	0x4342412C ;_initBlock_9+116
0x21EE	0x00000044 ;_initBlock_9+120
0x21F2	0x2B544100 ;_initBlock_9+124 : ?ICS_AT_NSOCL at 0x21F3
0x21F6	0x434F534E ;_initBlock_9+128
0x21FA	0x00303D4C ;_initBlock_9+132
0x21FE	0x00000000 ;_initBlock_9+136
; end of _initBlock_9
;,0 :: _initBlock_10 [46]
; Containing: ?ICS?lstr5_Click_NBIoT_STM [25]
;             ?ICS__nbiot_driver_LUT_START_MARK [21]
0x2202	0x2D2D2D2D ;_initBlock_10+0 : ?ICS?lstr5_Click_NBIoT_STM at 0x2202
0x2206	0x2D2D2D2D ;_initBlock_10+4
0x220A	0x2D2D2D2D ;_initBlock_10+8
0x220E	0x2D2D2D2D ;_initBlock_10+12
0x2212	0x2D2D2D2D ;_initBlock_10+16
0x2216	0x2D2D2D2D ;_initBlock_10+20
0x221A	0x00000000 ;_initBlock_10+24 : ?ICS__nbiot_driver_LUT_START_MARK at 0x221B
0x221E	0x2300002B ;_initBlock_10+28
0x2222	0x00240000 ;_initBlock_10+32
0x2226	0x005C2500 ;_initBlock_10+36
0x222A	0x00000026 ;_initBlock_10+40
0x222E	0x0000 ;_initBlock_10+44
; end of _initBlock_10
;__nbiot_driver.c,0 :: ?ICS__nbiot_driver_LUT_END_MARK [18]
0x2230	0x3D000000 ;?ICS__nbiot_driver_LUT_END_MARK+0
0x2234	0x003F003F ;?ICS__nbiot_driver_LUT_END_MARK+4
0x2238	0x00003D00 ;?ICS__nbiot_driver_LUT_END_MARK+8
0x223C	0x0D00003A ;?ICS__nbiot_driver_LUT_END_MARK+12
0x2240	0x0000 ;?ICS__nbiot_driver_LUT_END_MARK+16
; end of ?ICS__nbiot_driver_LUT_END_MARK
;__nbiot_driver.c,0 :: ?ICS?lstr1___nbiot_driver [1]
0x2242	0x00 ;?ICS?lstr1___nbiot_driver+0
; end of ?ICS?lstr1___nbiot_driver
;__Lib_GPIO_32F10x_Defs.c,726 :: __GPIO_MODULE_USART3_PD89 [108]
0x2244	0x00000038 ;__GPIO_MODULE_USART3_PD89+0
0x2248	0x00000039 ;__GPIO_MODULE_USART3_PD89+4
0x224C	0xFFFFFFFF ;__GPIO_MODULE_USART3_PD89+8
0x2250	0x00000000 ;__GPIO_MODULE_USART3_PD89+12
0x2254	0x00000000 ;__GPIO_MODULE_USART3_PD89+16
0x2258	0x00000000 ;__GPIO_MODULE_USART3_PD89+20
0x225C	0x00000000 ;__GPIO_MODULE_USART3_PD89+24
0x2260	0x00000000 ;__GPIO_MODULE_USART3_PD89+28
0x2264	0x00000000 ;__GPIO_MODULE_USART3_PD89+32
0x2268	0x00000000 ;__GPIO_MODULE_USART3_PD89+36
0x226C	0x00000000 ;__GPIO_MODULE_USART3_PD89+40
0x2270	0x00000000 ;__GPIO_MODULE_USART3_PD89+44
0x2274	0x00000000 ;__GPIO_MODULE_USART3_PD89+48
0x2278	0x00000818 ;__GPIO_MODULE_USART3_PD89+52
0x227C	0x00000018 ;__GPIO_MODULE_USART3_PD89+56
0x2280	0x00000000 ;__GPIO_MODULE_USART3_PD89+60
0x2284	0x00000000 ;__GPIO_MODULE_USART3_PD89+64
0x2288	0x00000000 ;__GPIO_MODULE_USART3_PD89+68
0x228C	0x00000000 ;__GPIO_MODULE_USART3_PD89+72
0x2290	0x00000000 ;__GPIO_MODULE_USART3_PD89+76
0x2294	0x00000000 ;__GPIO_MODULE_USART3_PD89+80
0x2298	0x00000000 ;__GPIO_MODULE_USART3_PD89+84
0x229C	0x00000000 ;__GPIO_MODULE_USART3_PD89+88
0x22A0	0x00000000 ;__GPIO_MODULE_USART3_PD89+92
0x22A4	0x00000000 ;__GPIO_MODULE_USART3_PD89+96
0x22A8	0x00000000 ;__GPIO_MODULE_USART3_PD89+100
0x22AC	0x08140030 ;__GPIO_MODULE_USART3_PD89+104
; end of __GPIO_MODULE_USART3_PD89
;__Lib_GPIO_32F10x_Defs.c,696 :: __GPIO_MODULE_USART1_PA9_10 [108]
0x22B0	0x00000009 ;__GPIO_MODULE_USART1_PA9_10+0
0x22B4	0x0000000A ;__GPIO_MODULE_USART1_PA9_10+4
0x22B8	0xFFFFFFFF ;__GPIO_MODULE_USART1_PA9_10+8
0x22BC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+12
0x22C0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+16
0x22C4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+20
0x22C8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+24
0x22CC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+28
0x22D0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+32
0x22D4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+36
0x22D8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+40
0x22DC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+44
0x22E0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+48
0x22E4	0x00000818 ;__GPIO_MODULE_USART1_PA9_10+52
0x22E8	0x00000018 ;__GPIO_MODULE_USART1_PA9_10+56
0x22EC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+60
0x22F0	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+64
0x22F4	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+68
0x22F8	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+72
0x22FC	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+76
0x2300	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+80
0x2304	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+84
0x2308	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+88
0x230C	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+92
0x2310	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+96
0x2314	0x00000000 ;__GPIO_MODULE_USART1_PA9_10+100
0x2318	0x00000004 ;__GPIO_MODULE_USART1_PA9_10+104
; end of __GPIO_MODULE_USART1_PA9_10
;__Lib_GPIO_32F10x_Defs.c,711 :: __GPIO_MODULE_USART2_PD56 [108]
0x231C	0x00000035 ;__GPIO_MODULE_USART2_PD56+0
0x2320	0x00000036 ;__GPIO_MODULE_USART2_PD56+4
0x2324	0xFFFFFFFF ;__GPIO_MODULE_USART2_PD56+8
0x2328	0x00000000 ;__GPIO_MODULE_USART2_PD56+12
0x232C	0x00000000 ;__GPIO_MODULE_USART2_PD56+16
0x2330	0x00000000 ;__GPIO_MODULE_USART2_PD56+20
0x2334	0x00000000 ;__GPIO_MODULE_USART2_PD56+24
0x2338	0x00000000 ;__GPIO_MODULE_USART2_PD56+28
0x233C	0x00000000 ;__GPIO_MODULE_USART2_PD56+32
0x2340	0x00000000 ;__GPIO_MODULE_USART2_PD56+36
0x2344	0x00000000 ;__GPIO_MODULE_USART2_PD56+40
0x2348	0x00000000 ;__GPIO_MODULE_USART2_PD56+44
0x234C	0x00000000 ;__GPIO_MODULE_USART2_PD56+48
0x2350	0x00000818 ;__GPIO_MODULE_USART2_PD56+52
0x2354	0x00000018 ;__GPIO_MODULE_USART2_PD56+56
0x2358	0x00000000 ;__GPIO_MODULE_USART2_PD56+60
0x235C	0x00000000 ;__GPIO_MODULE_USART2_PD56+64
0x2360	0x00000000 ;__GPIO_MODULE_USART2_PD56+68
0x2364	0x00000000 ;__GPIO_MODULE_USART2_PD56+72
0x2368	0x00000000 ;__GPIO_MODULE_USART2_PD56+76
0x236C	0x00000000 ;__GPIO_MODULE_USART2_PD56+80
0x2370	0x00000000 ;__GPIO_MODULE_USART2_PD56+84
0x2374	0x00000000 ;__GPIO_MODULE_USART2_PD56+88
0x2378	0x00000000 ;__GPIO_MODULE_USART2_PD56+92
0x237C	0x00000000 ;__GPIO_MODULE_USART2_PD56+96
0x2380	0x00000000 ;__GPIO_MODULE_USART2_PD56+100
0x2384	0x08000008 ;__GPIO_MODULE_USART2_PD56+104
; end of __GPIO_MODULE_USART2_PD56
;easymx_v7_STM32F107VC.c,47 :: __MIKROBUS1_GPIO [96]
0x2388	0x0000178D ;__MIKROBUS1_GPIO+0
0x238C	0x0000181D ;__MIKROBUS1_GPIO+4
0x2390	0x00001829 ;__MIKROBUS1_GPIO+8
0x2394	0x00001835 ;__MIKROBUS1_GPIO+12
0x2398	0x00001811 ;__MIKROBUS1_GPIO+16
0x239C	0x00001805 ;__MIKROBUS1_GPIO+20
0x23A0	0x000017B1 ;__MIKROBUS1_GPIO+24
0x23A4	0x000017BD ;__MIKROBUS1_GPIO+28
0x23A8	0x00001799 ;__MIKROBUS1_GPIO+32
0x23AC	0x000017A5 ;__MIKROBUS1_GPIO+36
0x23B0	0x000017C9 ;__MIKROBUS1_GPIO+40
0x23B4	0x000017ED ;__MIKROBUS1_GPIO+44
0x23B8	0xFFFFFFFF ;__MIKROBUS1_GPIO+48
0x23BC	0xFFFFFFFF ;__MIKROBUS1_GPIO+52
0x23C0	0xFFFFFFFF ;__MIKROBUS1_GPIO+56
0x23C4	0xFFFFFFFF ;__MIKROBUS1_GPIO+60
0x23C8	0xFFFFFFFF ;__MIKROBUS1_GPIO+64
0x23CC	0xFFFFFFFF ;__MIKROBUS1_GPIO+68
0x23D0	0xFFFFFFFF ;__MIKROBUS1_GPIO+72
0x23D4	0xFFFFFFFF ;__MIKROBUS1_GPIO+76
0x23D8	0xFFFFFFFF ;__MIKROBUS1_GPIO+80
0x23DC	0xFFFFFFFF ;__MIKROBUS1_GPIO+84
0x23E0	0xFFFFFFFF ;__MIKROBUS1_GPIO+88
0x23E4	0xFFFFFFFF ;__MIKROBUS1_GPIO+92
; end of __MIKROBUS1_GPIO
;__nbiot_driver.c,0 :: ?ICS__nbiot_driver_createEvent_tmp_L0 [17]
0x23E8	0x00000000 ;?ICS__nbiot_driver_createEvent_tmp_L0+0
0x23EC	0x00000000 ;?ICS__nbiot_driver_createEvent_tmp_L0+4
0x23F0	0x00000000 ;?ICS__nbiot_driver_createEvent_tmp_L0+8
0x23F4	0x00000000 ;?ICS__nbiot_driver_createEvent_tmp_L0+12
0x23F8	0x00 ;?ICS__nbiot_driver_createEvent_tmp_L0+16
; end of ?ICS__nbiot_driver_createEvent_tmp_L0
;Click_NBIoT_STM.c,8 :: __NBIOT_UART_CFG [16]
0x23FC	0x00002580 ;__NBIOT_UART_CFG+0
0x2400	0x00000000 ;__NBIOT_UART_CFG+4
0x2404	0x00000000 ;__NBIOT_UART_CFG+8
0x2408	0x00000000 ;__NBIOT_UART_CFG+12
; end of __NBIOT_UART_CFG
;__Lib_System_105_107.c,447 :: __Lib_System_105_107_APBAHBPrescTable [16]
0x240C	0x00000000 ;__Lib_System_105_107_APBAHBPrescTable+0
0x2410	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+4
0x2414	0x04030201 ;__Lib_System_105_107_APBAHBPrescTable+8
0x2418	0x09080706 ;__Lib_System_105_107_APBAHBPrescTable+12
; end of __Lib_System_105_107_APBAHBPrescTable
;easymx_v7_STM32F107VC.c,15 :: __MIKROBUS1_UART [12]
0x241C	0x00000CC1 ;__MIKROBUS1_UART+0
0x2420	0x00000629 ;__MIKROBUS1_UART+4
0x2424	0x000005E1 ;__MIKROBUS1_UART+8
; end of __MIKROBUS1_UART
;__Lib_System_105_107.c,448 :: __Lib_System_105_107_ADCPrescTable [4]
0x2428	0x08060402 ;__Lib_System_105_107_ADCPrescTable+0
; end of __Lib_System_105_107_ADCPrescTable
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0150      [12]    _Get_Fosc_kHz
0x015C     [152]    __Lib_GPIO_32F10x_GPIO_Configure_Pin
0x01F4      [12]    __Lib_UART_123_45_UARTx_Tx_Idle
0x0200      [34]    __nbiot_driver__strlen
0x0224     [140]    _GPIO_Clk_Enable
0x02B0      [90]    __nbiot_driver__strncmp
0x030C      [22]    __Lib_UART_123_45_UARTx_Read
0x0324     [168]    _RCC_GetClocksFrequency
0x03CC     [272]    _GPIO_Alternate_Function_Enable
0x04DC      [12]    __Lib_UART_123_45_UARTx_Data_Ready
0x04E8      [24]    _UART4_Tx_Idle
0x0500      [24]    _UART5_Read
0x0518      [24]    _UART4_Data_Ready
0x0530      [30]    __Lib_UART_123_45_UARTx_Write
0x0550      [24]    _UART4_Read
0x0568      [24]    _UART1_Tx_Idle
0x0580      [24]    _UART2_Read
0x0598      [24]    _UART1_Read
0x05B0      [24]    _UART1_Data_Ready
0x05C8      [24]    _UART2_Data_Ready
0x05E0      [24]    _UART3_Data_Ready
0x05F8      [24]    _UART3_Tx_Idle
0x0610      [24]    _UART2_Tx_Idle
0x0628      [24]    _UART3_Read
0x0640     [190]    __nbiot_driver_searchLut
0x0700     [580]    __Lib_UART_123_45_UARTx_Init_Advanced
0x0944     [500]    _GPIO_Config
0x0B38      [88]    __nbiot_driver_locateHandler
0x0B90      [50]    __nbiot_driver__strncpy
0x0BC4      [24]    _UART5_Tx_Idle
0x0BDC      [24]    _UART5_Data_Ready
0x0BF4      [24]    _GPIO_Digital_Input
0x0C0C      [28]    __nbiot_driver_hal_uartRead
0x0C28      [28]    _GPIO_Digital_Output
0x0C44      [24]    __nbiot_driver_hal_uartWrite
0x0C5C      [28]    __nbiot_driver_hal_uartReady
0x0C78      [40]    _UART1_Init_Advanced
0x0CA0       [2]    __nbiot_driver_DCE_getState
0x0CA4      [28]    _UART2_Write
0x0CC0      [28]    _UART3_Write
0x0CDC      [28]    _UART1_Write
0x0CF8     [124]    _nbiot_putc
0x0D74      [28]    _UART4_Write
0x0D90      [40]    _UART3_Init_Advanced
0x0DB8     [212]    __nbiot_driver_createEvent
0x0E8C      [40]    _UART2_Init_Advanced
0x0EB4      [28]    _UART5_Write
0x0ED0      [12]    easymx_v7_STM32F107VC__setINT_2
0x0EDC      [12]    easymx_v7_STM32F107VC__setRX_2
0x0EE8      [12]    easymx_v7_STM32F107VC__setTX_2
0x0EF4      [12]    easymx_v7_STM32F107VC__setPWM_2
0x0F00      [12]    easymx_v7_STM32F107VC__setSCK_2
0x0F0C      [12]    easymx_v7_STM32F107VC__setMISO_2
0x0F18      [12]    easymx_v7_STM32F107VC__setMOSI_2
0x0F24      [12]    easymx_v7_STM32F107VC__setSCL_2
0x0F30      [46]    __nbiot_driver__strcpy
0x0F60     [404]    _nbiot_process
0x10F4     [108]    __nbiot_driver_transmitCommand
0x1160      [20]    _nbiot_default_handler
0x1174      [12]    easymx_v7_STM32F107VC__setSDA_2
0x1180      [24]    _Delay_100ms
0x1198      [24]    _Delay_1sec
0x11B0      [14]    _EnableInterrupts
0x11C0     [120]    _NVIC_IntEnable
0x1238      [32]    easymx_v7_STM32F107VC__log_write
0x1258      [40]    __nbiot_driver_hal_uartMap
0x1280       [2]    __nbiot_driver_DTE_setState
0x1284      [46]    __nbiot_driver_generateHash
0x12B4      [24]    __nbiot_driver_hal_gpioMap
0x12CC      [56]    easymx_v7_STM32F107VC__log_initUartB
0x1304      [56]    easymx_v7_STM32F107VC__uartInit_1
0x133C     [440]    easymx_v7_STM32F107VC__gpioInit_2
0x14F4     [440]    easymx_v7_STM32F107VC__gpioInit_1
0x16AC      [56]    easymx_v7_STM32F107VC__uartInit_2
0x16E4      [56]    easymx_v7_STM32F107VC__log_initUartA
0x171C      [56]    easymx_v7_STM32F107VC__log_init2
0x1754      [56]    easymx_v7_STM32F107VC__log_init1
0x178C      [12]    easymx_v7_STM32F107VC__setAN_1
0x1798      [12]    easymx_v7_STM32F107VC__setRX_1
0x17A4      [12]    easymx_v7_STM32F107VC__setTX_1
0x17B0      [12]    easymx_v7_STM32F107VC__setPWM_1
0x17BC      [12]    easymx_v7_STM32F107VC__setINT_1
0x17C8      [12]    easymx_v7_STM32F107VC__setSCL_1
0x17D4      [12]    easymx_v7_STM32F107VC__setRST_2
0x17E0      [12]    easymx_v7_STM32F107VC__setCS_2
0x17EC      [12]    easymx_v7_STM32F107VC__setSDA_1
0x17F8      [12]    easymx_v7_STM32F107VC__setAN_2
0x1804      [12]    easymx_v7_STM32F107VC__setMOSI_1
0x1810      [12]    easymx_v7_STM32F107VC__setMISO_1
0x181C      [12]    easymx_v7_STM32F107VC__setRST_1
0x1828      [12]    easymx_v7_STM32F107VC__setCS_1
0x1834      [12]    easymx_v7_STM32F107VC__setSCK_1
0x1840      [46]    _mikrobus_uartInit
0x1870      [66]    _mikrobus_gpioInit
0x18B4      [48]    _nbiot_modulePower
0x18E4      [12]    _nbiot_hfcEnable
0x18F0      [70]    _mikrobus_logInit
0x1938     [112]    _mikrobus_logWrite
0x19A8      [88]    Click_NBIoT_STM_nbiot_configTimer
0x1A00      [28]    _nbiot_uartDriverInit
0x1A1C     [236]    _nbiot_coreInit
0x1B08     [152]    _nbiot_cmdSingle
0x1BA0      [18]    _applicationTask
0x1BB4     [108]    __Lib_System_105_107_SystemClockSetDefault
0x1C20     [156]    _nbiot_tick
0x1CBC      [20]    ___CC2DW
0x1CD0      [72]    _systemInit
0x1D18     [288]    _applicationInit
0x1E38      [58]    ___FillZeros
0x1E74      [32]    _Timer_interrupt
0x1E94      [32]    _main
0x1EB4       [8]    ___GenExcept
0x1EBC     [324]    __Lib_System_105_107_InitialSetUpRCCRCC2
0x2000      [20]    __Lib_System_105_107_InitialSetUpFosc
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x20000000      [20]    ?lstr1_Click_NBIoT_STM
0x20000014      [27]    ?lstr2_Click_NBIoT_STM
0x2000002F       [5]    _AT
0x20000034       [5]    _ATE
0x20000039       [5]    _ATI
0x2000003E      [10]    _AT_CFUN
0x20000048      [10]    _AT_CIMI
0x20000052      [15]    _AT_CGDCONT
0x20000061      [25]    ?lstr3_Click_NBIoT_STM
0x2000007A      [32]    ?lstr4_Click_NBIoT_STM
0x2000009A      [45]    _AT_NCONFIG
0x200000C7      [40]    _AT_NCONFIG1
0x200000EF      [40]    _AT_NCONFIG2
0x20000117      [15]    _AT_NBAND
0x20000126      [60]    _AT_CGDCONT1
0x20000162      [15]    _AT_CEREG
0x20000171      [30]    _AT_COPS
0x2000018F      [40]    _AT_NSOCR
0x200001B7      [40]    _AT_NSOST
0x200001DF      [15]    _AT_NSOCL
0x200001EE      [25]    ?lstr5_Click_NBIoT_STM
0x20000207      [21]    __nbiot_driver_LUT_START_MARK
0x2000021C      [18]    __nbiot_driver_LUT_END_MARK
0x2000022E       [1]    ?lstr1___nbiot_driver
0x2000022F       [1]    __nbiot_driver_f_hfc_active
0x20000230       [4]    _logger
0x20000234       [4]    ___System_CLOCK_IN_KHZ
0x20000238       [4]    _UART_Wr_Ptr
0x2000023C       [4]    _UART_Rd_Ptr
0x20000240       [4]    _UART_Rdy_Ptr
0x20000244       [4]    _UART_Tx_Idle_Ptr
0x20000248       [4]    __nbiot_driver_fp_uartWrite
0x2000024C     [516]    __nbiot_driver_hdlBuff
0x20000450       [4]    __nbiot_driver_hal_gpio_rstSet
0x20000454       [4]    __nbiot_driver_hal_gpio_anSet
0x20000458       [4]    __nbiot_driver_fp_uartRead
0x2000045C       [4]    __nbiot_driver_fp_uartReady
0x20000460       [1]    __nbiot_driver_f_sequence_active
0x20000461       [1]    __nbiot_driver_f_buffer_warning
0x20000462       [1]    __nbiot_driver_f_response_ready
0x20000463       [1]    __nbiot_driver_f_wdog_timeout
0x20000464     [258]    __nbiot_driver_rxBuff
0x20000566       [1]    __nbiot_driver_f_watchdog_active
0x20000567       [1]    __nbiot_driver_f_timer_active
0x20000568       [4]    __nbiot_driver_c_watchdog_timer
0x2000056C       [4]    __nbiot_driver_c_timer
0x20000570      [12]    __nbiot_driver_currentEv
0x2000057C     [256]    __nbiot_driver_txBuff
//** Constants locations ** 
//ADDRESS    SIZE    CONSTANT
//----------------------------------------------
0x2014      [20]    ?ICS?lstr1_Click_NBIoT_STM
0x2028      [27]    ?ICS?lstr2_Click_NBIoT_STM
0x2043       [5]    ?ICS_AT
0x2048       [5]    ?ICS_ATE
0x204D       [5]    ?ICS_ATI
0x2052      [10]    ?ICS_AT_CFUN
0x205C      [10]    ?ICS_AT_CIMI
0x2066      [15]    ?ICS_AT_CGDCONT
0x2075      [25]    ?ICS?lstr3_Click_NBIoT_STM
0x208E      [32]    ?ICS?lstr4_Click_NBIoT_STM
0x20AE      [45]    ?ICS_AT_NCONFIG
0x20DB      [40]    ?ICS_AT_NCONFIG1
0x2103      [40]    ?ICS_AT_NCONFIG2
0x212B      [15]    ?ICS_AT_NBAND
0x213A      [60]    ?ICS_AT_CGDCONT1
0x2176      [15]    ?ICS_AT_CEREG
0x2185      [30]    ?ICS_AT_COPS
0x21A3      [40]    ?ICS_AT_NSOCR
0x21CB      [40]    ?ICS_AT_NSOST
0x21F3      [15]    ?ICS_AT_NSOCL
0x2202      [25]    ?ICS?lstr5_Click_NBIoT_STM
0x221B      [21]    ?ICS__nbiot_driver_LUT_START_MARK
0x2230      [18]    ?ICS__nbiot_driver_LUT_END_MARK
0x2242       [1]    ?ICS?lstr1___nbiot_driver
0x2244     [108]    __GPIO_MODULE_USART3_PD89
0x22B0     [108]    __GPIO_MODULE_USART1_PA9_10
0x231C     [108]    __GPIO_MODULE_USART2_PD56
0x2388      [96]    __MIKROBUS1_GPIO
0x23E8      [17]    ?ICS__nbiot_driver_createEvent_tmp_L0
0x23FC      [16]    __NBIOT_UART_CFG
0x240C      [16]    __Lib_System_105_107_APBAHBPrescTable
0x241C      [12]    __MIKROBUS1_UART
0x2428       [4]    __Lib_System_105_107_ADCPrescTable
